{"version":3,"sources":["webpack:///./source/src/app/components/Apis/Details/ApiContext.jsx","webpack:///./source/src/app/components/Shared/InlineMessage.jsx","webpack:///./source/src/app/components/Apis/Listing/StarRatingBar.jsx","webpack:///./source/src/app/data/stringFormatter.js","webpack:///./source/src/app/components/Shared/AppsAndKeys/ViewToken.jsx","webpack:///./source/src/app/components/Apis/Listing/Background.jsx","webpack:///./source/src/app/components/Apis/Listing/APICards/ImageGenerator.jsx","webpack:///./source/src/app/components/Shared/AppsAndKeys/Tokens.jsx","webpack:///./source/src/app/components/Shared/AppsAndKeys/ViewSecret.jsx","webpack:///./source/src/app/components/Apis/Details/StarRatingSummary.jsx","webpack:///./source/src/app/components/Shared/withSettingsContext.jsx","webpack:///./source/src/app/components/Apis/Listing/APICards/LetterGenerator.jsx","webpack:///./source/src/app/components/Apis/Listing/APICards/ApiThumbClassic.jsx","webpack:///./source/src/app/components/Apis/Listing/APICards/ImageUtils.js","webpack:///./source/src/app/components/Apis/Listing/APICards/APIThumbPlain.jsx","webpack:///./source/src/app/components/Apis/Listing/ApiThumb.jsx","webpack:///./source/src/app/components/Apis/Listing/ApiTagThumb.jsx","webpack:///./source/src/app/components/Apis/Listing/TagCloudListingTags.jsx","webpack:///./source/src/app/components/Apis/Listing/NoApi.jsx","webpack:///./source/src/app/components/Shared/LeftMenuItem.jsx","webpack:///./source/src/app/components/Apis/Listing/TagCloudListing.jsx","webpack:///./source/src/app/components/Shared/AppsAndKeys/SubscribeToApi.jsx","webpack:///./source/src/app/components/Apis/Listing/ApiBreadcrumbs.jsx","webpack:///./source/src/app/components/Apis/Listing/APICards/DocThumb.jsx","webpack:///./source/src/app/components/Apis/Listing/ApiTableView.jsx","webpack:///./source/src/app/components/Apis/Listing/APICategoryThumb.jsx","webpack:///./source/src/app/components/Apis/Listing/CategoryListingCategories.jsx","webpack:///./source/src/app/components/Apis/Listing/ApiTagCloud.jsx","webpack:///./source/src/app/components/Apis/Listing/RecommendedApiThumb.jsx","webpack:///./source/src/app/components/Apis/Listing/Recommendations.jsx","webpack:///./source/src/app/components/Apis/Listing/CommonListing.jsx","webpack:///./source/src/app/components/Base/Errors/SubscriptionNotFound.jsx","webpack:///./source/src/app/components/Apis/Details/SolaceApi/SolaceTopicStyles.jsx","webpack:///./source/src/app/components/Apis/Details/SolaceApi/SolaceTopicsInfo.jsx","webpack:///./source/src/app/components/Apis/Details/Breadcrumb.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/ButtonPanel.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/CreateAppStep.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/SubscribeToAppStep.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/GenerateKeysStep.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/GenerateAccessTokenStep.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/CopyAccessTokenStep.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/Wizard.jsx","webpack:///./source/src/app/components/Apis/Details/index.jsx","webpack:///./source/src/app/components/Apis/Apis.jsx"],"names":["ApiContext","React","createContext","active","handleMenuSelect","api","applications","subscribedApplications","applicationsAvailable","updateSubscriptionData","InlineMessage","props","type","title","messageType","severity","children","propTypes","classes","PropTypes","shape","isRequired","string","StarRatingBar","Component","constructor","super","this","state","avgRating","userRating","count","total","showEditing","getApiRating","bind","removeUserRating","doRate","toggleEditRating","componentDidMount","componentDidUpdate","prevProps","ratingUpdate","apiId","setRatingUpdate","user","AuthManager","getUser","Api","getRatingFromUser","then","response","setState","body","pagination","rateIndex","intl","ratingInfo","rating","addRating","catch","error","Alert","formatMessage","defaultMessage","id","finally","removeRatingOfUser","prevState","render","isEditable","showSummary","apiRating","apiRatingNumber","parseFloat","reviewCount","returnCount","position","component","onClick","display","style","cursor","fontSize","color","variant","className","rateThis","ml","mb","onClickAway","map","i","area-label","key","starRate","noStarRate","removeRating","closeRating","name","value","precision","readOnly","iconEmpty","iconFilled","gutterBottom","align","defaultProps","theme","bool","oneOfType","number","func","injectIntl","withStyles","custom","infoBar","starColor","palette","grey","A200","starColorEmpty","getContrastText","background","right","spacing","top","justifyContent","alignItems","padding","borderRadius","marginLeft","lineHeight","width","withTheme","capitalizeFirstLetter","charAt","toUpperCase","slice","upperCaseString","ViewToken","tokenCopied","that","elementName","setTimeout","getTokeScopesString","tokenScopes","join","token","consumerSecret","isTokenExchange","isResidenceTokenAvailable","root","secretWrapper","secret","isOauth","epWrapper","for","prodLabel","defaultValue","accessToken","multiline","fullWidth","rows","InputProps","disableUnderline","bootstrapRoot","input","bootstrapInput","InputLabelProps","shrink","bootstrapFormLabel","placement","text","onCopy","aria-label","validityTime","array","marginTop","flex","marginRight","backgroundColor","apiDetailPages","tokenTextBoxBackground","border","height","transition","transitions","create","fontFamily","borderColor","boxShadow","marginBottom","whiteSpace","contentWrapper","maxWidth","contentAreaWidth","leftMenu","paper","aHexToOpacity","aHex","substring","getColorWithoutAlpha","Background","colorPair","thumbnailBoxChild","rects","j","sub","toString","push","fill","fillOpacity","x","y","primeColor","prime","svgImage","aria-hidden","objectFit","ImageGenerator","PureComponent","fixedIcon","category","backgroundIndex","randomBackgroundIndex","IconElement","str","colorPairs","thumbnail","backgrounds","document","icon","MaterialIcons","categories","icons","length","randomIconIndex","charCodeAt","iconWrapper","Icon","MenuProps","PaperProps","maxHeight","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","tokens","handleChange","field","event","accessTokenRequest","updateAccessTokenRequest","newRequest","target","currentTarget","scopesSelected","keyType","subscriptionScopes","margin","FormControlOdd","disabled","htmlFor","quotaHelp","multiple","onChange","e","renderValue","selected","chips","label","chip","scope","contextTypes","FormControl","flexWrap","ViewSecret","secretCopied","common","white","ratingSummary","withSettings","WrappedComponent","context","useStyles","makeStyles","thumbIcon","defaultWidth","Math","ceil","square","char","bgColor","colorMap","offset","textShadow","light","dark","letter","charLightColor","toLowerCase","charNumber","parseInt","String","fromCharCode","r","g","b","Utils","hexToRGBHash","rgbToHex","getColorFromLetter","fallbacks","artifact","charLength","ThumbIcon","Avatar","windowURL","window","URL","webkitURL","ApiThumbClassic","defaultApiImage","selectedIcon","imageObj","isHover","imageLoaded","toggleMouseOver","getAPIThumbnail","data","headers","iconJson","JSON","parse","size","url","createObjectURL","componentWillUnmount","revokeObjectURL","getPathPrefix","path","isMonetizationEnabled","detailsLink","customWidth","customHeight","showInfo","social","showRating","thumbnailTemplates","version","provider","businessInformation","businessOwner","trim","lifeCycleStatus","status","imageWidth","imageHeight","defaultImage","ImageView","src","alt","media","LetterGenerator","iconColor","Card","onMouseOver","onFocus","onMouseOut","onBlur","raised","classNames","card","textblock","monetizationLabel","actionArea","to","CardMedia","area-hidden","app","CardContent","apiDetails","Typography","thumbHeader","handleRedirectToAPIOverview","row","thumbBy","thumbInfo","thumbLeft","thumbRight","contextBox","thumbLeftAction","ratingWrapper","chipWrapper","transportType","chipWrapper2","Chip","undefined","chipWrapper3","gatewayVendor","contextType","contentBackgroundColor","contentPictureOverlap","suppressLinkStyles","textDecoration","thumbContent","alignSelf","flexDirection","overflow","textOverflow","textAlign","thumbWrapper","paddingTop","deleteIcon","textWrapper","secondary","imageWrapper","imageOverlap","bottom","primary","main","getIcon","minWidth","bullet","transform","pos","paddingLeft","caption","imageDisplay","APIThumbPlain","useTheme","imageConf","setImageConf","useState","setIMageObj","setImageLoaded","useEffect","Box","mt","apiType","ApiThumb","ApiTagThumb","tag","mainPage","tagLink","tagWise","image","split","ListItem","button","ListItemIcon","ListItemText","tagCloud","mainTitle","mainTitleWrapper","flexGrow","listContentWrapper","linkTextWrapper","tagWiseThumbWrapper","filterTitle","fontWeight","titleBackground","mainPageList","mainPageAllApis","TagCloudListingTags","showAllApis","allTags","apisTagCloudGroup","filter","item","List","Object","keys","keyInner","Divider","messageWrapper","NoApi","container","xs","noApiImage","useStylesBootstrap","arrow","black","tooltip","BootstrapTooltip","LeftMenuItem","setSelected","history","route","submenu","open","routeToCheck","strokeColor","iconSize","ditectCurrentMenu","location","pathname","test1","RegExp","test2","match","listen","activeBackground","leftMenuActive","leftMenuActiveSubmenu","leftLInk","leftLink_IconLeft","cloneElement","leftLink_Icon","noIcon","iconText","leftLInkText","leftLInkText_IconLeft","leftLInkText_NoText","leftLInkText_NoTextWhenSmall","element","withRouter","textTransform","LeftMenu","typography","left","paddingBottom","breakpoints","down","paddingRight","appBar","borderBottom","mainIconWrapper","content","iconDefault","TagCloudListing","setAllTags","API","getAllTags","list","console","log","strokeColorMain","subscribeToApi","appSelected","setAppSelected","policySelected","setPolicySelected","applicationsList","setApplicationsList","throttlingPolicyList","subscriptionRequest","updateSubscriptionRequest","renderSmall","tierName","applicationId","throttlingPolicy","subscribeRoot","subscribeRootSmall","md","smallDisplay","aria-describedby","options","getOptionLabel","option","renderInput","params","smallDisplayFix","displayEmpty","selectEmpty","policy","appDropDown","tierPlan","Fragment","selectMenuRoot","monetizationAttributes","pricePerRequest","currencyType","fixedPrice","billingCycle","index","arrayOf","titleBar","borderBottomWidth","borderBottomStyle","buttonLeft","buttonRight","buttonsWrapper","legend","inputText","buttonRightLink","link","linkNotActive","selectedTagText","textIndent","apiGroup","ApiBreadcrumbs","selectedTag","Paper","elevation","Breadcrumbs","Link","CustomIcon","DocThumb","doc","sourceType","apiName","apiVersion","apiUUID","minHeight","ApiTableView","gridView","themeAdditions","muiTheme","overrides","MUIDataTable","tableRoot","listView","tableBodyEvenBackgrund","tableBodyOddBackgrund","tableHeadBackground","MUIDataTablePagination","default","MuiMenuItem","MUIDataTableToolbar","MUIDataTableBodyCell","systemTheme","merge","DefaultConfigurations","Configurations","cloneDeep","dataTableTheme","createMuiTheme","loading","xhrRequest","setTenantDomain","code","query","page","rowsPerPage","searchQuery","URLSearchParams","get","composeQuery","queryString","limit","search","getAllAPIs","localStorage","getItem","pageType","getData","columns","customBodyRender","tableMeta","updateValue","tableViewObj","rowData","rowIndex","sort","apiNameLink","filterType","responsive","serverSide","onTableChange","action","tableState","changePage","selectableRows","onChangeRowsPerPage","numberOfRows","pageInner","countInner","setItem","textLabels","toolbar","downloadCsv","print","viewColumns","customRowRender","_data","dataIndex","download","customToolbar","Loading","getMuiTheme","listViewIconSize","APICategoryThumb","categoryLink","categoryDesc","description","Tooltip","listItemText","CategoryListingCategories","allCategories","clickablePointer","ApiTagCloud","colorOptions","useHistory","apisTagWithoutGroups","minSize","maxSize","tags","shuffle","tagSearchURL","handleOnClick","RecommendedApiThumb","unit","Recommendations","assign","getApiRecommendations","rowsPerPageOptions","rowImageOverride","CommonListing","listType","showLeftMenu","enabled","settings","monetizationEnabled","recommendationEnabled","isRecommendationEnabled","defaultApiView","showToggle","restApiClient","apiCategories","tagCloudActive","splits","splitTagArray","tagPaneVisible","categoryPaneVisible","apiListingWrapper","sliderButton","toggleLeftMenu","onKeyDown","LeftMenuForSlider","rotatedText","contentWithoutTags","contentWithTagsHidden","contentWithTags","IconButton","setListType","iconSelected","Provider","Settings","rightIcon","ListingWrapper","listGridSelectedColor","sliderWidth","overflowY","sliderBackground","recommendationsBar","SubscriptionNotFound","Container","Grid","justify","statusText","py","pb","Button","solaceTopicStyles","table","centerItems","leftCol","iconAligner","iconTextWrapper","iconEven","iconOddColor","iconOdd","heading","heading1","emptyBox","summaryRoot","actionPanel","Box2","Box3","urlPaper","avatar","iconStyle","VerbElement","verb","resourceChipColors","customButton","useMenuStyles","disableFocusRipple","SolaceTopicsInfo","apiUuid","useParams","application","setApplication","environment","setEnvironment","selectedProtocol","setSelectedProtocol","envsListOfApplication","setEnvsListOfApplication","selectedEndpoint","setSelectedEndpoint","protocolsListOfEnvironments","setProtocolsListOfEnvironments","topics","setTopics","applicationList","setApplicationList","notFound","setNotFound","urlCopied","setUrlCopied","topicCopied","setTopicCopied","apiTopics","setApiTopics","apiPubTopics","setApiPubTopics","apiSubTopics","setApiSubTopics","useIntl","onTopicCopy","setPubAndSubTopics","allTopics","allApiTopics","apiPubTopicList","publishTopics","t","includes","apiSubTopicList","subscribeTopics","client","promisedApi","getAllTopics","apiTopicList","obj","entry","parts","getSubscriptionAdditionalInfo","appInner","applicationName","solaceDeployedEnvironments","solaceURLs","protocol","endpointURL","SolaceTopicsObject","mqttSyntax","defaultSyntax","ResourceNotFound","setProtocolTopics","selectedEnv","TextField","select","selectedApp","helperText","SelectProps","native","environmentDisplayName","pt","mr","InputBase","inputProps","sizes","interactive","p","mainBack","Breadcrumb","useContext","pages","detectCurrentMenu","locationLocal","VerticalDivider","separator","styles","pl","ButtonPanel","currentStep","handleCurrentStep","handleReset","nextActive","stepsLength","appCreateFormWrapper","warningIcon","APPLICATION_STATES","setThrottlingPolicyList","applicationRequest","setApplicationRequest","tokenType","groups","attributes","isNameValid","setIsNameValid","allAppAttributes","setAllAppAttributes","hasValidKM","setHasValidKM","setCreatedApp","incrementStep","setStepStatus","stepStatuses","apiObject","promiseTiers","getAllTiers","promisedAttributes","getAllApplicationAttributes","promisedKeyManagers","getKeyManagers","Promise","all","tierResponse","allAttributes","keyManagers","throttlingPolicyListLocal","allAppAttr","hidden","responseKeyManagerList","hasValidKMInner","px","ApplicationCreateForm","updateApplicationRequest","validateName","resolve","reject","Error","handleAttributesChange","newApplicationRequest","isRequiredAttribute","attribute","required","getAttributeValue","handleDeleteChip","appGroups","values","v","handleAddChip","createApplication","appCreated","PROCEED","BLOCKED","message","SUBSCRIPTION_STATES","newApp","setNewApp","tiers","createdApp","newSubscriptionRequest","tierData","SubscribeToApi","subscribe","subscriptionId","info","keyConfigWrapper","radioWrapper","subTitle","tabPanel","hr","muiFormGroupRoot","TabPanel","other","role","aria-labelledby","node","generateKeysStep","keyStates","setNextActive","keyManager","setKeyManager","keyRequest","setKeyRequest","supportedGrantTypes","callbackUrl","additionalProperties","setCreatedKeyType","setCreatedSelectedTab","selectedKeyManager","responseKeyManagerListDefault","newKeyRequest","availableGrantTypes","process","lg","FormHelperText","Table","TableBody","TableRow","TableCell","displayName","tokenEndpoint","revokeEndpoint","userInfoEndpoint","gt","grantTypes","m","Application","generateKeys","keyState","tokenWrapper","generateAccessTokenStep","setKeyType","selectedTab","setSelectedTab","setSubscriptionScopes","setAccessTokenRequest","timeout","setCreatedToken","createdKeyType","createdSelectedTab","getKeys","subscriptionScopesList","messages","defineMessages","dataInfo","Tokens","generateToken","stepComponents","CreateAppStep","SubscribeToAppStep","GenerateKeysStep","GenerateAccessTokenStep","createdToken","my","mx","Wizard","stepStatus","steps","redirect","CurrentStepComponent","titleSub","Stepper","activeStep","Step","StepLabel","boxWrapper","handleNext","subscribeTitle","plainContent","instructions","wizardContent","ApiConsole","lazy","GraphQLConsole","AsyncApiConsole","Overview","Documents","Credentials","Comments","Sdk","AsyncApiDefinition","LoadableSwitch","redirectURL","tryoutRoute","CONSTANTS","API_TYPES","WS","WEBSUB","SSE","ASYNC","fallback","Progress","exact","from","Details","callback","existingSubscriptions","promisedApplications","restApi","getAPIById","api_uuid","user1","User","isSideBarOpen","getSubscriptions","subscriptionLimit","subscribeApplicationLimit","getAllApplications","subscriptions","applicationInfo","subscribedAppIds","filteredApp","overviewHiden","xo","setDetailsAPI","handleDrawerClose","handleDrawerOpen","prevApiUuid","newApiUuid","setUser","isAsyncAPI","rootIconSize","rootIconTextVisible","rootIconVisible","showCredentials","showComments","showTryout","showDocuments","showSdks","showAsyncSpecification","showSolaceTopics","prefix","sufix","globalStyle","pathPrefix","isWidget","searchParams","isAsyncApi","Helmet","leftMenuHorizontal","leftMenuVerticalLeft","leftMenuVerticalLeftMinView","leftMenuVerticalRight","leftLInkMain","leftLInkMainText","contentExpandView","contentLoader","contentLoaderRightMenu","shiftToLeft","shiftToRight","shiftToLeftMinView","shiftToRightMinView","leftMenuPaddingLeft","backgroundImage","overflowX","borderRight","rootBackground","detailsContent","shiftLeft"],"mappings":"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","file":"Apis.fdf1eccb253de572570e.bundle.js","sourcesContent":["/* eslint-disable import/prefer-default-export */\n/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\n\nexport const ApiContext = React.createContext({\n    active: 'overview',\n    handleMenuSelect: () => {},\n    api: null,\n    applications: null,\n    subscribedApplications: [],\n    applicationsAvailable: [],\n    updateSubscriptionData: () => {},\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Icon from '@material-ui/core/Icon';\nimport VerticalDivider from './VerticalDivider';\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\n/**\n * Main style object\n *\n * @param {*} theme\n */\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        '& > * + *': {\n            marginTop: theme.spacing(2),\n        },\n    },\n});\n/**\n *  Renders a inline massage\n *\n * @class InlineMessage\n * @extends {React.Component}\n */\nfunction InlineMessage(props) {\n    const { type, title } = props;\n    const messageType = type || 'info';\n    return (\n        <Alert severity={messageType}>\n            {title && (<AlertTitle>{title}</AlertTitle>)}\n            {props.children}\n        </Alert>\n\n    );\n}\n\nInlineMessage.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    type: PropTypes.string.isRequired,\n};\n\nexport default InlineMessage;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport IconButton from '@material-ui/core/IconButton';\nimport { withStyles } from '@material-ui/core/styles';\nimport Cancel from '@material-ui/icons/Cancel';\nimport Clear from '@material-ui/icons/Clear';\nimport StarRate from '@material-ui/icons/StarRate';\nimport StarIcon from '@material-ui/icons/Star';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Api from 'AppData/api';\nimport AuthManager from 'AppData/AuthManager';\nimport StarRatingSummary from 'AppComponents/Apis/Details/StarRatingSummary';\nimport Rating from '@material-ui/lab/Rating';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nconst styles = (theme) => ({\n    starRate: {\n        fontSize: 30,\n        color: theme.custom.infoBar.starColor,\n    },\n    noStarRate: {\n        fontSize: 30,\n        color: theme.palette.grey.A200,\n    },\n    iconFilled: {\n        color: theme.custom.infoBar.starColor,\n    },\n    iconEmpty: {\n        color: theme.custom.infoBar.starColorEmpty || '#cfcfcf',\n    },\n    removeRating: {\n        fontSize: 20,\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n    },\n    closeRating: {\n        position: 'absolute',\n        right: theme.spacing(-2),\n        top: theme.spacing(-2),\n    },\n    userRating: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        cursor: 'pointer',\n        padding: '5px',\n        background: '#efefef',\n        borderRadius: '3px',\n        position: 'absolute',\n        right: 0,\n        top: '-50px',\n        marginLeft: '125px',\n    },\n    rateThis: {\n        lineHeight: '15px',\n        width: 40,\n    },\n});\n\n/**\n *\n *\n * @class StarRatingBar\n * @extends {React.Component}\n */\nclass StarRatingBar extends React.Component {\n    /**\n     *Creates an instance of RecommendedApiThumb.\n     * @param {JSON} props properties\n     * @memberof StarRatingBar\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            avgRating: 0,\n            userRating: 0,\n            count: 0,\n            total: 0,\n            showEditing: false,\n        };\n        this.getApiRating = this.getApiRating.bind(this);\n        this.removeUserRating = this.removeUserRating.bind(this);\n        this.doRate = this.doRate.bind(this);\n        this.toggleEditRating = this.toggleEditRating.bind(this);\n    }\n\n    /**\n     * Component did mount callback.\n     * @memberof StarRatingBar\n     */\n    componentDidMount() {\n        this.getApiRating();\n    }\n\n    /**\n     * Component did mount callback.\n     * @param {JSON} prevProps previous instance properties\n     * @memberof StarRatingBar\n     */\n    componentDidUpdate(prevProps) {\n        const { ratingUpdate } = this.props;\n        if (ratingUpdate !== prevProps.ratingUpdate) {\n            this.getApiRating();\n        }\n    }\n\n    /**\n     *\n     *\n     * @memberof StarRatingBar\n     */\n    getApiRating() {\n        const { apiId, setRatingUpdate } = this.props;\n        const user = AuthManager.getUser();\n        const api = new Api();\n        // get api rating\n        if (user != null) {\n            const promisedRating = api.getRatingFromUser(apiId, null);\n            promisedRating.then((response) => {\n                this.setState({\n                    avgRating: response.body.avgRating,\n                    userRating: response.body.userRating,\n                    count: response.body.count,\n                    total: response.body.pagination.total,\n                });\n                if (setRatingUpdate) {\n                    setRatingUpdate({\n                        avgRating: response.body.avgRating,\n                        count: response.body.count,\n                        total: response.body.pagination.total,\n                    });\n                }\n            });\n        }\n    }\n\n    /**\n     *\n     *\n     * @param {*} rateIndex\n     * @memberof StarRatingBar\n     */\n    doRate(rateIndex) {\n        const { apiId, intl } = this.props;\n        const api = new Api();\n        const ratingInfo = { rating: rateIndex };\n        const promise = api.addRating(apiId, ratingInfo);\n        promise\n            .then(() => {\n                this.getApiRating();\n            })\n            .catch((error) => {\n                Alert.error(intl.formatMessage({\n                    defaultMessage: 'Error occurred while adding ratings',\n                    id: 'Apis.Listing.StarRatingBar.error.occurred.adding',\n                }));\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n            })\n            .finally(() => {\n                this.toggleEditRating();\n            });\n    }\n\n    /**\n     * @memberof StarRatingBar\n     */\n    removeUserRating() {\n        const { apiId, setRatingUpdate, intl } = this.props;\n        const api = new Api();\n        // remove user rating\n        api.removeRatingOfUser(apiId, null)\n            .then(() => {\n                this.getApiRating();\n                setRatingUpdate();\n            })\n            .catch((error) => {\n                Alert.error(intl.formatMessage({\n                    defaultMessage: 'Error occurred while removing ratings',\n                    id: 'Apis.Listing.StarRatingBar.error.occurred',\n                }));\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n            })\n            .finally(() => {\n                this.toggleEditRating();\n            });\n    }\n\n    /**\n     * @memberof StarRatingBar\n     */\n    toggleEditRating() {\n        this.setState((prevState) => ({ showEditing: !prevState.showEditing }));\n    }\n\n    /**\n     * @returns {JSX} star rating bar\n     * @memberof StarRatingBar\n     */\n    render() {\n        const {\n            avgRating, userRating, count, total, showEditing,\n        } = this.state;\n        const {\n            classes, isEditable, showSummary, apiRating,\n        } = this.props;\n        const apiRatingNumber = parseFloat(apiRating);\n        return (\n            <>\n                {showSummary ? (\n                    <StarRatingSummary avgRating={avgRating} reviewCount={total} returnCount={count} />\n                ) : (\n                    <>\n                        {isEditable ? (\n                            <Box position='relative'>\n                                <IconButton component='div' onClick={this.toggleEditRating} display='flex' style={{ cursor: 'pointer' }}>\n                                    {(userRating === 0)\n                                        ? (<StarBorderIcon style={{ fontSize: 30 }} />)\n                                        : (<StarIcon style={{ fontSize: 30, color: '#75d5fa' }} />)}\n                                    <Typography variant='body2' className={classes.rateThis}>\n                                        {(userRating === 0) ? (\n                                            <FormattedMessage defaultMessage='Rate This' id='Apis.Listing.StarRatingBar.rate.this' />\n                                        ) : (\n                                            <Box>\n                                                <Box fontSize={22} ml={1} mb={0.5}>{userRating}</Box>\n                                                <Box><FormattedMessage defaultMessage='You' id='Apis.Listing.StarRatingBar.you' /></Box>\n                                            </Box>\n                                        )}\n                                    </Typography>\n                                </IconButton>\n                                {showEditing && (\n                                    <>\n                                        <ClickAwayListener onClickAway={this.toggleEditRating}>\n                                            <div className={classes.userRating}>\n                                                {[1, 2, 3, 4, 5].map((i) => (\n                                                    <IconButton area-label={'Rate ' + i} onClick={() => this.doRate(i)}>\n                                                        <StarRate\n                                                            key={i}\n                                                            className={userRating >= i ? classes.starRate : classes.noStarRate}\n                                                        />\n                                                    </IconButton>\n                                                ))}\n                                                <IconButton area-label='Clear rating' onClick={() => this.removeUserRating()}>\n                                                    <Clear\n                                                        className={classes.removeRating}\n                                                    />\n                                                </IconButton>\n                                                <IconButton\n                                                    className={classes.closeRating}\n                                                    area-label='Close rating popup'\n                                                    onClick={this.toggleEditRating}\n                                                >\n                                                    <Cancel\n                                                        className={classes.removeRating}\n                                                    />\n                                                </IconButton>\n                                            </div>\n                                        </ClickAwayListener>\n                                    </>\n                                )}\n                            </Box>\n                        ) : (\n                            <>\n                                <Rating\n                                    name='half-rating'\n                                    value={apiRatingNumber}\n                                    precision={0.1}\n                                    readOnly\n                                    classes={{ iconEmpty: classes.iconEmpty, iconFilled: classes.iconFilled }}\n                                />\n                                <Typography variant='caption' gutterBottom align='left' component='div'>\n                                    {`${avgRating}/5.0 (${total}`}\n                                    {total === 1 ? (\n                                        <FormattedMessage defaultMessage='user' id='Apis.Listing.StarRatingBar.user' />\n                                    ) : (\n                                        <FormattedMessage defaultMessage='users' id='Apis.Listing.StarRatingBar.users' />\n                                    )}\n                                    {')'}\n                                </Typography>\n                            </>\n                        )}\n                    </>\n                )}\n            </>\n        );\n    }\n}\n\nStarRatingBar.defaultProps = {\n    apiRating: 0,\n    ratingUpdate: 0,\n    setRatingUpdate: () => { },\n};\n\nStarRatingBar.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    apiId: PropTypes.string.isRequired,\n    isEditable: PropTypes.bool.isRequired,\n    showSummary: PropTypes.bool.isRequired,\n    apiRating: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    ratingUpdate: PropTypes.number,\n    setRatingUpdate: PropTypes.func,\n};\n\nexport default injectIntl(withStyles(styles, { withTheme: true })(StarRatingBar));\n","/*\n *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n *  WSO2 Inc. licenses this file to you under the Apache License,\n *  Version 2.0 (the \"License\"); you may not use this file except\n *  in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied. See the License for the\n *  specific language governing permissions and limitations\n *  under the License.\n */\n\n/**\n * Capitalize the first letter of a string\n * @param {string} string string to be formatted\n * @return {string} formatted string\n */\nfunction capitalizeFirstLetter(string) {\n    return string && string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n/**\n * Lowercase all letters in a string\n * @param {string} string string to be formatted\n * @return {string} formatted string\n */\nfunction lowerCaseString(string) {\n    return string.toLowerCase();\n}\n\n/**\n * Uppercase all letters in a string\n * @param {string} string string to be formatted\n * @return {string} formatted string\n */\nfunction upperCaseString(string) {\n    return string.toUpperCase();\n}\n\nexport { capitalizeFirstLetter, lowerCaseString, upperCaseString };\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FileCopy from '@material-ui/icons/FileCopy';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport IconButton from '@material-ui/core/IconButton';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport InlineMessage from '../InlineMessage';\nimport ViewSecret from './ViewSecret';\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = (theme) => ({\n    bootstrapRoot: {\n        padding: 0,\n        'label + &': {\n            marginTop: theme.spacing(3),\n        },\n        flex: 1,\n        marginRight: theme.spacing(1),\n    },\n    bootstrapInput: {\n        borderRadius: 4,\n        backgroundColor: theme.custom.apiDetailPages.tokenTextBoxBackground,\n        color: theme.palette.getContrastText(theme.custom.apiDetailPages.tokenTextBoxBackground),\n        border: '1px solid #ced4da',\n        padding: '5px 12px',\n        height: 100,\n        width: '100%',\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        fontFamily: ['-apple-system', 'BlinkMacSystemFont', '\"Segoe UI\"', 'Roboto', '\"Helvetica Neue\"',\n            'Arial', 'sans-serif', '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(','),\n        '&:focus': {\n            borderColor: '#80bdff',\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n        },\n    },\n    epWrapper: {\n        display: 'flex',\n        marginTop: 20,\n    },\n    secretWrapper: {\n        display: 'flex',\n        marginBottom: 20,\n    },\n    prodLabel: {\n        lineHeight: '30px',\n        marginRight: 10,\n        width: 100,\n        'text-align-last': 'center',\n        whiteSpace: 'nowrap',\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth - theme.custom.leftMenu.width,\n    },\n    root: {\n        marginTop: 20,\n        '& span, & h5, & label, & td, & li, & div, & input': {\n            color: theme.palette.getContrastText(theme.palette.background.paper),\n        },\n\n    },\n});\n/**\n *\n *\n * @class ViewToken\n * @extends {React.Component}\n */\nclass ViewToken extends React.Component {\n    state = {\n        tokenCopied: false,\n    };\n\n    /**\n     *\n     *\n     * @memberof ViewToken\n     */\n    onCopy = (name) => () => {\n        this.setState({\n            [name]: true,\n        });\n        const that = this;\n        const elementName = name;\n        const caller = function () {\n            that.setState({\n                [elementName]: false,\n            });\n        };\n        setTimeout(caller, 4000);\n    };\n\n    /**\n     * Generate a comma separate string of token scopes\n     * @param {string} tokenScopes token scopes\n     * @returns {String} scopeString comma separated string of token scopes\n     * @memberof ViewToken\n     */\n    getTokeScopesString(tokenScopes) {\n        if (tokenScopes) {\n            return tokenScopes.join(', ');\n        }\n        return '';\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof ViewToken\n     */\n    render() {\n        const {\n            classes, token, consumerSecret, isTokenExchange, intl, isResidenceTokenAvailable,\n        } = this.props;\n        const { tokenCopied } = this.state;\n\n        if (isTokenExchange && !isResidenceTokenAvailable) {\n            return (\n                <Typography>\n                    <FormattedMessage\n                        id='Shared.AppsAndKeys.ViewCurl.error'\n                        defaultMessage='Please generate the Consumer Key and Secret for Residence Key Manager with selecting the urn:ietf:params:oauth:grant-type:token-exchange grant type in\n                                             order to use the token Exchange Approach. '\n                    />\n                </Typography>\n            )\n        } else {\n            return (\n            <div className={classes.root}>\n                {consumerSecret && (\n                    <div className={classes.secretWrapper}>\n                        <ViewSecret secret={{consumerSecret}}/>\n                    </div>\n                )}\n                <InlineMessage type='warn'>\n                    <Typography variant='h5' component='h3'>\n                        {(token.isOauth) && (\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.ViewToken.please.copy'\n                                defaultMessage='Please Copy the Access Token'\n                            />\n                        )}\n                        {(!token.isOauth) && (\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.ViewToken.please.copy.apikey'\n                                defaultMessage='Please Copy the API Key'\n                            />\n                        )}\n                    </Typography>\n                    <Typography component='p'>\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewToken.please.copy.help'\n                            defaultMessage={'If the token type is JWT or API Key, please copy this generated token value as it will be displayed only for'\n                            + ' the current browser session. '\n                            + '( The token will not be visible in the UI after the page is refreshed. )'}\n                        />\n                    </Typography>\n                </InlineMessage>\n                <div className={classes.epWrapper}>\n                    <label for='access-token' className={classes.prodLabel}>\n                        {(token.isOauth) && (\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.ViewToken.access.token'\n                                defaultMessage='Access Token'\n                            />\n                        )}\n                        {(!token.isOauth) && (\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.ViewToken.apikey'\n                                defaultMessage='API Key'\n                            />\n                        )}\n                    </label>\n                    <TextField\n                        defaultValue={token.accessToken}\n                        id='access-token'\n                        multiline\n                        fullWidth\n                        rows={4}\n                        InputProps={{\n                            disableUnderline: true,\n                            classes: {\n                                root: classes.bootstrapRoot,\n                                input: classes.bootstrapInput,\n                            },\n                        }}\n                        InputLabelProps={{\n                            shrink: true,\n                            className: classes.bootstrapFormLabel,\n                        }}\n                    />\n                    <Tooltip\n                        title={\n                            tokenCopied\n                                ? intl.formatMessage({\n                                    defaultMessage: 'Copied',\n                                    id: 'Shared.AppsAndKeys.ViewToken.copied',\n                                })\n                                : intl.formatMessage({\n                                    defaultMessage: 'Copy to clipboard',\n                                    id: 'Shared.AppsAndKeys.ViewToken.copy.to.clipboard',\n                                })\n                        }\n                        placement='right'\n                    >\n                        <CopyToClipboard text={token.accessToken} onCopy={this.onCopy('tokenCopied')}>\n                            <IconButton aria-label='Copy to clipboard'>\n                                <FileCopy color='secondary'>file_copy</FileCopy>\n                            </IconButton>\n                        </CopyToClipboard>\n                    </Tooltip>\n                </div>\n                <FormHelperText>\n                    <FormattedMessage\n                        id='Shared.AppsAndKeys.ViewToken.info.first'\n                        defaultMessage='Above token has a validity period of '\n                    />\n                    {token.validityTime}\n                    <FormattedMessage\n                        id='Shared.AppsAndKeys.ViewToken.info.second'\n                        defaultMessage=' seconds'\n                    />\n                    {token.isOauth && (\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewToken.info.third'\n                            defaultMessage=' and the token has ('\n                        />\n                    )}\n                    {this.getTokeScopesString(token.tokenScopes)}\n                    {token.isOauth && (\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewToken.info.fourth'\n                            defaultMessage=') scopes'\n                        />\n                    )}\n                    .\n                </FormHelperText>\n            </div>\n        )};\n    }\n}\n\nViewToken.defaultProps = {\n    consumerSecret: null,\n};\n\nViewToken.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    token: PropTypes.shape({\n        accessToken: PropTypes.string.isRequired,\n        validityTime: PropTypes.number.isRequired,\n        tokenScopes: PropTypes.array.isRequired,\n    }).isRequired,\n    consumerSecret: PropTypes.string,\n};\n\nexport default injectIntl(withStyles(styles)(ViewToken));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n    svgImage: {\n        cursor: 'pointer',\n        // ⚠️ object-fit is not supported by IE11.\n        objectFit: 'cover',\n    },\n};\n\nfunction aHexToOpacity(aHex) {\n    const alphaValue = '0x' + aHex.substring(7, 9);\n    return alphaValue / 256;\n}\n\n/**\n *\n * @param {*} aHex\n */\nfunction getColorWithoutAlpha(aHex) {\n    return aHex.substring(0, 7);\n}\n\n/**\n * Generate svg background.\n * @param {*} props\n */\nfunction Background(props) {\n    const {\n        classes, colorPair, width, height,\n    } = props;\n    // Creating the background\n\n    const thumbnailBox = {\n        width: 250,\n        height: 200,\n    };\n\n    const thumbnailBoxChild = {\n        width: 50,\n        height: 50,\n    };\n\n    const rects = [];\n    for (let i = 0; i <= 4; i++) {\n        for (let j = 0; j <= 4; j++) {\n            const color = '#' + (colorPair.sub - ((0x00000025 * i) - (j * 0x00000015))).toString(16);\n            rects.push(<rect\n                key={i + '_' + j}\n                {...thumbnailBoxChild}\n                /* eslint no-mixed-operators: 0 */\n                fill={getColorWithoutAlpha(color)}\n                fillOpacity={aHexToOpacity(color)}\n                x={200 - i * 54}\n                y={54 * j}\n            />);\n        }\n    }\n    const primeColor = '#' + colorPair.prime.toString(16);\n    return (\n        <svg width={width} height={height} className={classes.svgImage} aria-hidden='true'>\n            <rect {...thumbnailBox} fill={getColorWithoutAlpha(primeColor)} fillOpacity={aHexToOpacity(primeColor)} />\n            {rects}\n        </svg>\n    );\n}\n\nBackground.propTypes = {\n    classes: PropTypes.shape({ svgImage: PropTypes.string }).isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    colorPair: PropTypes.shape({ sub: PropTypes.number, prime: PropTypes.number }).isRequired,\n};\n\nexport default withStyles(styles)(Background);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Icon from '@material-ui/core/Icon';\nimport MaterialIcons from 'MaterialIcons';\nimport Background from '../Background';\n\nconst styles = {\n    icon: {},\n    iconWrapper: {\n        position: 'relative',\n        display: 'flex',\n        justifyContent: 'center',\n        '& span': {\n            position: 'absolute',\n            right: 'auto',\n        },\n    },\n};\n\n/**\n * Generate dynamic API thumbnail image (SVG), Use PureComponent to avoid unnessasary re-rendering when hover ect\n *\n * @class ImageGenerator\n * @extends {PureComponent}\n */\nclass ImageGenerator extends PureComponent {\n    /**\n     *\n     * @inheritdoc\n     * @returns {React.PureComponent} @inheritdoc\n     * @memberof ImageGenerator\n     */\n    render() {\n        const {\n            classes, api, width, height, theme, fixedIcon,\n        } = this.props;\n\n        const {\n            category, key, color, backgroundIndex,\n        } = fixedIcon;\n\n        let str = api;\n        if (typeof api === 'object') str = api.name;\n        let count;\n        let colorPair;\n        let randomBackgroundIndex;\n        let IconElement;\n        const colorPairs = theme.custom.thumbnail.backgrounds;\n\n        // Creating the icon\n        if (key && category) {\n            IconElement = key;\n        } else if (api.type === 'DOC') {\n            IconElement = theme.custom.thumbnail.document.icon;\n        } else {\n            count = MaterialIcons.categories[10].icons.length;\n            const randomIconIndex = (str.charCodeAt(0) + str.charCodeAt(str.length - 1)) % count;\n            IconElement = MaterialIcons.categories[10].icons[randomIconIndex].id;\n        }\n\n        // Obtain or generate background color pair\n        if (api.type === 'DOC') {\n            colorPair = theme.custom.thumbnail.document.backgrounds;\n        } else if (backgroundIndex && colorPairs.length > backgroundIndex) {\n            colorPair = colorPairs[backgroundIndex];\n        } else {\n            randomBackgroundIndex = (str.charCodeAt(0) + str.charCodeAt(str.length - 1)) % colorPairs.length;\n            colorPair = colorPairs[randomBackgroundIndex];\n        }\n        return (\n            <div className={classes.iconWrapper} style={{ width }}>\n                <Icon className={classes.icon} style={{ fontSize: height + 'px', color }}>\n                    {IconElement}\n                </Icon>\n                <Background width={width} height={height} colorPair={colorPair} />\n            </div>\n        );\n    }\n}\n\nImageGenerator.defaultProps = {\n    height: 190,\n    width: 250,\n    fixedIcon: {\n        category: null,\n        key: null,\n        color: '',\n        backgroundIndex: null,\n    },\n};\n\nImageGenerator.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    height: PropTypes.number,\n    width: PropTypes.number,\n    fixedIcon: PropTypes.shape({}),\n    api: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(ImageGenerator);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Typography from '@material-ui/core/Typography';\nimport Chip from '@material-ui/core/Chip';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\n// Styles for Grid and Paper elements\nconst styles = theme => ({\n    FormControl: {\n        padding: theme.spacing(2),\n        width: '100%',\n    },\n    FormControlOdd: {\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.background.paper,\n        width: '100%',\n    },\n    quotaHelp: {\n        position: 'relative',\n    },\n    chips: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    chip: {\n        margin: theme.spacing(0.25),\n    },\n});\n\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: 224,\n            width: 250,\n        },\n    },\n    anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"left\"\n    },\n    transformOrigin: {\n        vertical: \"top\",\n        horizontal: \"left\"\n    },\n    getContentAnchorEl: null,\n};\n\n/**\n * Used to display generate acctoken UI\n */\nconst tokens = (props) => {\n    /**\n    * This method is used to handle the updating of create application\n    * request object.\n    * @param {*} field field that should be updated in appliction request\n    * @param {*} event event fired\n    */\n    const handleChange = (field, event) => {\n        const { accessTokenRequest, updateAccessTokenRequest } = props;\n        const newRequest = { ...accessTokenRequest };\n\n        const { target: currentTarget } = event;\n\n        switch (field) {\n            case 'scopesSelected':\n                newRequest.scopesSelected = currentTarget.value;\n                break;\n            case 'keyType':\n                newRequest.keyType = currentTarget.value;\n                break;\n            default:\n                break;\n        }\n        updateAccessTokenRequest(newRequest);\n    };\n    const {\n        classes, accessTokenRequest, subscriptionScopes,\n    } = props;\n\n    return (\n        <>\n            <FormControl\n                margin='normal'\n                className={classes.FormControlOdd}\n                disabled={subscriptionScopes.length === 0}\n            >\n                <InputLabel htmlFor='quota-helper' className={classes.quotaHelp}>\n                    <FormattedMessage\n                        id='Shared.AppsAndKeys.Tokens.when.you.generate.scopes'\n                        defaultMessage='Scopes'\n                    />\n\n                </InputLabel>\n                <Select\n                    name='scopesSelected'\n                    multiple\n                    value={accessTokenRequest.scopesSelected}\n                    onChange={e => handleChange('scopesSelected', e)}\n                    input={<Input id='select-multiple-chip' />}\n                    renderValue={selected => (\n                        <div className={classes.chips}>\n                            {selected.map(value => (\n                                <Chip key={value} label={value} className={classes.chip} />\n                            ))}\n                        </div>\n                    )}\n                    MenuProps={MenuProps}\n                >\n                    {subscriptionScopes.map(scope => (\n                        <MenuItem\n                            key={scope}\n                            value={scope}\n                        >\n                            {scope}\n                        </MenuItem>\n                    ))}\n                </Select>\n                <Typography variant='caption'>\n                    <FormattedMessage\n                        id='Shared.AppsAndKeys.Tokens.when.you.generate'\n                        defaultMessage={'When you generate access tokens to APIs protected by scope/s,'\n                            + ' you can select the scope/s and then generate the token for it. Scopes enable '\n                            + 'fine-grained access control to API resources based on user roles. You define scopes to '\n                            + 'an API resource. When a user invokes the API, his/her OAuth 2 bearer token cannot grant '\n                            + 'access to any API resource beyond its associated scopes.'}\n                    />\n                </Typography>\n            </FormControl>\n        </>\n    );\n};\ntokens.contextTypes = {\n    intl: PropTypes.shape({}).isRequired,\n};\nexport default withStyles(styles)(tokens);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FileCopy from '@material-ui/icons/FileCopy';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport InlineMessage from '../InlineMessage';\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = theme => ({\n    bootstrapRoot: {\n        padding: 0,\n        'label + &': {\n            marginTop: theme.spacing(3),\n        },\n    },\n    bootstrapInput: {\n        borderRadius: 4,\n        backgroundColor: theme.palette.common.white,\n        border: '1px solid #ced4da',\n        padding: '5px 12px',\n        width: 350,\n        height: 100,\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        fontFamily: ['-apple-system', 'BlinkMacSystemFont', '\"Segoe UI\"', 'Roboto', '\"Helvetica Neue\"',\n            'Arial', 'sans-serif', '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(','),\n        '&:focus': {\n            borderColor: '#80bdff',\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n        },\n    },\n    epWrapper: {\n        display: 'flex',\n        marginTop: 20,\n    },\n    prodLabel: {\n        lineHeight: '30px',\n        marginRight: 10,\n        width: 100,\n        'text-align-last': 'center',\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth - theme.custom.leftMenu.width,\n    },\n    root: {\n        marginBottom: 20,\n    },\n});\n/**\n *\n *\n * @class ViewSecret\n * @extends {React.Component}\n */\nclass ViewSecret extends React.Component {\n    state = {\n        secretCopied: false,\n    };\n\n    /**\n     *\n     *\n     * @memberof ViewSecret\n     */\n    onCopy = name => () => {\n        this.setState({\n            [name]: true,\n        });\n        const that = this;\n        const elementName = name;\n        const caller = function () {\n            that.setState({\n                [elementName]: false,\n            });\n        };\n        setTimeout(caller, 4000);\n    };\n\n    /**\n     * Generate a comma separate string of token scopes\n     *\n     * @param {string} tokenScopes token scopes\n     * @returns {String} scopeString comma separated string of token scopes\n     * @memberof ViewSecret\n     */\n    getTokeScopesString(tokenScopes) {\n        if (tokenScopes) {\n            return tokenScopes.join(', ');\n        }\n        return '';\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof ViewSecret\n     */\n    render() {\n        const { classes, secret, intl } = this.props;\n        const { secretCopied } = this.state;\n        return (\n            <div className={classes.root}>\n                <InlineMessage type='warn'>\n                    <Typography variant='h5' component='h3'>\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewSecret.please.copy.secret'\n                            defaultMessage='Please Copy the Consumer Secret'\n                        />\n                    </Typography>\n                    <Typography component='p'>\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewSecret.please.copy.secret.help'\n                            defaultMessage={`Please make a note of the regenerated consumer \n                            secret value as it will be displayed only once.`}\n                        />\n                    </Typography>\n                </InlineMessage>\n                <div className={classes.epWrapper}>\n                    <Typography className={classes.prodLabel}>\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewSecret.consumer.secret'\n                            defaultMessage='Consumer Secret'\n                        />\n                    </Typography>\n                    <TextField\n                        defaultValue={secret.consumerSecret}\n                        id='bootstrap-input'\n                        multiline\n                        rows={4}\n                        InputProps={{\n                            disableUnderline: true,\n                            classes: {\n                                root: classes.bootstrapRoot,\n                                input: classes.bootstrapInput,\n                            },\n                        }}\n                        InputLabelProps={{\n                            shrink: true,\n                            className: classes.bootstrapFormLabel,\n                        }}\n                    />\n                    <Tooltip\n                        title={\n                            secretCopied\n                                ? intl.formatMessage({\n                                    defaultMessage: 'Copied',\n                                    id: 'Shared.AppsAndKeys.ViewSecret.copied',\n                                })\n                                : intl.formatMessage({\n                                    defaultMessage: 'Copy to clipboard',\n                                    id: 'Shared.AppsAndKeys.ViewSecret.copy.to.clipboard',\n                                })\n                        }\n                        placement='right'\n                    >\n                        <CopyToClipboard text={secret.consumerSecret} onCopy={this.onCopy('secretCopied')}>\n                            <FileCopy color='secondary'>file_copy</FileCopy>\n                        </CopyToClipboard>\n                    </Tooltip>\n                </div>\n            </div>\n        );\n    }\n}\n\nViewSecret.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    secret: PropTypes.shape({\n        consumerSecret: PropTypes.string.isRequired,\n    }).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(ViewSecret));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport StarRate from '@material-ui/icons/StarRate';\nimport Icon from '@material-ui/core/Icon';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\n\nconst styles = (theme) => {\n    const starColor = theme.custom.infoBar.starColor || theme.palette.getContrastText(theme.custom.infoBar.background);\n    return {\n        starRate: {\n            marginRight: theme.spacing(),\n            color: starColor,\n            '&.material-icons': {\n                fontSize: 30,\n            },\n        },\n        userRating: {\n            display: 'flex',\n            justifyContent: 'flex-start',\n            alignItems: 'center',\n        },\n    };\n};\n\n/**\n *\n * @param {JSON} props props passed from parent\n * @returns {JSX} summary of the rating\n */\nfunction StarRatingSummary(props) {\n    const {\n        classes, theme, avgRating, reviewCount, returnCount,\n    } = props;\n    return (\n        <>\n            {returnCount > 0 ? (\n                <>\n                    <Icon className={classes.starRate}>star</Icon>\n                    <div className={classes.ratingSummary}>\n                        <div aria-label='User rating' className={classes.userRating}>\n                            <Typography variant='body1'>{avgRating}</Typography>\n                            <Typography aria-label='out of five' variant='body1'>/5.0</Typography>\n                        </div>\n                        <Typography aria-label='Number of users who has rated' variant='body1' gutterBottom align='left'>\n                            {reviewCount}\n                            {' '}\n                            {reviewCount === 1 ? (\n                                <FormattedMessage defaultMessage='user' id='Apis.Details.StarRatingSummary.user' />\n                            ) : (\n                                <FormattedMessage defaultMessage='users' id='Apis.Details.StarRatingSummary.users' />\n                            )}\n                        </Typography>\n                    </div>\n                </>\n            ) : (\n                <>\n                    <StarRate className={classes.starRate} style={{ color: theme.palette.grey.A200 }} />\n                    <div className={classes.ratingSummary}>\n                        <Typography variant='caption' gutterBottom align='left'>\n                            <FormattedMessage defaultMessage='Not Rated' id='Apis.Details.StarRatingSummary.not.rated' />\n                        </Typography>\n                    </div>\n                </>\n            )}\n        </>\n    );\n}\n\nexport default withStyles(styles, { withTheme: true })(StarRatingSummary);\n","import React from 'react';\nimport { SettingsConsumer } from './SettingsContext';\n\nconst withSettings = (WrappedComponent) => {\n    /**\n     * Higher order component with settings\n     * @param {*} props properties\n     * @returns {Context.Consumer}\n     */\n    function HOCWithSettings(props) {\n        return (\n            <SettingsConsumer>\n                {\n                    context => <WrappedComponent {...context} {...props} />\n                }\n            </SettingsConsumer>\n        );\n    }\n    return HOCWithSettings;\n};\n\nexport default withSettings;\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport { capitalizeFirstLetter } from 'AppData/stringFormatter';\nimport Utils from 'AppData/Utils';\n\nconst getColorFromLetter = (letter, colorMap, offset) => {\n    let charLightColor = colorMap[letter.toLowerCase()];\n\n    if (!charLightColor) {\n        const charNumber = parseInt(letter, 10);\n        if (charNumber) {\n            charLightColor = colorMap[String.fromCharCode(111 + charNumber)];\n        } else {\n            return [null, null];\n        }\n    }\n    const { r, g, b } = Utils.hexToRGBHash(charLightColor);\n    const dark = Utils.rgbToHex(r - Math.ceil(r * offset), g - Math.ceil(offset * g),\n        b - Math.ceil(offset * b));\n    return [charLightColor, dark];\n};\n\nconst useStyles = makeStyles((theme) => {\n    return {\n        root: {\n            display: 'flex',\n        },\n        thumbIcon: ({ width }) => {\n            const { width: defaultWidth } = theme.custom.thumbnail;\n            const fontSize = Math.ceil((width * 90) / defaultWidth);\n            return {\n                fontSize,\n            };\n        },\n        square: ({\n            char, width, height, bgColor,\n        }) => {\n            const {\n                colorMap, offset, width: defaultWidth, textShadow,\n            } = theme.custom.thumbnail;\n            const [light, dark] = getColorFromLetter(bgColor === false ? '' : char, colorMap, offset);\n            const fontSize = Math.ceil((width * 70) / defaultWidth);\n            /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n            const background = light && `linear-gradient(to right, ${light}, ${dark})`;\n            return {\n                color: light && theme.palette.getContrastText(dark),\n                background,\n                fallbacks: [\n                    { background: light }, /* fallback for old browsers */\n                    {\n                        background:\n                        `-webkit-linear-gradient(to right, ${light}, ${dark})`, /* Chrome 10-25, Safari 5.1-6 */\n                    },\n                ],\n                height,\n                width,\n                fontSize: `${fontSize}px`,\n                textShadow,\n            };\n        },\n    };\n});\n\nexport default (props) => {\n    const {\n        artifact, width, height, charLength = 2, ThumbIcon, bgColor,\n    } = props;\n    const name = artifact.name.substring(0, charLength);\n    const classes = useStyles({\n        char: name.substring(0, 1), width, height, bgColor,\n    });\n\n    return (\n        <div className={classes.root}>\n            <Avatar variant='square' className={classes.square}>\n                {ThumbIcon ? <ThumbIcon className={classes.thumbIcon} /> : capitalizeFirstLetter(name)}\n            </Avatar>\n        </div>\n    );\n};\n","/* eslint-disable react/prop-types */\n/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport { withStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport MaterialIcons from 'MaterialIcons';\nimport StarRatingBar from 'AppComponents/Apis/Listing/StarRatingBar';\nimport { app } from 'Settings';\nimport classNames from 'classnames';\nimport ImageGenerator from './ImageGenerator';\nimport Api from '../../../../data/api';\nimport { ApiContext } from '../../Details/ApiContext';\nimport LetterGenerator from './LetterGenerator';\n\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = (theme) => ({\n    card: {\n        margin: theme.spacing(3 / 2),\n        maxWidth: theme.custom.thumbnail.width,\n        transition: 'box-shadow 0.3s ease-in-out',\n        position: 'relative',\n    },\n    apiDetails: {\n        background: theme.custom.thumbnail.contentBackgroundColor,\n        padding: theme.spacing(1),\n        color: theme.palette.getContrastText(theme.custom.thumbnail.contentBackgroundColor),\n        '& a': {\n            color: theme.palette.getContrastText(theme.custom.thumbnail.contentBackgroundColor),\n        },\n        position: theme.custom.thumbnail.contentPictureOverlap ? 'absolute' : 'relative',\n        top: 0,\n    },\n    suppressLinkStyles: {\n        textDecoration: 'none',\n        color: theme.palette.text.disabled,\n    },\n    row: {\n        display: 'inline-block',\n    },\n    thumbBy: {\n        'padding-left': '5px',\n    },\n    media: {\n        // ⚠️ object-fit is not supported by IE11.\n        objectFit: 'cover',\n    },\n    thumbContent: {\n        width: theme.custom.thumbnail.width - theme.spacing(2),\n    },\n    thumbLeft: {\n        alignSelf: 'flex-start',\n        flex: 1,\n        width: '25%',\n        'padding-left': '5px',\n        'padding-right': '65px',\n    },\n    thumbLeftAction: {\n        alignSelf: 'flex-start',\n        flex: 1,\n        width: '25%',\n        'padding-left': '5px',\n        'padding-right': '10px',\n    },\n    thumbRight: {\n        display: 'flex',\n        alignItems: 'flex-start',\n        flexDirection: 'column',\n    },\n    thumbInfo: {\n        display: 'flex',\n    },\n    thumbHeader: {\n        width: theme.custom.thumbnail.width - theme.spacing(1),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        'padding-left': '5px',\n    },\n    contextBox: {\n        width: parseInt((theme.custom.thumbnail.width - theme.spacing(1)) / 2, 10),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        display: 'inline-block',\n        lineHeight: '1em',\n        'padding-top': 5,\n        'padding-right': 5,\n        'padding-bottom': 1.5,\n        textAlign: 'left',\n    },\n    context: {\n        marginTop: 5,\n    },\n    thumbWrapper: {\n        position: 'relative',\n        paddingTop: 20,\n        marginRight: theme.spacing(2),\n    },\n    deleteIcon: {\n        fill: 'red',\n    },\n    textWrapper: {\n        color: theme.palette.text.secondary,\n        textDecoration: 'none',\n    },\n    imageWrapper: {\n        color: theme.custom.thumbnail.iconColor,\n        width: theme.custom.thumbnail.width,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    imageOverlap: {\n        position: 'absolute',\n        bottom: 1,\n    },\n    chipWrapper: {\n        marginTop: '15px',\n    },\n    chipWrapper2: {\n        marginBottom: '10px',\n    },\n    chipWrapper3: {\n        marginTop: '12px',\n    },\n    ratingWrapper: {\n        marginTop: '20px',\n    },\n    textblock: {\n        color: theme.palette.text.secondary,\n        position: 'absolute',\n        bottom: '35px',\n        right: '10px',\n        background: theme.custom.thumbnail.contentBackgroundColor,\n        'padding-left': '10px',\n        'padding-right': '10px',\n    },\n    actionArea: {\n        display: 'block !important',\n        '&:focus': {\n            border: '1px solid' + theme.palette.primary.main,\n        },\n    },\n});\n\nconst windowURL = window.URL || window.webkitURL;\n\n/**\n *\n * Render API Card component in API listing card view,containing essential API information like name , version ect\n * @class APIThumb\n * @extends {Component}\n */\nclass ApiThumbClassic extends React.Component {\n    /**\n     *Creates an instance of APIThumb.\n     * @param {*} props\n     * @memberof APIThumb\n     */\n    constructor(props) {\n        super(props);\n        const { theme: { custom: { thumbnail: { defaultApiImage } } } } = props;\n        this.state = {\n            category: MaterialIcons.categories[0].name,\n            selectedIcon: null,\n            color: null,\n            backgroundIndex: null,\n            imageObj: null,\n            isHover: false,\n            imageLoaded: !!defaultApiImage, // Convert the image string to boolean value.\n        };\n        this.toggleMouseOver = this.toggleMouseOver.bind(this);\n    }\n\n    /**\n     *\n     *\n     * @memberof ApiThumb\n     */\n    componentDidMount() {\n        const { imageLoaded } = this.state;\n        if (imageLoaded) return;\n        const { api } = this.props;\n        const restApi = new Api();\n\n        const promisedThumbnail = restApi.getAPIThumbnail(api.id);\n        promisedThumbnail.then((response) => {\n            if (response && response.data) {\n                if (response.headers['content-type'] === 'application/json') {\n                    const iconJson = JSON.parse(response.data);\n                    this.setState({\n                        selectedIcon: iconJson.key,\n                        category: iconJson.category,\n                        color: iconJson.color,\n                        backgroundIndex: iconJson.backgroundIndex,\n                    });\n                } else if (response && response.data.size > 0) {\n                    const url = windowURL.createObjectURL(response.data);\n                    this.setState({ imageObj: url });\n                }\n            }\n        }).finally(() => {\n            this.setState({ imageLoaded: true });\n        });\n    }\n\n    /**\n     * Clean up resource\n     */\n    componentWillUnmount() {\n        if (this.state.thumbnail) {\n            windowURL.revokeObjectURL(this.state.imageObj);\n        }\n    }\n\n    /**\n     * Get Path Prefix depedning on the respective API Type being rendered\n     *\n     * @returns {String} path\n     * @memberof ApiThumb\n     */\n    getPathPrefix() {\n        const path = '/apis/';\n        return path;\n    }\n\n    /**\n     * Toggle mouse Hover state to set the card `raised` property\n     *\n     * @param {React.SyntheticEvent} event mouseover and mouseout\n     * @memberof APIThumb\n     */\n    toggleMouseOver(event) {\n        this.setState({ isHover: event.type === 'mouseover' });\n    }\n\n    /**\n     * @inheritdoc\n     * @returns {React.Component} @inheritdoc\n     * @memberof APIThumb\n     */\n    render() {\n        const {\n            imageObj, selectedIcon, color, backgroundIndex, category, isHover, imageLoaded,\n        } = this.state;\n        const path = this.getPathPrefix();\n        const { isMonetizationEnabled } = this.context;\n\n        const detailsLink = path + this.props.api.id;\n        const {\n            api, classes, theme, customWidth, customHeight, showInfo,\n        } = this.props;\n        const { custom: { thumbnail, social: { showRating }, thumbnailTemplates: { variant, active } } } = theme;\n        const { name, version, context } = api;\n\n        let { provider } = api;\n        if (\n            api.businessInformation\n            && api.businessInformation.businessOwner\n            && api.businessInformation.businessOwner.trim() !== ''\n        ) {\n            provider = api.businessInformation.businessOwner;\n        }\n        if (!api.lifeCycleStatus) {\n            api.lifeCycleStatus = api.status;\n        }\n        const imageWidth = customWidth || thumbnail.width;\n        const imageHeight = customHeight || 140;\n        const defaultImage = thumbnail.defaultApiImage;\n\n        const showChips = () => {\n            if (api.lifeCycleStatus === 'PROTOTYPED') {\n                if ((api.type === 'GRAPHQL' || api.transportType === 'GRAPHQL')) {\n                    // GraphQL APIs in prototyped status.\n                    return (\n                        <div className='api-thumb-chip-main'>\n                            <Typography\n                                variant='subtitle1'\n                                gutterBottom\n                                align='right'\n                                className={classNames(classes.chipWrapper2, 'api-thumb-chip-wrapper')}\n                            >\n                                <Chip\n                                    label={api.transportType === undefined ? api.type : api.transportType}\n                                    color='primary'\n                                />\n                            </Typography>\n                            <Typography\n                                variant='subtitle1'\n                                gutterBottom\n                                align='right'\n                                className={classes.chipWrapper3}\n                            >\n                                <Chip\n                                    label='PRE-RELEASED'\n                                    color='default'\n                                />\n                            </Typography>\n                        </div>\n                    );\n                } else if ((api.gatewayVendor === 'solace')) {\n                    // Solace APIs in prototyped status.\n                    return (\n                        <div className='api-thumb-chip-main'>\n                            <Typography\n                                variant='subtitle1'\n                                gutterBottom\n                                align='right'\n                                className={classes.chipWrapper2}\n                            >\n                                <Chip\n                                    label='SOLACE'\n                                    color='primary'\n                                />\n                            </Typography>\n                            <Typography\n                                variant='subtitle1'\n                                gutterBottom\n                                align='right'\n                                className={classes.chipWrapper3}\n                            >\n                                <Chip\n                                    label='PRE-RELEASED'\n                                    color='default'\n                                />\n                            </Typography>\n                        </div>\n                    );\n                } else {\n                    // APIs in prototyped status.\n                    return (\n                        <div className='api-thumb-chip-main'>\n                            <Chip\n                                label='PRE-RELEASED'\n                                color='default'\n                            />\n                        </div>\n                    );\n                }\n            } else {\n                // GraphQL APIs which are not in prototyped status.\n                if ((api.type === 'GRAPHQL' || api.transportType === 'GRAPHQL')) {\n                    return (\n                        <div className='api-thumb-chip-main'>\n                            <Chip\n                                label={api.transportType === undefined ? api.type : api.transportType}\n                                color='primary'\n                            />\n                        </div>\n                    );\n                }\n\n                // Solace APIs which are not in prototyped status.\n                if ((api.gatewayVendor === 'solace')) {\n                    return (\n                        <div className='api-thumb-chip-main'>\n                            <Chip\n                                label='SOLACE'\n                                color='primary'\n                            />\n                        </div>\n                    );\n                }\n            }\n            return null;\n        };\n\n        let ImageView;\n        if (!imageLoaded) {\n            ImageView = (\n                <div className='image-load-frame'>\n                    <div className='image-load-animation1' />\n                    <div className='image-load-animation2' />\n                </div>\n            );\n        } else if (imageObj) {\n            ImageView = (\n                <img\n                    height={imageHeight}\n                    width={imageWidth}\n                    src={imageObj}\n                    alt='API Thumbnail'\n                    className={classes.media}\n                />\n            );\n        } else {\n            ImageView = (variant === 'text' && active) ? (\n                <LetterGenerator\n                    width={imageWidth}\n                    height={imageHeight}\n                    artifact={api}\n                />\n            ) : (\n                <ImageGenerator\n                    width={imageWidth}\n                    height={imageHeight}\n                    api={api}\n                    fixedIcon={{\n                        key: selectedIcon,\n                        color: color || thumbnail.iconColor,\n                        backgroundIndex,\n                        category,\n                        api,\n                    }}\n                />\n            );\n        }\n        if (!showInfo) {\n            return (\n                <div className='api-thumb-image-view'>\n                    {!defaultImage && ImageView}\n                    {defaultImage && <img src={app.context + defaultImage} alt='img' />}\n                </div>\n            );\n        }\n        return (\n            <Card\n                onMouseOver={this.toggleMouseOver}\n                onFocus={this.toggleMouseOver}\n                onMouseOut={this.toggleMouseOver}\n                onBlur={this.toggleMouseOver}\n                raised={isHover}\n                className={classNames('image-thumbnail', classes.card)}\n            >\n                {isMonetizationEnabled && (\n                    <div className={classNames(classes.textblock, 'image-thumb-text-block')}>{api.monetizationLabel}</div>\n                )}\n                <Link className={classNames(classes.actionArea, 'image-thumb-action-area')} to={detailsLink} area-label={'Go to ' + name}>\n                    <CardMedia area-hidden='true' classes={{ root: 'image-thumb-card-root' }}>\n                        {!defaultImage && ImageView}\n                        {defaultImage && <img src={app.context + defaultImage} alt='img' />}\n                    </CardMedia>\n                    <CardContent classes={{ root: classNames(classes.apiDetails, 'image-thumb-card-content') }}>\n                        <Typography\n                            className={classNames(classes.thumbHeader, 'image-thumb-card-thumb-header')}\n                            variant='h5'\n                            component='h2'\n                            gutterBottom\n                            onClick={this.handleRedirectToAPIOverview}\n                            title={name}\n                        >\n                            {name}\n                        </Typography>\n                        <div className={classNames(classes.row, 'image-thumb-provider-wrapper')}>\n                            <Typography\n                                variant='caption'\n                                gutterBottom\n                                align='left'\n                                className={classNames(classes.thumbBy, 'image-thumb-provider')}\n                            >\n                                <FormattedMessage defaultMessage='By' id='Apis.Listing.ApiThumb.by' />\n                                <FormattedMessage defaultMessage=' : ' id='Apis.Listing.ApiThumb.by.colon' />\n                                {provider}\n                            </Typography>\n                        </div>\n                        <div className={classNames(classes.thumbInfo, 'image-thumb-info')}>\n                            <div className={classNames(classes.row, 'image-thumb-row')}>\n                                <div className={classNames(classes.thumbLeft, 'image-thumb-left-version')}>\n                                    <Typography variant='subtitle1' component='div'>{version}</Typography>\n                                    <Typography variant='caption' component='div' gutterBottom align='left'>\n                                        <FormattedMessage defaultMessage='Version' id='Apis.Listing.ApiThumb.version' />\n                                    </Typography>\n                                </div>\n                            </div>\n                            <div className={classNames(classes.row, 'image-thumb-context')}>\n                                <div className={classes.thumbRight}>\n                                    <Typography\n                                        variant='subtitle1'\n                                        component='div'\n                                        align='right'\n                                        className={classes.contextBox}\n                                    >\n                                        {context}\n                                    </Typography>\n                                    <Typography\n                                        variant='caption'\n                                        gutterBottom\n                                        align='right'\n                                        className={classes.context}\n                                        Component='div'\n                                    >\n                                        <FormattedMessage defaultMessage='Context' id='Apis.Listing.ApiThumb.context' />\n                                    </Typography>\n                                </div>\n                            </div>\n                        </div>\n                        <div className={classNames(classes.thumbInfo, 'api-thumb-rating-chip-wrapper')}>\n                            {showRating && (\n                                <div className={classNames(classes.thumbLeftAction, 'api-thumb-rating-wrapper')}>\n                                    <Typography\n                                        variant='subtitle1'\n                                        component='div'\n                                        aria-label='API Rating'\n                                        gutterBottom\n                                        align='left'\n                                        className={classNames('api-thumb-rating', classes.ratingWrapper)}\n                                    >\n                                        <StarRatingBar\n                                            apiRating={api.avgRating}\n                                            apiId={api.id}\n                                            isEditable={false}\n                                            showSummary={false}\n                                        />\n                                    </Typography>\n                                </div>\n                            )}\n                            <div className={classNames(classes.thumbRight, 'api-thumb-chips-wrapper')}>\n                                <Typography\n                                    variant='subtitle1'\n                                    component='div'\n                                    gutterBottom\n                                    align='right'\n                                    className={classes.chipWrapper}\n                                >\n                                    {showChips()}\n                                </Typography>\n                            </div>\n                        </div>\n                    </CardContent>\n                </Link>\n            </Card>\n        );\n    }\n}\nApiThumbClassic.defaultProps = {\n    customWidth: null,\n    customHeight: null,\n    showInfo: true,\n};\nApiThumbClassic.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    customWidth: PropTypes.number,\n    customHeight: PropTypes.number,\n    showInfo: PropTypes.bool,\n};\n\nApiThumbClassic.contextType = ApiContext;\n\nexport default withStyles(styles, { withTheme: true })(ApiThumbClassic);\n","const getIcon = (key, category, theme, api) => {\n    let IconElement;\n\n    // Creating the icon\n    if (key && category) {\n        IconElement = key;\n    } else if (api.type === 'DOC') {\n        IconElement = theme.custom.thumbnail.document.icon;\n    } else {\n        IconElement = 'settings';\n    }\n    return IconElement;\n};\n\nexport default getIcon;\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Icon from '@material-ui/core/Icon';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Chip from '@material-ui/core/Chip';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport StarRatingBar from 'AppComponents/Apis/Listing/StarRatingBar';\nimport { app } from 'Settings';\nimport Api from 'AppData/api';\nimport classNames from 'classnames';\n\nimport getIcon from './ImageUtils';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minWidth: 200,\n        marginTop: 10,\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n    thumbHeader: {\n        width: '150px',\n        color: '#444',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        'padding-left': '5px',\n    },\n    contextBox: {\n        maxWidth: 120,\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        paddingLeft: '5px',\n    },\n    caption: {\n        color: theme.palette.grey[700],\n    },\n    imageDisplay: {\n        maxWidth: '40px',\n        maxHeight: '40px',\n    },\n}));\nconst windowURL = window.URL || window.webkitURL;\n\n/**\n * @param {JSON} props props passed from parent\n * @returns {JSX} plain api thumbnail\n */\nfunction APIThumbPlain(props) {\n    const theme = useTheme();\n    const classes = useStyles();\n    const { api, showInfo } = props;\n    const { custom: { thumbnail, social: { showRating } } } = theme;\n    const {\n        name, version, context, provider,\n    } = api;\n\n    const [imageConf, setImageConf] = useState({\n        selectedIcon: '',\n        category: '',\n        color: '#ccc',\n    });\n    const [imageObj, setIMageObj] = useState(null);\n    const [imageLoaded, setImageLoaded] = useState(false);\n\n    useEffect(() => {\n        const restApi = new Api();\n\n        const promisedThumbnail = restApi.getAPIThumbnail(api.id);\n\n        promisedThumbnail.then((response) => {\n            if (response && response.data) {\n                if (response.headers['content-type'] === 'application/json') {\n                    const iconJson = JSON.parse(response.data);\n                    setImageConf({\n                        selectedIcon: iconJson.key,\n                        category: iconJson.category,\n                        color: iconJson.color,\n                    });\n                } else if (response && response.data.size > 0) {\n                    setIMageObj(windowURL.createObjectURL(response.data));\n                }\n            }\n        }).finally(() => {\n            setImageLoaded(true);\n        });\n    }, []);\n    let ImageView;\n    if (!imageLoaded) {\n        ImageView = (\n            <div className='image-load-frame'>\n                <div className='image-load-animation1' />\n                <div className='image-load-animation2' />\n            </div>\n        );\n    } else if (imageObj) {\n        ImageView = (\n            <img\n                src={imageObj}\n                alt='API Thumbnail'\n                className={classes.imageDisplay}\n            />\n        );\n    } else {\n        ImageView = (\n            <Icon className={classes.icon} style={{ fontSize: 40 + 'px', color: imageConf.color }}>\n                {getIcon(imageConf.selectedIcon, imageConf.category, theme, api)}\n            </Icon>\n        );\n    }\n\n    if (!showInfo) {\n        return (\n            <Link to={'/apis/' + api.id} aria-hidden='true'>\n                <Box display='flex'>\n                    <Box>\n                        {!thumbnail.defaultApiImage && ImageView}\n                        {thumbnail.defaultApiImage && <img src={app.context + thumbnail.defaultApiImage} alt='img' />}\n                    </Box>\n                </Box>\n\n            </Link>\n        );\n    }\n    return (\n        <Card className={classes.root} variant='outlined'>\n            <CardContent>\n                <Box>\n                    <Link to={'/apis/' + api.id} aria-hidden='true'>\n                        <Box display='flex'>\n                            <Box>\n                                {!thumbnail.defaultApiImage && ImageView}\n                                {thumbnail.defaultApiImage && <img src={app.context + thumbnail.defaultApiImage} alt='img' />}\n                            </Box>\n                            <Typography\n                                variant='h5'\n                                gutterBottom\n                                title={name}\n                                className={classes.thumbHeader}\n                            >\n                                {name}\n                            </Typography>\n                        </Box>\n\n                    </Link>\n                </Box>\n                {provider && (\n                    <>\n                        <Typography variant='caption' gutterBottom align='left' className={classes.caption} component='span'>\n                            <FormattedMessage defaultMessage='By' id='Apis.Listing.ApiThumb.by' />\n                            <FormattedMessage defaultMessage=' : ' id='Apis.Listing.ApiThumb.by.colon' />\n                        </Typography>\n                        <Typography variant='body2' component='span'>{provider}</Typography>\n                    </>\n                )}\n                <Box display='flex' mt={2}>\n                    <Box flex={1}>\n                        <Typography variant='subtitle1'>{version}</Typography>\n                        <Typography variant='caption' gutterBottom align='left' className={classes.caption}>\n                            <FormattedMessage defaultMessage='Version' id='Apis.Listing.ApiThumb.version' />\n                        </Typography>\n                    </Box>\n                    <Box>\n                        <Typography variant='subtitle1' align='right' className={classes.contextBox}>\n                            {context}\n                        </Typography>\n                        <Typography\n                            variant='caption'\n                            gutterBottom\n                            align='right'\n                            className={classes.caption}\n                            Component='div'\n                        >\n                            <FormattedMessage defaultMessage='Context' id='Apis.Listing.ApiThumb.context' />\n                        </Typography>\n                    </Box>\n                </Box>\n\n                <Box display='flex' mt={2}>\n                    {showRating && (\n                        <Box flex={1}>\n                            <Typography\n                                variant='subtitle1'\n                                gutterBottom\n                                align='left'\n                                className={classNames('api-thumb-rating', classes.ratingWrapper)}\n                            >\n                                <StarRatingBar\n                                    apiRating={api.avgRating}\n                                    apiId={api.id}\n                                    isEditable={false}\n                                    showSummary={false}\n                                />\n                            </Typography>\n                        </Box>\n                    )}\n                    <Box>\n                        <Typography\n                            variant='subtitle1'\n                            gutterBottom\n                            align='right'\n                            className={classes.chipWrapper}\n                        >\n                            {(api.type === 'GRAPHQL' || api.transportType === 'GRAPHQL') && (\n                                <Chip\n                                    label={api.transportType === undefined ? api.type : api.transportType}\n                                    color='primary'\n                                />\n                            )}\n                            {(api.lifeCycleStatus === 'PROTOTYPED') && (\n                                <Chip\n                                    label={api.apiType === 'APIProduct' ? api.state : 'PROTOTYPE'}\n                                    color='default'\n                                />\n                            )}\n                        </Typography>\n                    </Box>\n                </Box>\n            </CardContent>\n        </Card>\n    );\n}\n\nAPIThumbPlain.defaultProps = {\n    showInfo: true,\n};\nAPIThumbPlain.propTypes = {\n    showInfo: PropTypes.bool,\n};\n\nexport default APIThumbPlain;\n","import React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport ApiThumbClassic from 'AppComponents/Apis/Listing/APICards/ApiThumbClassic';\nimport APIThumbPlain from 'AppComponents/Apis/Listing/APICards/APIThumbPlain';\n\n/**\n * Render no api section\n * @param {JSON} props properties passed from parent\n * @returns {void}\n */\nexport default function ApiThumb(props) {\n    const theme = useTheme();\n    const { custom } = theme;\n    if (!custom.thumbnailTemplates || !custom.thumbnailTemplates.active) {\n        return (\n            <ApiThumbClassic {...props} />\n        );\n    }\n    const { thumbnailTemplates: { variant, active } } = custom;\n    if (active && variant === 'plain') {\n        return (\n            <APIThumbPlain {...props} />\n        );\n    }\n    if (active && variant === 'text') {\n        return (\n            <ApiThumbClassic {...props} />\n        );\n    }\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Icon from '@material-ui/core/Icon';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { app } from 'Settings';\n\n/**\n * @inheritdoc\n * @param {*} theme theme object\n */\nconst styles = (theme) => ({\n    thumbContent: {\n        width: theme.custom.tagWise.thumbnail.width - theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(1),\n    },\n    thumbLeft: {\n        alignSelf: 'flex-start',\n        flex: 1,\n    },\n    thumbRight: {\n        alignSelf: 'flex-end',\n    },\n    thumbInfo: {\n        display: 'flex',\n    },\n    thumbHeader: {\n        width: theme.custom.tagWise.thumbnail.width - theme.spacing(1),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        justifyContent: 'center',\n        margin: 0,\n    },\n    contextBox: {\n        // eslint-disable-next-line radix\n        width: parseInt(150 - theme.spacing(0.5)),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        display: 'inline-block',\n        lineHeight: '1em',\n    },\n    thumbWrapper: {\n        position: 'relative',\n        paddingTop: 20,\n        marginRight: theme.spacing(2),\n    },\n    deleteIcon: {\n        fill: 'red',\n    },\n    textWrapper: {\n        color: theme.custom.tagCloud.leftMenu.color,\n        '& .material-icons': {\n            color: theme.custom.tagCloud.leftMenu.color,\n        },\n    },\n    image: {\n        width: theme.custom.tagWise.thumbnail.width,\n    },\n    imageWrapper: {\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.background.paper,\n        width: theme.custom.tagWise.thumbnail.width + theme.spacing(1),\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    imageOverlap: {\n        position: 'absolute',\n        bottom: 1,\n        backgroundColor: theme.custom.thumbnail.contentBackgroundColor,\n    },\n});\n\n/**\n * Get ApiTagThumb\n * @param {*} props properties\n * @returns {*}\n */\nfunction ApiTagThumb(props) {\n    const {\n        tag, path, classes, theme, style, mainPage,\n    } = props;\n    const tagLink = path + ':' + tag.value;\n    const {\n        tagWise: {\n            thumbnail: { image },\n        },\n    } = theme.custom;\n    const name = tag.value.split(theme.custom.tagWise.key)[0];\n    if (style === 'fixed-left' || !mainPage) {\n        return (\n            <Link to={tagLink} className={classes.textWrapper}>\n                <ListItem button>\n                    <ListItemIcon>\n                        <Icon>label</Icon>\n                    </ListItemIcon>\n                    <ListItemText primary={name} />\n                </ListItem>\n            </Link>\n        );\n    }\n\n    return (\n        <div className={classes.thumbWrapper}>\n            <Link to={tagLink} className={classes.imageWrapper}>\n                <img src={app.context + image} className={classes.image} alt='' />\n            </Link>\n            <div className={classNames(classes.thumbContent)}>\n                <Link to={tagLink} className={classes.textWrapper}>\n                    <Typography className={classes.thumbHeader} variant='h4' gutterBottom title={name}>\n                        {name}\n                    </Typography>\n                </Link>\n            </div>\n        </div>\n    );\n}\n\nApiTagThumb.propTypes = {\n    classes: PropTypes.shape({\n        thumbWrapper: PropTypes.shape({}).isRequired,\n        imageWrapper: PropTypes.shape({}).isRequired,\n        thumbContent: PropTypes.shape({}).isRequired,\n        imageOverlap: PropTypes.shape({}).isRequired,\n        textWrapper: PropTypes.shape({}).isRequired,\n        thumbHeader: PropTypes.shape({}).isRequired,\n        image: PropTypes.shape({}).isRequired,\n    }).isRequired,\n    theme: PropTypes.shape({\n        custom: PropTypes.shape({\n            tagWise: PropTypes.shape({}).isRequired,\n        }).isRequired,\n    }).isRequired,\n    tag: PropTypes.shape({\n        value: PropTypes.shape({\n            split: PropTypes.func,\n        }).isRequired,\n    }).isRequired,\n    path: PropTypes.shape({}).isRequired,\n    style: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(ApiTagThumb);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Icon from '@material-ui/core/Icon';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport ApiTagThumb from './ApiTagThumb';\n\nconst useStyles = makeStyles((theme) => ({\n    mainTitle: {\n        paddingTop: 10,\n    },\n    mainTitleWrapper: {\n        flexGrow: 1,\n    },\n    listContentWrapper: {\n        padding: `0 ${theme.spacing(3)}px`,\n    },\n    textWrapper: {\n        color: theme.custom.tagCloud.leftMenu.color,\n        '& .material-icons': {\n            color: theme.custom.tagCloud.leftMenu.color,\n        },\n    },\n    linkTextWrapper: {\n        color: theme.palette.primary.main,\n    },\n    tagWiseThumbWrapper: {\n        display: 'flex',\n    },\n    filterTitle: {\n        fontWeight: 200,\n        paddingLeft: theme.spacing(2),\n        background: theme.custom.tagCloud.leftMenu.titleBackground,\n        color: theme.palette.getContrastText(theme.custom.tagCloud.leftMenu.titleBackground),\n        height: theme.custom.infoBar.height,\n        alignItems: 'center',\n        display: 'flex',\n    },\n    mainPageList: {\n        display: 'flex',\n    },\n    mainPageAllApis: {\n        width: '100%',\n    },\n}));\n\n/**\n * Tag cloud listing tags\n * @param {JSON} props properties passed from parent.\n * @returns {void}\n */\nfunction TagCloudListingTags(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const {\n        custom: {\n            tagWise: {\n                key, active, style, showAllApis,\n            },\n        },\n    } = theme;\n\n    const tagWiseURL = '/apis?offset=0&query=tag';\n    const { allTags, mainPage } = props;\n    let apisTagCloudGroup = null;\n\n    if (allTags.count !== 0) {\n        if (allTags !== null) {\n            apisTagCloudGroup = allTags.filter((item) => active === true && item.value.split(key).length > 1);\n        }\n        if (apisTagCloudGroup && apisTagCloudGroup.length > 0) {\n            // const tagLink = tagWiseURL + ':' + apisTagCloudGroup[0].value;\n            // if (style === 'fixed-left') history.push(tagLink);\n        }\n    }\n\n    /**\n     *\n     * @inheritdoctheme\n     * @returns {React.Component} @inheritdoc\n     * @memberof TagCloudListing\n     */\n    return apisTagCloudGroup && apisTagCloudGroup.length > 0 ? (\n        <>\n            {!mainPage && (\n                <Typography variant='h6' gutterBottom className={classNames(classes.filterTitle, 'api-listing-tags-title')}>\n                    <FormattedMessage defaultMessage='API Groups' id='Apis.Listing.TagCloudListingTags.title' />\n                </Typography>\n            )}\n            <List component='nav' aria-label='main mailbox folders' className={classNames({ [classes.mainPageList]: mainPage })}>\n                {Object.keys(apisTagCloudGroup).map((keyInner) => {\n                    return (\n                        <ApiTagThumb\n                            key={keyInner}\n                            tag={apisTagCloudGroup[keyInner]}\n                            path={tagWiseURL}\n                            style={style}\n                            mainPage={mainPage}\n                        />\n                    );\n                })}\n            </List>\n            {showAllApis && (\n                <div className={classNames({ [classes.mainPageAllApis]: mainPage }, 'tag-cloud-listing-wrapper')}>\n                    <Divider />\n\n                    <Link to='apis/' className={classes.textWrapper}>\n                        <ListItem button>\n                            <ListItemIcon>\n                                <Icon>label</Icon>\n                            </ListItemIcon>\n                            <ListItemText\n                                primary={(\n                                    <FormattedMessage\n                                        defaultMessage='All Apis'\n                                        id='Apis.Listing.TagCloudListingTags.allApis'\n                                    />\n                                )}\n                            />\n                        </ListItem>\n                    </Link>\n                </div>\n            )}\n        </>\n\n    ) : (\n        <>\n            {!mainPage && (\n                <Typography variant='h6' gutterBottom className={classNames(classes.filterTitle, 'apis-listing-tags-group')}>\n                    <FormattedMessage defaultMessage='API Groups' id='Apis.Listing.TagCloudListingTags.title' />\n                </Typography>\n            )}\n            <div className={classNames(classes.mainTitle, 'apis-listing-tags-empty')}>\n                <Typography variant='subtitle1' gutterBottom align='center'>\n                    <FormattedMessage\n                        defaultMessage='API groups cannot be found'\n                        id='Apis.Listing.TagCloudListingTags.tagsNotFound'\n                    />\n                </Typography>\n                <Link to='apis/' className={classNames(classes.linkTextWrapper, 'apis-listing-tags-group-all-apis-link')}>\n                    <Typography variant='subtitle1' gutterBottom align='center'>\n                        <FormattedMessage\n                            defaultMessage='All Apis'\n                            id='Apis.Listing.TagCloudListingTags.allApis'\n                        />\n                    </Typography>\n                </Link>\n            </div>\n        </>\n    );\n}\n\nTagCloudListingTags.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    allTags: PropTypes.shape({}).isRequired,\n};\n\nexport default TagCloudListingTags;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport { app } from 'Settings';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    messageWrapper: {\n        marginTop: theme.spacing(4),\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n}));\n\n/**\n * Render no api section\n * @returns {void}\n */\nexport default function NoApi() {\n    const classes = useStyles();\n    const theme = useTheme();\n\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={3}>\n                <Grid item xs={12} className={classes.messageWrapper}>\n                    <img alt='API icon' src={app.context + theme.custom.noApiImage} className={classes.messageWrapper} />\n                    <Typography id='itest-no-apis' variant='h5' gutterBottom>\n                        <FormattedMessage id='Apis.Listing.NoApi.nodata.title' defaultMessage='No APIs Available' />\n                    </Typography>\n                    <Typography variant='subtitle1' gutterBottom>\n                        <FormattedMessage\n                            id='Apis.Listing.NoApi.nodata.content'\n                            defaultMessage='There are no APIs to display right now.'\n                        />\n                    </Typography>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n","/* eslint-disable react/prop-types */\n/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport CustomIcon from './CustomIcon';\n\nconst useStylesBootstrap = makeStyles((theme) => ({\n    arrow: {\n        color: theme.palette.common.black,\n    },\n    tooltip: {\n        backgroundColor: theme.palette.common.black,\n    },\n}));\n\nfunction BootstrapTooltip(props) {\n    const classes = useStylesBootstrap();\n\n    return <Tooltip arrow classes={classes} {...props} />;\n}\nconst styles = (theme) => ({\n    leftLInkText: {\n        color: theme.palette.getContrastText(theme.custom.leftMenu.background),\n        textTransform: 'capitalize',\n        width: '100%',\n        textAlign: 'left',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    leftLInkText_IconLeft: {\n        paddingLeft: 10,\n    },\n    LeftMenu: {\n        backgroundColor: theme.custom.leftMenu.background,\n        width: theme.custom.leftMenu.width,\n        textAlign: 'center',\n        fontFamily: theme.typography.fontFamily,\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        top: 0,\n    },\n    leftLInk: {\n        paddingTop: theme.spacing(0.6),\n        paddingBottom: theme.spacing(0.6),\n        paddingLeft: theme.spacing(1),\n        [theme.breakpoints.down('sm')]: {\n            paddingLeft: 0,\n        },\n        paddingRight: 0,\n        fontSize: theme.typography.caption.fontSize,\n        cursor: 'pointer',\n        textDecoration: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    leftLink_Icon: {\n        color: theme.palette.getContrastText(theme.custom.leftMenu.background),\n        fontSize: theme.custom.leftMenu.iconSize + 'px',\n    },\n    leftLink_IconLeft: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    noIcon: {\n        display: 'none',\n    },\n    leftLInkText_NoText: {\n        display: 'none',\n    },\n    leftLInkText_NoTextWhenSmall: {\n        [theme.breakpoints.down('sm')]: {\n            display: 'none !important',\n        }\n    },\n    submenu: {\n        paddingLeft: 12,\n        [theme.breakpoints.down('sm')]: {\n            paddingLeft: 0,\n            color: theme.palette.grey[500],\n        }\n    },\n});\n/**\n * Renders the left menu section.\n * @param {JSON} props props passed from parent\n * @returns {JSX} Leftmenu element.\n */\nfunction LeftMenuItem(props) {\n    const [selected, setSelected] = useState(false);\n\n    const {\n        classes, theme, Icon, to, history, text, route, submenu, open\n    } = props;\n    const routeToCheck = route || text;\n    const { leftMenu } = theme.custom;\n    const strokeColor = theme.palette.getContrastText(leftMenu.background);\n    const { iconSize } = leftMenu;\n    const ditectCurrentMenu = (location = null) => {\n        if (!location) {\n            location = window.location;\n        }\n        const { pathname } = location;\n\n        const test1 = new RegExp('/' + routeToCheck + '$', 'g');\n        const test2 = new RegExp('/' + routeToCheck + '/', 'g');\n        if (pathname.match(test1) || pathname.match(test2)) {\n            setSelected(true);\n        } else {\n            setSelected(false);\n        }\n\n\n    };\n    useEffect(() => {\n        ditectCurrentMenu();\n    }, []);\n    history.listen((location) => {\n        ditectCurrentMenu(location);\n    });\n    let activeBackground = '';\n    if (selected && !submenu) {\n        activeBackground = leftMenu.leftMenuActive;\n    } else if (selected && submenu) {\n        activeBackground = leftMenu.leftMenuActiveSubmenu;\n    }\n    return (\n        <BootstrapTooltip title={props.text} placement=\"right\">\n            <div>\n            <Link\n                className={classNames(\n                    classes.leftLInk,\n                    {\n                        [classes.leftLink_IconLeft]: leftMenu === 'icon left',\n                        [classes.submenu]: submenu,\n                        'selected': selected,\n                    },\n                    'leftLInk',\n                )}\n                to={to}\n                style={{ backgroundColor: activeBackground }}\n                title={text}\n            >\n                {\n                    // If the icon pro ( which is coming from the React Material library )\n                    // is coming we add css class and render.\n                    // If leftMenu='no icon' at the theme object we hide the icon. Also we add static classes to\n                    // allow customers theme\n                    // the product without compiling.\n                    Icon ? (\n                        React.cloneElement(Icon, {\n                            className: classNames(\n                                classes.leftLink_Icon,\n                                {\n                                    [classes.noIcon]: leftMenu.style === 'no icon',\n                                    [classes.submenu]: submenu,\n                                },\n                                'leftLink_Icon',\n                            ),\n                        })\n                    ) : (\n                            // We can also add custom icons\n                            <CustomIcon\n                                strokeColor={submenu ? '#cccccc' : strokeColor}\n                                width={submenu ? iconSize - 10 : iconSize}\n                                height={submenu ? iconSize - 10 : iconSize}\n                                icon={props.iconText}\n                                aria-label={ text + ' icon'}\n                                className={classNames(\n                                    classes.leftLInk,\n                                    {\n                                        [classes.noIcon]: leftMenu.style === 'no icon',\n                                    },\n                                    'leftLink_Icon',\n                                )}\n                            />\n\n                        )}\n                {open && (\n                    <Typography\n                        className={classNames(\n                            classes.leftLInkText,\n                            {\n                                [classes.leftLInkText_IconLeft]: leftMenu.style === 'icon left',\n                                [classes.leftLInkText_NoText]: leftMenu.style === 'no text',\n                            },\n                            classes.leftLInkText_NoTextWhenSmall,\n                            'leftLInkText',\n                        )}\n                    >\n                        {props.text}\n                    </Typography>\n                )}\n                {!open && (\n                    <Typography\n                        className={classNames(\n                            {\n                                [classes.leftLInkText_IconLeft]: leftMenu.style === 'icon left',\n                            },\n                            classes.leftLInkText_NoTextWhenSmall,\n                            'leftLInkText',\n                        )}\n                    />\n                )}\n\n\n            </Link>\n            </div>\n        </BootstrapTooltip>\n    );\n}\nLeftMenuItem.defaultProps = {\n    route: null,\n    iconText: null,\n    Icon: null,\n    submenu: false,\n};\nLeftMenuItem.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    Icon: PropTypes.element,\n    text: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.shape({}),\n    ]).isRequired,\n    to: PropTypes.string.isRequired,\n    route: PropTypes.string,\n    iconText: PropTypes.string,\n    history: PropTypes.shape({\n        location: PropTypes.shape({}).isRequired,\n    }).isRequired,\n    submenu: PropTypes.bool,\n};\nexport default withRouter(withStyles(styles, { withTheme: true })(LeftMenuItem));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport API from 'AppData/api';\nimport TagCloudListingTags from './TagCloudListingTags';\nimport CustomIcon from '../../Shared/CustomIcon';\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        height: 70,\n        background: theme.custom.infoBar.background,\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    mainIconWrapper: {\n        paddingTop: 13,\n        paddingLeft: 20,\n        paddingRight: 20,\n    },\n    mainTitle: {\n        paddingTop: 10,\n    },\n    mainTitleWrapper: {\n        flexGrow: 1,\n    },\n    content: {\n        flexGrow: 1,\n    },\n    listContentWrapper: {\n        padding: `0 ${theme.spacing(3)}px`,\n    },\n    iconDefault: {\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n    },\n}));\n/**\n * Renders tag cloud.\n * @returns {JSX} Tag cloud listing.\n */\nexport default function TagCloudListing() {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [allTags, setAllTags] = useState(null);\n    useEffect(() => {\n        const restApiClient = new API();\n        const promisedTags = restApiClient.getAllTags();\n        promisedTags\n            .then((response) => {\n                setAllTags(response.body.list);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }, []);\n    const strokeColorMain = theme.palette.getContrastText(theme.palette.background.paper);\n\n    return (\n        <main className={classes.content}>\n            <div className={classes.appBar}>\n                <div className={classes.mainIconWrapper}>\n                    <CustomIcon strokeColor={strokeColorMain} width={42} height={42} icon='api' />\n                </div>\n                <div className={classes.mainTitleWrapper}>\n                    <Typography variant='h4' className={classes.mainTitle}>\n                        <FormattedMessage\n                            defaultMessage='API Groups'\n                            id='Apis.Listing.TagCloudListing.apigroups.main'\n                        />\n                    </Typography>\n                </div>\n            </div>\n            <div className={classes.listContentWrapper}>\n                {allTags && <TagCloudListingTags allTags={allTags} mainPage />}\n            </div>\n        </main>\n    );\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Typography from '@material-ui/core/Typography';\nimport Select from '@material-ui/core/Select';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport PropTypes from 'prop-types';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\n\n/**\n * @inheritdoc\n * @param {*} theme theme object\n */\nconst styles = theme => ({\n    titleBar: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        borderBottomWidth: '1px',\n        borderBottomStyle: 'solid',\n        borderColor: theme.palette.text.secondary,\n        marginBottom: 20,\n    },\n    buttonLeft: {\n        alignSelf: 'flex-start',\n        display: 'flex',\n    },\n    buttonRight: {\n        alignSelf: 'flex-end',\n        display: 'flex',\n        marginLeft: 20,\n    },\n    title: {\n        display: 'inline-block',\n        marginLeft: 20,\n    },\n    buttonsWrapper: {\n        marginTop: 40,\n    },\n    legend: {\n        marginBottom: 0,\n        borderBottomStyle: 'none',\n        marginTop: 20,\n        fontSize: 12,\n    },\n    inputText: {\n        marginTop: 20,\n    },\n    buttonRightLink: {\n        textDecoration: 'none',\n    },\n    FormControl: {\n        padding: theme.spacing(2),\n        width: '100%',\n    },\n    fullWidth: {\n        '& .MuiFormControl-root':{\n            width: '100%',\n        }\n    },\n    FormControlOdd: {\n        backgroundColor: theme.palette.background.paper,\n    },\n    quotaHelp: {\n        position: 'relative',\n    },\n    subscribeRoot: {\n        paddingLeft: theme.spacing(2),\n    },\n    subscribeRootSmall: {\n        marginLeft: `-${theme.spacing(4)}px`,\n    },\n    smallDisplay: {\n        width: 240,\n        '& .MuiInput-formControl': {\n            marginTop: 0,\n        },\n    },\n    smallDisplayFix: {\n        '& .MuiSelect-selectMenu': {\n            padding: 0,\n        },\n    },\n    selectMenuRoot: {\n        margin: 0,\n        padding: 0,\n    },\n    appDropDown: {\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n    },\n});\n\nconst subscribeToApi = (props) => {\n    const [appSelected, setAppSelected] = useState('');\n    const [policySelected, setPolicySelected] = useState('');\n    const [applicationsList, setApplicationsList] = useState([]);\n    const {\n        classes,\n        throttlingPolicyList,\n        applicationsAvailable,\n        subscriptionRequest,\n        updateSubscriptionRequest,\n        renderSmall,\n    } = props;\n\n    useEffect(() => {\n        if (throttlingPolicyList && throttlingPolicyList[0]) {\n            setPolicySelected(throttlingPolicyList[0].tierName);\n        }\n    }, [throttlingPolicyList]);\n\n    useEffect(() => {\n        if (applicationsAvailable && applicationsAvailable[0]) {\n            setApplicationsList(applicationsAvailable);\n            setAppSelected(applicationsAvailable[0]);\n            const newRequest = { ...subscriptionRequest };\n            newRequest.applicationId = applicationsAvailable[0].value;\n        }\n    }, [applicationsAvailable]);\n\n    /**\n     * This method is used to handle the updating of subscription\n     * request object and selected fields.\n     * @param {*} field field that should be updated in subscription request\n     * @param {*} event event fired\n     */\n    const handleChange = (field, event,value = null) => {\n        const newRequest = { ...subscriptionRequest };\n        const { target } = event;\n        switch (field) {\n            case 'application':\n                newRequest.applicationId = value.value;\n                setAppSelected(value);\n                break;\n            case 'throttlingPolicy':\n                newRequest.throttlingPolicy = target.value;\n                setPolicySelected(target.value);\n                break;\n            default:\n                break;\n        }\n        updateSubscriptionRequest(newRequest);\n    };\n\n    return (\n        <Grid container className={classNames(classes.subscribeRoot, { [classes.subscribeRootSmall]: renderSmall })}>\n            <Grid item xs={12} md={renderSmall ? 12 : 6}>\n                {appSelected && (\n                    <FormControl className={classNames(classes.FormControl, { [classes.smallDisplay]: renderSmall })}>\n                        <InputLabel shrink for='application-subscribe' className={classes.quotaHelp}>\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.SubscribeToApi.application'\n                                defaultMessage='Application'\n                            />\n                        </InputLabel>\n                        <Autocomplete\n                           id=\"application-subscribe\"\n                           aria-describedby='application-helper-text'\n                           options={applicationsList}\n                           value={(applicationsList.length !== 0 && appSelected === '') ?\n                                applicationsList[0] : appSelected}\n                           onChange={(e, value) => handleChange('application', e, value)}\n                           getOptionLabel={(option) => option.label}\n                           classes={{root:classes.fullWidth}}\n                           renderInput={(params) => <TextField {...params} />}\n                         />\n                        <FormHelperText id='application-helper-text'>\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.SubscribeToApi.select.an.application.to.subscribe'\n                                defaultMessage='Select an Application to subscribe'\n                            />\n                        </FormHelperText>\n                    </FormControl>\n                )}\n                {throttlingPolicyList && (\n                    <FormControl\n                        className={classNames(classes.FormControl, classes.smallDisplayFix, {\n                            [classes.smallDisplay]: renderSmall,\n                            [classes.FormControlOdd]: !renderSmall,\n                        })}\n                    >\n                        <InputLabel shrink htmlFor='policy-label-placeholder' className={classes.quotaHelp}>\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.SubscribeToApi.business.plan'\n                                defaultMessage='Business Plan'\n                            />\n                        </InputLabel>\n                        <Select\n                            value={policySelected}\n                            aria-describedby='policies-helper-text'\n                            onChange={e => handleChange('throttlingPolicy', e)}\n                            input={<Input name='policySelected' id='policy-label-placeholder' />}\n                            displayEmpty\n                            name='policySelected'\n                            className={classes.selectEmpty}\n                        >\n                            {throttlingPolicyList.map(policy => (\n                                <MenuItem value={policy.tierName} key={policy.tierName}  className={classes.appDropDown}>\n                                    {policy.tierPlan === 'COMMERCIAL' ? (\n                                        <React.Fragment>\n                                            <ListItemText\n                                                classes={{ root: classes.selectMenuRoot }}\n                                                primary={policy.tierName}\n                                                secondary={\n                                                    policy.monetizationAttributes.pricePerRequest ? (\n                                                        <Typography>\n                                                            {policy.monetizationAttributes.pricePerRequest}{' '}\n                                                            {policy.monetizationAttributes.currencyType}\n                                                            {' per Request'}\n                                                        </Typography>\n                                                    ) : (\n                                                        <Typography>\n                                                            {policy.monetizationAttributes.fixedPrice}{' '}\n                                                            {policy.monetizationAttributes.currencyType}\n                                                            {' per '}\n                                                            {policy.monetizationAttributes.billingCycle}\n                                                        </Typography>\n                                                    )\n                                                }\n                                            />\n                                        </React.Fragment>\n                                    ) : (\n                                        <ListItemText primary={policy.tierName} />\n                                    )}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                        <FormHelperText id='policies-helper-text'>\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.SubscribeToApi.available.policies'\n                                defaultMessage='Available Policies -'\n                            />{' '}\n                            {throttlingPolicyList.map((policy, index) => (\n                                <span key={policy.tierName}>\n                                    {policy.tierName}\n                                    {index !== throttlingPolicyList.length - 1 && <span>,</span>}\n                                </span>\n                            ))}\n                        </FormHelperText>\n                    </FormControl>\n                )}\n            </Grid>\n        </Grid>\n    );\n};\nsubscribeToApi.propTypes = {\n    classes: PropTypes.shape({\n        FormControl: PropTypes.string,\n        quotaHelp: PropTypes.string,\n        selectEmpty: PropTypes.string,\n        FormControlOdd: PropTypes.string,\n        subscribeRoot: PropTypes.string,\n        subscribeRootSmall: PropTypes.string,\n        smallDisplayFix: PropTypes.string,\n        selectMenuRoot: PropTypes.string,\n        smallDisplay: PropTypes.string,\n    }).isRequired,\n    applicationsAvailable: PropTypes.arrayOf(PropTypes.shape({\n        value: PropTypes.string,\n        label: PropTypes.string,\n    })).isRequired,\n    throttlingPolicyList: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n    subscriptionRequest: PropTypes.shape({}).isRequired,\n    updateSubscriptionRequest: PropTypes.func.isRequired,\n    renderSmall: PropTypes.bool,\n};\nsubscribeToApi.defaultProps = {\n    renderSmall: false,\n};\n\nexport default withStyles(styles)(subscribeToApi);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport { Link as RouterLink } from 'react-router-dom';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport Icon from '@material-ui/core/Icon';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(1, 3),\n    },\n    link: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    linkNotActive: {\n        display: 'flex',\n        alignItems: 'center',\n        cursor: 'default',\n    },\n    icon: {\n        marginRight: theme.spacing(0.5),\n        width: 20,\n        height: 20,\n    },\n    selectedTagText: {\n        textIndent: 4,\n    },\n    apiGroup: {\n        color: theme.palette.grey[800],\n    },\n}));\n\n/**\n * Render no api breadcrumb section.\n * @param {JSON} props properties passed down from the parent.\n * @returns {JSX} Api breadcrumb section.\n */\nexport default function ApiBreadcrumbs(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const { selectedTag } = props;\n    return (\n        <Paper elevation={0} className={classes.root}>\n            <Breadcrumbs aria-label='breadcrumb'>\n                <RouterLink\n                    to={theme.custom.tagWise.active && theme.custom.tagWise.style === 'page' ? '/api-groups' : '/apis'}\n                    className={classes.apiGroup}\n                >\n                    <Link color='inherit' className={classes.link}>\n                        <Icon className={classes.icon}>dynamic_feed</Icon>\n                        <FormattedMessage defaultMessage='API Groups' id='Apis.Listing.ApiBreadcrumbs.apigroups.main' />\n                    </Link>\n                </RouterLink>\n\n                {selectedTag && (\n                    <Link color='inherit' className={classes.linkNotActive}>\n                        <CustomIcon width={16} height={16} icon='api' />\n                        <span className={classes.selectedTagText}>{selectedTag}</span>\n                    </Link>\n                )}\n            </Breadcrumbs>\n        </Paper>\n    );\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { FormattedMessage } from 'react-intl';\nimport MaterialIcons from 'MaterialIcons';\nimport ImageGenerator from './ImageGenerator';\nimport { ApiContext } from '../../Details/ApiContext';\n\nconst styles = (theme) => ({\n    thumbContent: {\n        width: theme.custom.thumbnail.width - theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(1),\n        minHeight: 130,\n    },\n    thumbLeft: {\n        alignSelf: 'flex-start',\n        flex: 1,\n    },\n    thumbRight: {\n        alignSelf: 'flex-end',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    thumbInfo: {\n        display: 'flex',\n    },\n    thumbHeader: {\n        width: theme.custom.thumbnail.width - theme.spacing(1),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n    },\n    contextBox: {\n        width: parseInt((theme.custom.thumbnail.width - theme.spacing(1)) / 2, 10),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        display: 'inline-block',\n        lineHeight: '1em',\n    },\n    thumbWrapper: {\n        position: 'relative',\n        paddingTop: 15,\n        marginLeft: theme.spacing(2),\n    },\n    deleteIcon: {\n        fill: 'red',\n    },\n    textWrapper: {\n        color: theme.palette.text.secondary,\n        textDecoration: 'none',\n    },\n    imageWrapper: {\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.background.paper,\n        width: theme.custom.thumbnail.width + theme.spacing(1),\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    imageOverlap: {\n        position: 'absolute',\n        bottom: 1,\n        backgroundColor: theme.custom.thumbnail.contentBackgroundColor,\n    },\n});\n\nconst windowURL = window.URL || window.webkitURL;\n/**\n *\n *\n * @class DocThumb\n * @extends {React.Component}\n */\nclass DocThumb extends React.Component {\n    /**\n     * Creates an instance of DocThumb.\n     * @param {JSON} props properties\n     * @memberof DocThumb\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            category: MaterialIcons.categories[0].name,\n            selectedIcon: null,\n            color: null,\n            backgroundIndex: null,\n            imageObj: null,\n        };\n    }\n\n    /**\n     * Clean up resource\n     */\n    componentWillUnmount() {\n        const { thumbnail, imageObj } = this.state;\n        if (thumbnail) {\n            windowURL.revokeObjectURL(imageObj);\n        }\n    }\n\n    /**\n     * @returns {JSX} doc thumbnail\n     * @memberof DocThumb\n     */\n    render() {\n        const {\n            selectedIcon, color, backgroundIndex, category,\n        } = this.state;\n        const { doc, classes, theme } = this.props;\n        const {\n            doc: {\n                name, sourceType, apiName, apiVersion, id, apiUUID,\n            },\n        } = this.props;\n        const detailsLink = '/apis/' + apiUUID + '/documents/' + id + '/details';\n        const { thumbnail } = theme.custom;\n        const imageWidth = thumbnail.width;\n        const defaultImage = thumbnail.defaultApiImage;\n\n        const ImageView = (\n            <ImageGenerator\n                width={imageWidth}\n                height={140}\n                api={doc}\n                fixedIcon={{\n                    key: selectedIcon,\n                    color,\n                    backgroundIndex,\n                    category,\n                    doc,\n                }}\n            />\n        );\n\n        return (\n            <div className={classes.thumbWrapper}>\n                <Link to={detailsLink} className={classes.imageWrapper}>\n                    {!defaultImage && ImageView}\n                    {defaultImage && <img src={defaultImage} alt='document' />}\n                </Link>\n\n                <div\n                    className={classNames(classes.thumbContent, {\n                        [classes.imageOverlap]: thumbnail.contentPictureOverlap,\n                    })}\n                >\n                    <Link to={detailsLink} className={classes.textWrapper}>\n                        <Typography\n                            className={classes.thumbHeader}\n                            variant='h4'\n                            gutterBottom\n                            onClick={this.handleRedirectToAPIOverview}\n                            title={name}\n                        >\n                            {name}\n                        </Typography>\n                    </Link>\n                    <Typography variant='caption' gutterBottom align='left'>\n                        <FormattedMessage defaultMessage='Source Type:' id='Apis.Listing.DocThumb.sourceType' />\n                        {sourceType}\n                    </Typography>\n                    <div className={classes.thumbInfo}>\n                        <div className={classes.thumbLeft}>\n                            <Typography variant='subtitle1'>{apiName}</Typography>\n                            <Typography variant='caption' gutterBottom align='left'>\n                                <FormattedMessage defaultMessage='Api Name' id='Apis.Listing.DocThumb.apiName' />\n                            </Typography>\n                        </div>\n                        <div className={classes.thumbRight}>\n                            <Typography variant='subtitle1' align='right' className={classes.contextBox}>\n                                {apiVersion}\n                            </Typography>\n                            <Typography variant='caption' gutterBottom align='right' component='div'>\n                                <FormattedMessage defaultMessage='API Version' id='Apis.Listing.DocThumb.apiVersion' />\n                            </Typography>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDocThumb.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n};\n\nDocThumb.contextType = ApiContext;\n\nexport default withStyles(styles, { withTheme: true })(DocThumb);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { createMuiTheme, MuiThemeProvider, withStyles } from '@material-ui/core/styles';\nimport MUIDataTable from 'mui-datatables';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport merge from 'lodash.merge';\nimport cloneDeep from 'lodash.clonedeep';\nimport queryString from 'query-string';\nimport API from 'AppData/api';\nimport { withTheme } from '@material-ui/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Configurations from 'Config';\nimport StarRatingBar from 'AppComponents/Apis/Listing/StarRatingBar';\nimport withSettings from 'AppComponents/Shared/withSettingsContext';\nimport Loading from 'AppComponents/Base/Loading/Loading';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Icon from '@material-ui/core/Icon';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport DefaultConfigurations from 'AppData/defaultTheme';\nimport ImageGenerator from './APICards/ImageGenerator';\nimport ApiThumb from './ApiThumb';\nimport DocThumb from './APICards/DocThumb';\nimport { ApiContext } from '../Details/ApiContext';\nimport NoApi from './NoApi';\n\nconst styles = (theme) => ({\n    apiNameLink: {\n        display: 'flex',\n        alignItems: 'center',\n        '& span': {\n            marginLeft: theme.spacing(1),\n        },\n        color: theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund),\n        '& .material-icons': {\n            marginTop: 5,\n            color: `${theme.custom.thumbnail.iconColor} !important`,\n            fontSize: `${theme.custom.thumbnail.listViewIconSize}px !important`,\n        },\n    },\n});\n/**\n * Table view for api listing\n *\n * @class ApiTableView\n * @extends {React.Component}\n */\nclass ApiTableView extends React.Component {\n    /**\n     * @inheritdoc\n     * @param {*} props properties\n     * @memberof ApiTableView\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: null,\n            loading: true,\n        };\n        this.page = 0;\n        this.count = 100;\n        this.rowsPerPage = localStorage.getItem('portal.numberOfRows') || 10;\n        this.pageType = null;\n    }\n\n    /**\n     * Component mount call back\n     * @returns {void}\n     */\n    componentDidMount() {\n        this.apiType = this.context.apiType;\n        this.getData();\n    }\n\n    /**\n     * Component update call back\n     * @param {JSON} prevProps properties from previous state of the component\n     * @returns {void}\n     */\n    componentDidUpdate(prevProps) {\n        const { query, selectedTag } = this.props;\n        if (\n            this.apiType !== this.context.apiType\n            || query !== prevProps.query\n            || prevProps.selectedTag !== selectedTag\n        ) {\n            this.page = 0;\n            this.apiType = this.context.apiType;\n            this.getData();\n        }\n    }\n\n    getMuiTheme = () => {\n        const { gridView, theme } = this.props;\n        let themeAdditions = {};\n        const muiTheme = {\n            overrides: {\n                MUIDataTable: {\n                    root: {\n                        backgroundColor: 'transparent',\n                        marginLeft: 40,\n                        marginBottom: 20,\n                        width: '100%',\n                    },\n                    paper: {\n                        boxShadow: 'none',\n                        backgroundColor: 'transparent',\n                        width: '100%',\n                    },\n                    tableRoot: {\n                        border: 'solid 1px #fff',\n                        '& a': {\n                            display: 'flex',\n                            alignItems: 'center',\n                        },\n                        '& a > div': {\n                            paddingRight: 10,\n                        },\n                        '& td': {\n                            whiteSpace: 'nowrap',\n                            lineHeight: 1,\n                        },\n                        '& tr:nth-child(even)': {\n                            backgroundColor: theme.custom.listView.tableBodyEvenBackgrund,\n                            '& td': {\n                                color: theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund),\n                            },\n                        },\n                        '& tr:nth-child(odd)': {\n                            backgroundColor: theme.custom.listView.tableBodyOddBackgrund,\n                            '& td': {\n                                color: theme.palette.getContrastText(theme.custom.listView.tableBodyOddBackgrund),\n                            },\n                        },\n                        '& th': {\n                            backgroundColor: theme.custom.listView.tableHeadBackground,\n                            color: theme.palette.getContrastText(theme.custom.listView.tableHeadBackground),\n                        },\n                    },\n                },\n                MUIDataTablePagination: {\n                    root: {\n                        color: theme.palette.getContrastText(theme.palette.background.default),\n\n                    },\n                },\n                MuiMenuItem: {\n                    root: {\n                        color: theme.palette.getContrastText(theme.palette.background.default),\n                    },\n                },\n                MUIDataTableToolbar: {\n                    root: {\n                        '& svg': {\n                            color: theme.palette.getContrastText(theme.palette.background.default),\n                        },\n                    },\n                },\n            },\n        };\n        if (gridView) {\n            themeAdditions = {\n                overrides: {\n                    MUIDataTable: {\n                        tableRoot: {\n                            display: 'block',\n                            border: 'none',\n                            '& tbody': {\n                                display: 'flex',\n                                flexWrap: 'wrap',\n                                marginLeft: 0,\n                            },\n                            '& thead': {\n                                display: 'none',\n                            },\n                            '& tr:nth-child(odd),& tr:nth-child(even)': {\n                                display: 'block',\n                                marginRight: 5,\n                                marginBottom: 5,\n                                backgroundColor: 'transparent',\n                            },\n                            '& td': {\n                                display: 'block',\n                                backgroundColor: 'transparent',\n                            },\n                        },\n                        paper: {\n                            boxShadow: 'none',\n                            backgroundColor: 'transparent',\n                        },\n                    },\n                    MUIDataTableBodyCell: {\n                        root: {\n                            backgroundColor: 'transparent',\n                            width: '100%',\n                        },\n                    },\n                },\n            };\n        }\n        const systemTheme = merge({}, DefaultConfigurations, Configurations, { custom: cloneDeep(theme.custom) });\n        const dataTableTheme = merge({}, muiTheme, systemTheme, themeAdditions);\n        return createMuiTheme(dataTableTheme);\n    };\n\n    // get data\n    getData = () => {\n        const { intl } = this.props;\n        this.setState({ loading: true });\n        this.xhrRequest()\n            .then((data) => {\n                const { body } = data;\n                const { list, pagination } = body;\n                const { total } = pagination;\n                this.count = total;\n                this.setState({ data: list });\n            })\n            .catch((error) => {\n                const { response } = error;\n                const { setTenantDomain } = this.props;\n                if (response && response.body.code === 901300) {\n                    setTenantDomain('INVALID');\n                    Alert.error(intl.formatMessage({\n                        defaultMessage: 'Invalid tenant domain',\n                        id: 'Apis.Listing.ApiTableView.invalid.tenant.domain',\n                    }));\n                } else {\n                    Alert.error(intl.formatMessage({\n                        defaultMessage: 'Error While Loading APIs',\n                        id: 'Apis.Listing.ApiTableView.error.loading',\n                    }));\n                }\n            })\n            .finally(() => {\n                this.setState({ loading: false });\n            });\n    };\n\n    xhrRequest = () => {\n        const { query, selectedTag } = this.props;\n        const { page, rowsPerPage } = this;\n        const api = new API();\n        const searchParam = new URLSearchParams(query);\n        const searchQuery = searchParam.get('query');\n        if (query && searchQuery !== null) {\n            const composeQuery = queryString.parse(query);\n            composeQuery.limit = this.rowsPerPage;\n            composeQuery.offset = page * rowsPerPage;\n            return api.search(composeQuery);\n        }\n\n        if (selectedTag) {\n            return api.getAllAPIs({ query: 'tag:' + selectedTag, limit: this.rowsPerPage, offset: page * rowsPerPage });\n        } else {\n            return api.getAllAPIs({ limit: this.rowsPerPage, offset: page * rowsPerPage });\n        }\n    };\n\n    changePage = (page) => {\n        const { intl } = this.props;\n        this.page = page;\n        this.setState({ loading: true });\n        this.xhrRequest()\n            .then((data) => {\n                const { body } = data;\n                const { list } = body;\n                this.setState({\n                    data: list,\n                });\n            })\n            .catch(() => {\n                Alert.error(intl.formatMessage({\n                    defaultMessage: 'Error While Loading APIs',\n                    id: 'Apis.Listing.ApiTableView.error.loading',\n                }));\n            })\n            .finally(() => {\n                this.setState({ loading: false });\n            });\n    };\n\n    /**\n     * @inheritdoc\n     * @returns {Component}x\n     * @memberof ApiTableView\n     */\n    render() {\n        const { intl, gridView, theme } = this.props;\n        const { custom: { social: { showRating } } } = theme;\n        const { loading } = this.state;\n        const columns = [\n            {\n                name: 'id',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'name',\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            return <ImageGenerator api={artifact} width={30} height={30} />;\n                        }\n                        return <span />;\n                    },\n                    sort: false,\n                    filter: false,\n                    display: 'excluded',\n                },\n            },\n            {\n                name: 'name',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.name',\n                    defaultMessage: 'Name',\n                }),\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            const apiName = tableMeta.rowData[2];\n                            const apiId = tableMeta.rowData[0];\n                            const { classes } = this.props;\n\n                            if (artifact) {\n                                if (artifact.type === 'DOC') {\n                                    return (\n                                        <Link\n                                            to={'/apis/' + artifact.apiUUID + '/documents'}\n                                            className={classes.apiNameLink}\n                                        >\n                                            <Icon>library_books</Icon>\n\n                                            <span>\n                                                {' '}\n                                                <FormattedMessage\n                                                    id='Apis.Listing.TableView.TableView.doc.flag'\n                                                    defaultMessage='[Doc] '\n                                                />\n                                                {' '}\n                                                {apiName}\n                                            </span>\n                                        </Link>\n                                    );\n                                }\n                                const strokeColor = theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund);\n                                return (\n                                    <Link\n                                        to={'/apis/' + apiId + '/overview'}\n                                        className={classes.apiNameLink}\n                                    >\n                                        <CustomIcon width={16} height={16} icon='api' strokeColor={strokeColor} />\n\n                                        <span>{apiName}</span>\n                                    </Link>\n                                );\n                            }\n                        }\n                        return <span />;\n                    },\n                    sort: false,\n                    filter: false,\n                },\n            },\n            {\n                name: 'version',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.version',\n                    defaultMessage: 'Version',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'context',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.context',\n                    defaultMessage: 'Context',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'provider',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.provider',\n                    defaultMessage: 'Provider/Business Owner',\n                }),\n                options: {\n                    sort: false,\n                    customBodyRender: (value, tableMeta) => {\n                        if (tableMeta.rowData) {\n                            if (\n                                tableMeta.rowData[9] && tableMeta.rowData[9].businessOwner\n                            ) {\n                                return (\n                                    <>\n                                        <div>{tableMeta.rowData[9].businessOwner}</div>\n                                        <Typography variant='caption'>\n                                            <FormattedMessage\n                                                defaultMessage='(Business Owner)'\n                                                id='Apis.Listing.ApiTableView.business.owner.caption'\n                                            />\n                                        </Typography>\n                                    </>\n                                );\n                            } else {\n                                return (\n                                    <>\n                                        {value\n                                        && (\n                                            <>\n                                                <div>{value}</div>\n                                                <Typography variant='caption'>\n                                                    <FormattedMessage\n                                                        defaultMessage='(Provider)'\n                                                        id='Apis.Listing.ApiTableView.provider.caption'\n                                                    />\n                                                </Typography>\n                                            </>\n                                        )}\n                                    </>\n                                );\n                            }\n                        }\n                        return <span />;\n                    },\n                },\n            },\n            {\n                name: 'type',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.type',\n                    defaultMessage: 'Type',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'rating',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.rating',\n                    defaultMessage: 'Rating',\n                }),\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            if (artifact) {\n                                if (artifact.type !== 'DOC') {\n                                    const apiId = tableMeta.rowData[0];\n                                    const avgRating = tableMeta.rowData[8];\n                                    return (\n                                        <StarRatingBar\n                                            apiRating={avgRating}\n                                            apiId={apiId}\n                                            isEditable={false}\n                                            showSummary={false}\n                                        />\n                                    );\n                                }\n                            }\n                        }\n                        return <span />;\n                    },\n                    sort: false,\n                    display: showRating ? 'true' : 'excluded',\n                },\n            },\n            {\n                name: 'avgRating',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'businessInformation',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n        ];\n        const { page, count, rowsPerPage } = this;\n        const { data } = this.state;\n        const options = {\n            filterType: 'dropdown',\n            responsive: 'stacked',\n            serverSide: true,\n            search: false,\n            count,\n            page,\n            onTableChange: (action, tableState) => {\n                switch (action) {\n                    case 'changePage':\n                        this.changePage(tableState.page);\n                        break;\n                    default:\n                        break;\n                }\n            },\n            selectableRows: 'none',\n            rowsPerPage,\n            onChangeRowsPerPage: (numberOfRows) => {\n                const { page: pageInner, count: countInner } = this;\n                if (pageInner * numberOfRows > countInner) {\n                    this.page = 0;\n                }\n                this.rowsPerPage = numberOfRows;\n                localStorage.setItem('portal.numberOfRows', numberOfRows);\n                this.getData();\n            },\n            textLabels: {\n                pagination: {\n                    rowsPerPage: intl.formatMessage({\n                        id: 'Apis.Listing.ApiTableView.items.per.page',\n                        defaultMessage: 'Items per page',\n                    }),\n                },\n                toolbar: {\n                    downloadCsv: intl.formatMessage({\n                        id: 'Apis.Listing.ApiTableView.download.csv',\n                        defaultMessage: 'Download CSV',\n                    }),\n                    print: intl.formatMessage({\n                        id: 'Apis.Listing.ApiTableView.print',\n                        defaultMessage: 'Print',\n                    }),\n                    viewColumns: intl.formatMessage({\n                        id: 'Apis.Listing.ApiTableView.view.columns',\n                        defaultMessage: 'View Columns',\n                    }),\n                },\n            },\n        };\n        if (gridView) {\n            options.customRowRender = (_data, dataIndex, rowIndex, tableViewObj = this) => {\n                const artifact = tableViewObj.state.data[dataIndex];\n                if (artifact) {\n                    if (artifact.type === 'DOC') {\n                        return <tr key={rowIndex}><td><DocThumb doc={artifact} /></td></tr>;\n                    } else {\n                        return (\n                            <tr key={rowIndex}>\n                                <td>\n                                    <ApiThumb\n                                        api={artifact}\n                                        customHeight={theme.custom.thumbnail.height}\n                                        customWidth={theme.custom.thumbnail.width}\n                                    />\n                                </td>\n                            </tr>\n                        );\n                    }\n                }\n                return <span />;\n            };\n            options.title = false;\n            options.filter = false;\n            options.print = false;\n            options.download = false;\n            options.viewColumns = false;\n            options.customToolbar = false;\n        } else {\n            options.filter = false;\n        }\n        if (page === 0 && this.count <= rowsPerPage && rowsPerPage === 10) {\n            options.pagination = false;\n        } else {\n            options.pagination = true;\n        }\n        if (loading) {\n            return <Loading />;\n        }\n        if ((data && data.length === 0) || !data) {\n            return <NoApi />;\n        }\n        return (\n            <MuiThemeProvider theme={this.getMuiTheme()}>\n                <MUIDataTable title='' data={data} columns={columns} options={options} />\n            </MuiThemeProvider>\n        );\n    }\n}\n\nApiTableView.contextType = ApiContext;\n\nexport default withSettings(injectIntl(withTheme(withStyles(styles)(ApiTableView))));\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Icon from '@material-ui/core/Icon';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n/**\n * @inheritdoc\n * @param {*} theme theme object\n */\nconst styles = (theme) => ({\n    textWrapper: {\n        color: theme.custom.tagCloud.leftMenu.color,\n        '& .material-icons': {\n            color: theme.custom.tagCloud.leftMenu.color,\n        },\n    },\n    listItemText: {\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n    },\n});\n\n/**\n * Get APICategoryThumb\n * @param {JSON} props properties\n * @returns {JSX} category link\n */\nfunction APICategoryThumb(props) {\n    const {\n        category, path, classes,\n    } = props;\n    const categoryLink = path + ':' + category.name;\n    let categoryDesc = category.description;\n    if (categoryDesc.length > 50) {\n        categoryDesc = categoryDesc.substring(0, 50) + '...';\n    }\n    return (\n        <Link to={categoryLink} className={classes.textWrapper}>\n            <Tooltip placement='right' title={category.description.length <= 50 ? '' : category.description}>\n                <ListItem button alignItems='flex-start'>\n                    <ListItemIcon className='category-listing-icon'>\n                        <Icon>label</Icon>\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={category.name}\n                        secondary={categoryDesc}\n                        classes={{\n                            primary: classNames(classes.listItemText, 'category-listing-primary'),\n                            secondary: 'category-listing-secondary',\n                        }}\n                    />\n                </ListItem>\n            </Tooltip>\n        </Link>\n    );\n}\n\nAPICategoryThumb.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    category: PropTypes.shape({}).isRequired,\n    path: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(APICategoryThumb);\n","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport { FormattedMessage } from 'react-intl';\nimport APICategoryThumb from './APICategoryThumb';\n\nconst useStyles = makeStyles((theme) => ({\n    mainTitle: {\n        paddingTop: 10,\n    },\n    mainTitleWrapper: {\n        flexGrow: 1,\n    },\n    listContentWrapper: {\n        padding: `0 ${theme.spacing(3)}px`,\n    },\n    textWrapper: {\n        color: theme.custom.tagCloud.leftMenu.color,\n        '& .material-icons': {\n            color: theme.custom.tagCloud.leftMenu.color,\n        },\n    },\n    tagWiseThumbWrapper: {\n        display: 'flex',\n    },\n    filterTitle: {\n        fontWeight: 200,\n        paddingLeft: theme.spacing(2),\n        background: theme.custom.tagCloud.leftMenu.titleBackground,\n        color: theme.palette.getContrastText(theme.custom.tagCloud.leftMenu.titleBackground),\n        height: theme.custom.infoBar.height,\n        alignItems: 'center',\n        display: 'flex',\n    },\n}));\n\n/**\n * Shared listing page\n *\n * @class CategoryListingCategories\n * @extends {Component}\n */\nfunction CategoryListingCategories(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const {\n        custom: {\n            tagWise: {\n                style,\n            },\n        },\n    } = theme;\n\n    const tagWiseURL = '/apis?offset=0&query=api-category';\n    const { allCategories } = props;\n\n    /**\n     *\n     * @inheritdoctheme\n     * @returns {React.Component} @inheritdoc\n     * @memberof TagCloudListing\n     */\n\n    return allCategories && allCategories.length > 0 ? (\n        (\n            <>\n                <Typography variant='h6' gutterBottom className={classNames(classes.filterTitle, 'api-cat-title')}>\n                    <FormattedMessage defaultMessage='API Categories' id='Apis.Listing.CategoryListingCategories.title' />\n                </Typography>\n                <List component='nav' aria-label='main mailbox folders' className='category-listing-categories'>\n                    {Object.keys(allCategories).map((key) => {\n                        return <APICategoryThumb key={key} category={allCategories[key]} path={tagWiseURL} style={style} />;\n                    })}\n                </List>\n            </>\n        )\n    ) : (\n        <div className={classNames(classes.mainTitle, 'category-listing-categories-empty')}>\n            <Typography variant='subtitle1' gutterBottom align='center'>\n                <FormattedMessage\n                    defaultMessage='Categories cannot be found'\n                    id='Apis.Listing.CategoryListingCategories.categoriesNotFound'\n                />\n            </Typography>\n        </div>\n    );\n}\n\nCategoryListingCategories.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    allTags: PropTypes.shape({}).isRequired,\n    allCategories: PropTypes.shape({}).isRequired,\n};\n\nexport default CategoryListingCategories;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport { TagCloud } from 'react-tagcloud';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n    clickablePointer: {\n        cursor: 'pointer',\n        padding: theme.spacing(1),\n    },\n    filterTitle: {\n        fontWeight: 200,\n        paddingLeft: theme.spacing(2),\n        background: theme.custom.tagCloud.leftMenu.titleBackground,\n        color: theme.palette.getContrastText(theme.custom.tagCloud.leftMenu.titleBackground),\n        height: theme.custom.infoBar.height,\n        alignItems: 'center',\n        display: 'flex',\n    },\n}));\n\n/**\n * Component used to handle API Tag Cloud\n * @class ApiTagCloud\n * @extends {React.Component}\n * @param {JSON} props @inheritDoc\n */\nfunction ApiTagCloud(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const {\n        custom: {\n            tagWise: { key, active },\n            tagCloud: { colorOptions },\n        },\n    } = theme;\n    const history = useHistory();\n\n    const { allTags } = props;\n    let apisTagWithoutGroups = null;\n    if (allTags.count !== 0) {\n        // Remove the tags with a sufix '-group' to ignore the\n        if (active) {\n            apisTagWithoutGroups = allTags.filter((item) => item.value.search(key) === -1);\n        } else {\n            apisTagWithoutGroups = allTags;\n        }\n    }\n\n    /**\n     *\n     * @param {String} tag selected tag\n     * @memberof ApiTagCloud\n     */\n    const handleOnClick = (tag) => {\n        const tagSearchURL = `/apis?offset=0&query=tag:${tag.value}`;\n        history.push(tagSearchURL);\n    };\n\n    return (\n        apisTagWithoutGroups && (\n            <>\n                <Typography variant='h6' gutterBottom className={classNames(classes.filterTitle, 'apis-listing-tags-title')}>\n                    <FormattedMessage defaultMessage='Tags' id='Apis.Listing.ApiTagCloud.title' />\n                </Typography>\n                <TagCloud\n                    minSize={14}\n                    maxSize={25}\n                    colorOptions={colorOptions}\n                    tags={apisTagWithoutGroups}\n                    shuffle={false}\n                    className={classes.clickablePointer}\n                    onClick={(tag) => handleOnClick(tag)}\n                />\n            </>\n        )\n    );\n}\n\nApiTagCloud.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    tag: PropTypes.shape({}).isRequired,\n    allTags: PropTypes.shape({}).isRequired,\n};\n\nexport default ApiTagCloud;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport { withStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport MaterialIcons from 'MaterialIcons';\nimport StarRatingBar from 'AppComponents/Apis/Listing/StarRatingBar';\nimport classNames from 'classnames';\nimport ImageGenerator from './APICards/ImageGenerator';\nimport Api from '../../../data/api';\nimport { ApiContext } from '../Details/ApiContext';\n\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = (theme) => ({\n    card: {\n        margin: theme.spacing.unit * (3 / 2),\n        maxWidth: theme.custom.thumbnail.width,\n        transition: 'box-shadow 0.3s ease-in-out',\n    },\n    apiDetails: {\n        background: theme.custom.thumbnail.contentBackgroundColor,\n        padding: theme.spacing(),\n        color: theme.palette.getContrastText(theme.custom.thumbnail.contentBackgroundColor),\n        '& a': {\n            color: theme.palette.getContrastText(theme.custom.thumbnail.contentBackgroundColor),\n        },\n    },\n    suppressLinkStyles: {\n        textDecoration: 'none',\n        color: theme.palette.text.disabled,\n    },\n    row: {\n        display: 'inline-block',\n    },\n    thumbBy: {\n        'padding-left': '5px',\n    },\n    media: {\n        // ⚠️ object-fit is not supported by IE11.\n        objectFit: 'cover',\n    },\n    thumbContent: {\n        width: theme.custom.thumbnail.width - theme.spacing(2),\n    },\n    thumbLeft: {\n        alignSelf: 'flex-start',\n        flex: 1,\n        width: '25%',\n        'padding-left': '5px',\n        'padding-right': '65px',\n    },\n    thumbRight: {\n        alignSelf: 'flex-end',\n    },\n    thumbInfo: {\n        display: 'flex',\n    },\n    thumbHeader: {\n        width: theme.custom.thumbnail.width - theme.spacing.unit,\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        'padding-left': '5px',\n    },\n    contextBox: {\n        width: parseInt((theme.custom.thumbnail.width - theme.spacing.unit) / 2, 10),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        display: 'inline-block',\n        lineHeight: '1em',\n        'padding-top': 5,\n        'padding-right': 5,\n        'padding-bottom': 1.5,\n        textAlign: 'left',\n    },\n    thumbWrapper: {\n        position: 'relative',\n        paddingTop: 20,\n        marginRight: theme.spacing.unit * 2,\n    },\n    deleteIcon: {\n        fill: 'red',\n    },\n    textWrapper: {\n        color: theme.palette.text.secondary,\n        textDecoration: 'none',\n    },\n    imageWrapper: {\n        color: theme.custom.thumbnail.iconColor,\n        width: theme.custom.thumbnail.width,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    imageOverlap: {\n        position: 'absolute',\n        bottom: 1,\n    },\n    chipWrapper: {\n        marginTop: '15px',\n    },\n    ratingWrapper: {\n        marginTop: '20px',\n    },\n});\n\nconst windowURL = window.URL || window.webkitURL;\n\n/**\n *\n * Render API Card component in API listing card view,containing essential API information like name , version ect\n * @class RecommendedApiThumb\n * @extends {Component}\n */\nclass RecommendedApiThumb extends React.Component {\n    /**\n     *Creates an instance of RecommendedApiThumb.\n     * @param {*} props\n     * @memberof RecommendedApiThumb\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            category: MaterialIcons.categories[0].name,\n            selectedIcon: null,\n            color: null,\n            backgroundIndex: null,\n            imageObj: null,\n            isHover: false,\n        };\n        this.toggleMouseOver = this.toggleMouseOver.bind(this);\n    }\n\n    /**\n     *\n     *\n     * @memberof RecommendedApiThumb\n     */\n    componentDidMount() {\n        const { api } = this.props;\n        const restApi = new Api();\n\n        const promisedThumbnail = restApi.getAPIThumbnail(api.id);\n\n        promisedThumbnail.then((response) => {\n            if (response && response.data) {\n                if (response.headers['content-type'] === 'application/json') {\n                    const iconJson = JSON.parse(response.data);\n                    this.setState({\n                        selectedIcon: iconJson.key,\n                        category: iconJson.category,\n                        color: iconJson.color,\n                        backgroundIndex: iconJson.backgroundIndex,\n                    });\n                } else if (response && response.data.size > 0) {\n                    const url = windowURL.createObjectURL(response.data);\n                    this.setState({ imageObj: url });\n                }\n            }\n        });\n    }\n\n    /**\n     * Clean up resource\n     */\n    componentWillUnmount() {\n        if (this.state.thumbnail) {\n            windowURL.revokeObjectURL(this.state.imageObj);\n        }\n    }\n\n    /**\n     * Get Path Prefix depedning on the respective API Type being rendered\n     *\n     * @returns {String} path\n     * @memberof RecommendedApiThumb\n     */\n    getPathPrefix() {\n        const path = '/apis/';\n        return path;\n    }\n\n    /**\n     * Toggle mouse Hover state to set the card `raised` property\n     *\n     * @param {React.SyntheticEvent} event mouseover and mouseout\n     * @memberof RecommendedApiThumb\n     */\n    toggleMouseOver(event) {\n        this.setState({ isHover: event.type === 'mouseover' });\n    }\n\n    /**\n     * @inheritdoc\n     * @returns {React.Component} @inheritdoc\n     * @memberof RecommendedApiThumb\n     */\n    render() {\n        const {\n            imageObj, selectedIcon, color, backgroundIndex, category, isHover,\n        } = this.state;\n        const path = this.getPathPrefix();\n\n        // const detailsLink = path + this.props.api.id;\n        const detailsLink = path + this.props.api.id;\n        const {\n            api, classes, theme, customWidth, customHeight, showInfo,\n        } = this.props;\n        const { thumbnail } = theme.custom;\n        const { name } = api;\n\n        // if (\n        //     api.businessInformation &&\n        //     api.businessInformation.businessOwner &&\n        //     api.businessInformation.businessOwner.trim() !== ''\n        // ) {\n        //     provider = api.businessInformation.businessOwner;\n        // }\n        // if (!api.lifeCycleStatus) {\n        //     api.lifeCycleStatus = api.status;\n        // }\n        const imageWidth = customWidth || thumbnail.width;\n        const imageHeight = customHeight || 140;\n        const defaultImage = thumbnail.defaultApiImage;\n\n        let ImageView;\n        if (imageObj) {\n            ImageView = (\n                <img\n                    height={imageHeight}\n                    width={imageWidth}\n                    src={imageObj}\n                    alt='API Thumbnail'\n                    className={classes.media}\n                />\n            );\n        } else {\n            ImageView = (\n                <ImageGenerator\n                    width={imageWidth}\n                    height={imageHeight}\n                    api={api}\n                    fixedIcon={{\n                        key: selectedIcon,\n                        color,\n                        backgroundIndex,\n                        category,\n                        api,\n                    }}\n                />\n            );\n        }\n        return (\n            <Card\n                onMouseOver={this.toggleMouseOver}\n                onFocus={this.toggleMouseOver}\n                onMouseOut={this.toggleMouseOver}\n                onBlur={this.toggleMouseOver}\n                raised={isHover}\n                className={classNames('image-thumbnail', classes.card)}\n            >\n                <CardMedia>\n                    <Link to={detailsLink} className={classes.suppressLinkStyles}>\n                        {!defaultImage && ImageView}\n                        {defaultImage && <img src={defaultImage} alt='img' />}\n                    </Link>\n                </CardMedia>\n                {showInfo && (\n                    <CardContent classes={{ root: classes.apiDetails }}>\n                        <Link to={detailsLink} className={classes.textWrapper}>\n                            <Typography\n                                className={classes.thumbHeader}\n                                variant='h5'\n                                gutterBottom\n                                onClick={this.handleRedirectToAPIOverview}\n                                title={name}\n                            >\n                                {name}\n                            </Typography>\n                        </Link>\n                        <div className={classes.thumbInfo}>\n                            <div className={classes.thumbLeft}>\n                                <Typography\n                                    variant='subtitle1'\n                                    gutterBottom\n                                    align='left'\n                                    className={classNames('api-thumb-rating', classes.ratingWrapper)}\n                                >\n                                    <StarRatingBar\n                                        apiRating={api.avgRating}\n                                        apiId={api.id}\n                                        isEditable={false}\n                                        showSummary={false}\n                                    />\n                                </Typography>\n                            </div>\n                            <div className={classes.thumbRight}>\n                                <Typography\n                                    variant='subtitle1'\n                                    gutterBottom\n                                    align='right'\n                                    className={classes.chipWrapper}\n                                >\n                                    {(api.type === 'GRAPHQL' || api.transportType === 'GRAPHQL') && (\n                                        <Chip\n                                            label={api.transportType === undefined ? api.type : api.transportType}\n                                            color='primary'\n                                        />\n                                    )}\n                                </Typography>\n                            </div>\n                        </div>\n                    </CardContent>\n                )}\n            </Card>\n        );\n    }\n}\nRecommendedApiThumb.defaultProps = {\n    customWidth: null,\n    customHeight: null,\n    showInfo: true,\n};\nRecommendedApiThumb.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    customWidth: PropTypes.number,\n    customHeight: PropTypes.number,\n    showInfo: PropTypes.bool,\n};\n\nRecommendedApiThumb.contextType = ApiContext;\n\nexport default withStyles(styles, { withTheme: true })(RecommendedApiThumb);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { createMuiTheme, MuiThemeProvider, withStyles } from '@material-ui/core/styles';\nimport MUIDataTable from 'mui-datatables';\nimport { injectIntl } from 'react-intl';\nimport API from 'AppData/api';\nimport { withTheme } from '@material-ui/styles';\nimport Configurations from 'Config';\nimport StarRatingBar from 'AppComponents/Apis/Listing/StarRatingBar';\nimport withSettings from 'AppComponents/Shared/withSettingsContext';\nimport Loading from 'AppComponents/Base/Loading/Loading';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport ImageGenerator from './APICards/ImageGenerator';\nimport RecommendedApiThumb from './RecommendedApiThumb';\nimport { ApiContext } from '../Details/ApiContext';\n\nconst styles = (theme) => ({\n    rowImageOverride: {\n        '& .material-icons': {\n            marginTop: 5,\n            color: `${theme.custom.thumbnail.iconColor} !important`,\n            fontSize: `${theme.custom.thumbnail.listViewIconSize}px !important`,\n        },\n    },\n    apiNameLink: {\n        display: 'flex',\n        alignItems: 'center',\n        '& span': {\n            marginLeft: theme.spacing(1),\n        },\n        color: theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund),\n    },\n});\n/**\n * Table view for api listing\n *\n * @class Recommendations\n * @extends {React.Component}\n */\nclass Recommendations extends React.Component {\n    /**\n     * @inheritdoc\n     * @param {*} props properties\n     * @memberof Recommendations\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: null,\n            loading: true,\n        };\n    }\n\n    /**\n     * @memberof Recommendations\n    */\n    componentDidMount() {\n        this.getData();\n    }\n\n    /**\n     * @memberof Recommendations\n     * @param {JSON} prevProps previous props\n    */\n    componentDidUpdate(prevProps) {\n        const { query, selectedTag } = this.props;\n        if (\n            query !== prevProps.query\n            || prevProps.selectedTag !== selectedTag\n        ) {\n            this.getData();\n        }\n    }\n\n    getMuiTheme = () => {\n        const { gridView, theme } = this.props;\n        let themeAdditions = {};\n        let muiTheme = {\n            overrides: {\n                MUIDataTable: {\n                    root: {\n                        backgroundColor: 'transparent',\n                        marginLeft: 40,\n                        marginBottom: 20,\n                        width: '100%',\n                    },\n                    paper: {\n                        boxShadow: 'none',\n                        backgroundColor: 'transparent',\n                        width: '100%',\n                    },\n                    tableRoot: {\n                        border: 'solid 1px #fff',\n                        '& a': {\n                            display: 'flex',\n                            alignItems: 'center',\n                        },\n                        '& a > div': {\n                            paddingRight: 10,\n                        },\n                        '& td': {\n                            whiteSpace: 'nowrap',\n                        },\n                        '& tr:nth-child(even)': {\n                            backgroundColor: theme.custom.listView.tableBodyEvenBackgrund,\n                            '& td': {\n                                color: theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund),\n                            },\n                        },\n                        '& tr:nth-child(odd)': {\n                            backgroundColor: theme.custom.listView.tableBodyOddBackgrund,\n                            '& td': {\n                                color: theme.palette.getContrastText(theme.custom.listView.tableBodyOddBackgrund),\n                            },\n                        },\n                        '& th': {\n                            backgroundColor: theme.custom.listView.tableHeadBackground,\n                            color: theme.palette.getContrastText(theme.custom.listView.tableHeadBackground),\n                        },\n                    },\n                },\n                MUIDataTableBodyCell: {\n                    root: {\n                        backgroundColor: 'transparent',\n                        width: '100%',\n                    },\n                },\n            },\n        };\n        if (gridView) {\n            themeAdditions = {\n                overrides: {\n                    MUIDataTable: {\n                        tableRoot: {\n                            display: 'block',\n                            '& tbody': {\n                                display: 'flex',\n                                flexWrap: 'wrap',\n                                marginLeft: 0,\n                            },\n                            '& thead': {\n                                display: 'none',\n                            },\n                        },\n                        paper: {\n                            boxShadow: 'none',\n                            backgroundColor: 'transparent',\n                        },\n                    },\n                },\n            };\n        }\n        muiTheme = Object.assign(muiTheme, themeAdditions, Configurations);\n        return createMuiTheme(muiTheme);\n    };\n\n    // get data\n    getData = () => {\n        const { intl } = this.props;\n        this.xhrRequest()\n            .then((data) => {\n                const { body } = data;\n                const { list } = body;\n                this.setState({ data: list });\n            })\n            .catch((error) => {\n                const { response } = error;\n                const { setTenantDomain } = this.props;\n                if (response && response.body.code === 901300) {\n                    setTenantDomain('INVALID');\n                    Alert.error(intl.formatMessage({\n                        defaultMessage: 'Invalid tenant domain',\n                        id: 'Apis.Listing.Recommendations.invalid.tenant.domain',\n                    }));\n                } else {\n                    Alert.error(intl.formatMessage({\n                        defaultMessage: 'Error While Loading APIs',\n                        id: 'Apis.Listing.Recommendations.error.loading',\n                    }));\n                }\n            })\n            .finally(() => {\n                this.setState({ loading: false });\n            });\n    };\n\n    xhrRequest = () => {\n        const api = new API();\n        return api.getApiRecommendations();\n    };\n\n    /**\n     * @inheritdoc\n     * @returns {Component}x\n     * @memberof Recommendations\n     */\n    render() {\n        const { intl, gridView } = this.props;\n        const { loading } = this.state;\n        const columns = [\n            {\n                name: 'id',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'name',\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            return <ImageGenerator api={artifact} width={30} height={30} />;\n                        }\n                        return <span />;\n                    },\n                    sort: false,\n                    filter: false,\n                    display: 'excluded',\n                },\n            },\n            {\n                name: 'name',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.Recommendations.name',\n                    defaultMessage: 'Name',\n                }),\n                options: {\n                    customBodyRender: (tableMeta, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            const apiName = tableMeta.rowData[2];\n                            const apiId = tableMeta.rowData[0];\n                            const { classes } = this.props;\n\n                            if (artifact) {\n                                return (\n                                    <Link\n                                        to={'/apis/' + apiId + '/overview'}\n                                        className={classes.apiNameLink}\n                                    >\n                                        <CustomIcon width={16} height={16} icon='api' strokeColor='#444444' />\n\n                                        <span>{apiName}</span>\n                                    </Link>\n                                );\n                            }\n                        }\n                        return <span />;\n                    },\n                    sort: false,\n                    filter: false,\n                },\n            },\n            {\n                name: 'rating',\n                label: intl.formatMessage({\n                    defaultMessage: 'Rating',\n                    id: 'Apis.Listing.Recommendations.rating',\n                }),\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            if (artifact) {\n                                if (artifact.type !== 'DOC') {\n                                    const apiId = tableMeta.rowData[0];\n                                    const avgRating = tableMeta.rowData[8];\n                                    return (\n                                        <StarRatingBar\n                                            apiRating={avgRating}\n                                            apiId={apiId}\n                                            isEditable={false}\n                                            showSummary={false}\n                                        />\n                                    );\n                                } else {\n                                    return (<span />);\n                                }\n                            } else {\n                                return (<span />);\n                            }\n                        } else {\n                            return (<span />);\n                        }\n                    },\n                    sort: false,\n                },\n            },\n            {\n                name: 'avgRating',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n        ];\n        const { data } = this.state;\n        const options = {\n            filterType: 'dropdown',\n            responsive: 'stacked',\n            serverSide: true,\n            search: false,\n        };\n        if (gridView) {\n            // eslint-disable-next-line no-shadow\n            options.customRowRender = (data, dataIndex, rowIndex, tableViewObj = this) => {\n                const artifact = tableViewObj.state.data[dataIndex];\n                if (artifact) {\n                    return <tr key={rowIndex}><td><RecommendedApiThumb api={artifact} /></td></tr>;\n                }\n                return <span />;\n            };\n            options.title = true;\n            options.filter = false;\n            options.print = false;\n            options.download = false;\n            options.viewColumns = false;\n            options.customToolbar = false;\n            options.rowsPerPageOptions = false;\n            options.pagination = false;\n        } else {\n            options.filter = false;\n        }\n        if (loading) {\n            return <Loading />;\n        }\n        if ((data && data.length === 0) || !data) {\n            return null;\n        }\n        return (\n            <MuiThemeProvider theme={this.getMuiTheme()}>\n                <MUIDataTable title='Recommended APIs for you' data={data} columns={columns} options={options} />\n            </MuiThemeProvider>\n        );\n    }\n}\n\nRecommendations.contextType = ApiContext;\n\nexport default withSettings(injectIntl(withTheme(withStyles(styles)(Recommendations))));\n","/* eslint-disable prefer-destructuring */\n/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@material-ui/core/Icon';\nimport { withStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport Settings from 'AppComponents/Shared/SettingsContext';\nimport API from 'AppData/api';\nimport ApiBreadcrumbs from './ApiBreadcrumbs';\nimport ApiTableView from './ApiTableView';\nimport { ApiContext } from '../Details/ApiContext';\nimport TagCloudListingTags from './TagCloudListingTags';\nimport CategoryListingCategories from './CategoryListingCategories';\nimport ApiTagCloud from './ApiTagCloud';\nimport Recommendations from './Recommendations';\nimport AuthManager from '../../../data/AuthManager';\n\nconst styles = (theme) => ({\n    rightIcon: {\n        marginLeft: theme.spacing(1),\n    },\n    button: {\n        margin: theme.spacing(1),\n        marginBottom: 0,\n    },\n    buttonRight: {\n        alignSelf: 'flex-end',\n        display: 'flex',\n    },\n    ListingWrapper: {\n        paddingTop: 10,\n        paddingLeft: 35,\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    appBar: {\n        height: 70,\n        background: theme.custom.infoBar.background,\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    mainIconWrapper: {\n        paddingTop: 13,\n        paddingLeft: 20,\n        paddingRight: 20,\n    },\n    mainTitle: {\n        paddingTop: 10,\n    },\n    mainTitleWrapper: {\n        flexGrow: 1,\n    },\n    listContentWrapper: {\n        padding: `0 ${theme.spacing(3)}px`,\n        display: 'flex',\n    },\n    iconDefault: {\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n    },\n    iconSelected: {\n        color: theme.custom.infoBar.listGridSelectedColor,\n    },\n    content: {\n        flexGrow: 1,\n        display: 'flex',\n        flex: 1,\n        flexDirection: 'column',\n        paddingBottom: theme.spacing(3),\n    },\n    contentWithTags: {\n        marginLeft: theme.custom.tagCloud.leftMenu.width,\n    },\n    contentWithoutTags: {\n        marginLeft: -4,\n    },\n    contentWithTagsHidden: {\n        marginLeft: theme.custom.tagCloud.leftMenu.sliderWidth,\n    },\n    LeftMenu: {\n        backgroundColor: theme.custom.tagCloud.leftMenu.background,\n        color: theme.custom.tagCloud.leftMenu.color,\n        textAlign: 'left',\n        fontFamily: theme.typography.fontFamily,\n        position: 'absolute',\n        bottom: 0,\n        paddingLeft: 0,\n        width: theme.custom.tagCloud.leftMenu.width,\n        top: 0,\n        left: 0,\n        overflowY: 'auto',\n    },\n    LeftMenuForSlider: {\n        backgroundColor: theme.custom.tagCloud.leftMenu.background,\n        color: theme.custom.tagCloud.leftMenu.color,\n        textAlign: 'left',\n        fontFamily: theme.typography.fontFamily,\n        position: 'absolute',\n        bottom: 0,\n        paddingLeft: 0,\n        width: theme.custom.tagCloud.leftMenu.sliderWidth,\n        top: 0,\n        left: 0,\n        overflowY: 'auto',\n        display: 'flex',\n    },\n    sliderButton: {\n        fontWeight: 200,\n        background: theme.custom.tagCloud.leftMenu.sliderBackground,\n        color: theme.palette.getContrastText(theme.custom.tagCloud.leftMenu.sliderBackground),\n        height: theme.custom.infoBar.height,\n        alignItems: 'center',\n        display: 'flex',\n        position: 'absolute',\n        right: 0,\n        cursor: 'pointer',\n    },\n    rotatedText: {\n        transform: 'rotate(270deg)',\n        transformOrigin: 'left bottom 0',\n        position: 'absolute',\n        whiteSpace: 'nowrap',\n        top: theme.custom.infoBar.height * 4,\n        marginLeft: 23,\n        cursor: 'pointer',\n    },\n    recommendationsBar: {\n        height: 60,\n        background: theme.custom.infoBar.background,\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    apiListingWrapper: {\n        width: '100%',\n    },\n});\n\n/**\n * Shared listing page\n *\n * @class CommonListing\n * @extends {Component}\n */\nclass CommonListing extends React.Component {\n    /**\n     * Constructor\n     *\n     * @param {*} props Properties\n     */\n    constructor(props) {\n        super(props);\n        let { defaultApiView } = props.theme.custom;\n        this.showToggle = true;\n        if (typeof defaultApiView === 'object' && defaultApiView.length > 0) {\n            if (defaultApiView.length === 1) { // We will disable the other\n                this.showToggle = false;\n            }\n            defaultApiView = defaultApiView[0];\n        } else {\n            defaultApiView = localStorage.getItem('portal.listType') || defaultApiView;\n        }\n        this.state = {\n            listType: defaultApiView,\n            allTags: null,\n            showLeftMenu: false,\n            isMonetizationEnabled: false,\n            isRecommendationEnabled: false,\n        };\n    }\n\n    /**\n     *\n     * Get all tags\n     * @memberof CommonListing\n     */\n    componentDidMount() {\n        const restApiClient = new API();\n        const promisedTags = restApiClient.getAllTags();\n        promisedTags\n            .then((response) => {\n                this.setState({ allTags: response.body.list });\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n        const promisedCategories = restApiClient.apiCategories();\n        promisedCategories\n            .then((response) => {\n                this.setState({ allCategories: response.body.list });\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n        this.isMonetizationEnabled();\n        this.isRecommendationEnabled();\n    }\n\n    /**\n     *\n     * Switch the view between grid and list view\n     * @param {String} value view type\n     * @memberof CommonListing\n     */\n     setListType = (value) => {\n         localStorage.setItem('portal.listType', value);\n         this.setState({ listType: value });\n     };\n\n    toggleLeftMenu = () => {\n        this.setState((prevState) => ({ showLeftMenu: !prevState.showLeftMenu }));\n    };\n\n    /**\n     * retrieve Settings from the context and check the monetization enabled\n     */\n    isMonetizationEnabled = () => {\n        const settingsContext = this.context;\n        const enabled = settingsContext.settings.monetizationEnabled;\n        this.setState({ isMonetizationEnabled: enabled });\n    }\n\n    /**\n     * retrieve Settings from the context and check whether recommendation is enabled\n     */\n    isRecommendationEnabled = () => {\n        const settingsContext = this.context;\n        const enabled = settingsContext.settings.recommendationEnabled;\n        this.setState({ isRecommendationEnabled: enabled });\n    }\n\n    /**\n     *\n     * @inheritdoctheme\n     * @returns {React.Component} @inheritdoc\n     * @memberof CommonListing\n     */\n    render() {\n        const {\n            theme,\n            classes,\n            location: { search },\n        } = this.props;\n        const user = AuthManager.getUser();\n        const {\n            custom: {\n                tagWise: { key, active },\n                tagCloud: { active: tagCloudActive },\n            },\n        } = theme;\n        const {\n            listType, allTags, showLeftMenu, isMonetizationEnabled, allCategories, isRecommendationEnabled,\n        } = this.state;\n        const strokeColorMain = theme.palette.getContrastText(theme.custom.infoBar.background);\n        const searchParam = new URLSearchParams(search);\n        const searchQuery = searchParam.get('query');\n        let selectedTag = null;\n        if (search && searchQuery !== null) {\n            // For the tagWise search\n            if (active && key) {\n                const splits = searchQuery.split(':');\n                if (splits.length > 1 && splits[1].search(key) !== -1) {\n                    const splitTagArray = splits[1].split(key);\n                    if (splitTagArray.length > 0) {\n                        selectedTag = splitTagArray[0];\n                    }\n                } else if (splits.length > 1 && splits[0] === 'tag') {\n                    selectedTag = splits[1];\n                }\n            }\n        }\n        const tagPaneVisible = allTags && allTags.length > 0 && (tagCloudActive || active);\n        const categoryPaneVisible = allCategories && allCategories.length > 0;\n        return (\n            <div className={classNames(classes.apiListingWrapper, 'api-listing-wrapper')}>\n                {(categoryPaneVisible || tagPaneVisible) && showLeftMenu && (\n                    <div className={classNames(classes.LeftMenu, 'api-listing-left-menu')}>\n                        <div\n                            className={classNames(classes.sliderButton, 'api-listing-slider-btn')}\n                            onClick={this.toggleLeftMenu}\n                            onKeyDown={this.toggleLeftMenu}\n                        >\n                            <Icon>keyboard_arrow_left</Icon>\n                        </div>\n                        {categoryPaneVisible && <CategoryListingCategories allCategories={allCategories} />}\n                        {tagPaneVisible && active && <TagCloudListingTags allTags={allTags} />}\n                        {tagPaneVisible && tagCloudActive && <ApiTagCloud allTags={allTags} />}\n                    </div>\n                )}\n                {(categoryPaneVisible || tagPaneVisible) && !showLeftMenu && (\n                    <div className={classNames(classes.LeftMenuForSlider, 'api-listing-left-menu-hidden')}>\n                        <div\n                            className={classNames(classes.sliderButton, 'api-listing-slider-btn')}\n                            onClick={this.toggleLeftMenu}\n                            onKeyDown={this.toggleLeftMenu}\n                        >\n                            <Icon>keyboard_arrow_right</Icon>\n                        </div>\n                        <div\n                            className={classNames(classes.rotatedText, 'api-listing-title-section-hidden')}\n                            onClick={this.toggleLeftMenu}\n                            onKeyDown={this.toggleLeftMenu}\n                        >\n                            <FormattedMessage\n                                defaultMessage='Tags / API Categories'\n                                id='Apis.Listing.Listing.ApiTagCloud.title'\n                            />\n                        </div>\n                    </div>\n                )}\n\n                <div\n                    className={classNames(\n                        classes.content,\n                        { [classes.contentWithoutTags]: !(tagPaneVisible || categoryPaneVisible) || !showLeftMenu },\n                        { [classes.contentWithTagsHidden]: (tagPaneVisible || categoryPaneVisible) && !showLeftMenu },\n                        { [classes.contentWithTags]: (tagPaneVisible || categoryPaneVisible) && showLeftMenu },\n                        'content-section',\n                    )}\n                    id='commonListing'\n                >\n                    <div className={classes.appBar} id='commonListingAppBar'>\n                        <div className={classNames(classes.mainIconWrapper, 'main-icon-wrapper')}>\n                            <CustomIcon strokeColor={strokeColorMain} width={42} height={42} icon='api' />\n                        </div>\n                        <div className={classes.mainTitleWrapper} id='mainTitleWrapper'>\n                            <Typography variant='h4' component='h1' className={classes.mainTitle}>\n                                <FormattedMessage defaultMessage='APIs' id='Apis.Listing.Listing.apis.main' />\n                            </Typography>\n                        </div>\n                        {this.showToggle && (\n                            <div className={classes.buttonRight} id='listGridWrapper'>\n                                <IconButton\n                                    aria-label='Change to list view'\n                                    className={classes.button}\n                                    onClick={() => this.setListType('list')}\n                                    disabled={listType === 'list'}\n                                >\n                                    <Icon\n                                        className={classNames(\n                                            { [classes.iconSelected]: listType === 'list' },\n                                            { [classes.iconDefault]: listType === 'grid' },\n                                        )}\n                                    >\n                                        list\n                                    </Icon>\n                                </IconButton>\n                                <IconButton\n                                    aria-label='Change to grid view'\n                                    className={classes.button}\n                                    onClick={() => this.setListType('grid')}\n                                    disabled={listType === 'grid'}\n                                >\n                                    <Icon\n                                        className={classNames(\n                                            { [classes.iconSelected]: listType === 'grid' },\n                                            { [classes.iconDefault]: listType === 'list' },\n                                        )}\n                                    >\n                                        grid_on\n                                    </Icon>\n                                </IconButton>\n                            </div>\n                        )}\n                    </div>\n                    {active && allTags && allTags.length > 0 && <ApiBreadcrumbs selectedTag={selectedTag} />}\n                    <div className={classes.listContentWrapper}>\n                        {listType === 'grid' && (\n                            <ApiContext.Provider value={{ isMonetizationEnabled }}>\n                                <ApiTableView gridView query={search} />\n                            </ApiContext.Provider>\n                        )}\n                        {listType === 'list' && (\n                            <ApiContext.Provider value={{ isMonetizationEnabled }}>\n                                <ApiTableView gridView={false} query={search} />\n                            </ApiContext.Provider>\n                        )}\n                    </div>\n                    {isRecommendationEnabled && user\n                        && (\n                            <div>\n                                {active && allTags && allTags.length > 0 && <ApiBreadcrumbs selectedTag={selectedTag} />}\n                                <div className={classes.listContentWrapper}>\n                                    {listType === 'grid' && (\n                                        <ApiContext.Provider value={{ isRecommendationEnabled }}>\n                                            <Recommendations gridView query={search} />\n                                        </ApiContext.Provider>\n                                    )}\n                                    {listType === 'list' && (\n                                        <ApiContext.Provider value={{ isRecommendationEnabled }}>\n                                            <Recommendations gridView query={search} />\n                                        </ApiContext.Provider>\n                                    )}\n                                </div>\n                            </div>\n                        )}\n                </div>\n            </div>\n        );\n    }\n}\nCommonListing.contextType = Settings;\n\nCommonListing.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    location: PropTypes.shape({\n        search: PropTypes.string,\n    }),\n};\n\nCommonListing.defaultProps = {\n    location: PropTypes.shape({\n        search: '',\n    }),\n};\n\nexport default withStyles(styles, { withTheme: true })(CommonListing);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport Grid from '@material-ui/core/Grid';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Image404 from './Custom404Image';\n\nconst SubscriptionNotFound = (props) => {\n    return (\n        <Container maxWidth='md'>\n            <Box padding={4}>\n                <Paper elevation={0}>\n                    <Box padding={4}>\n                        <Grid container alignItems='center' justify='center' style={{ height: '100%' }}>\n                            <Grid item xs={12} md={6}>\n                                <Typography variant='h5' gutterBottom>\n                                    <FormattedMessage\n                                        id='Base.Errors.SubscriptionNotFound.default_title'\n                                        defaultMessage='Solace Info Page is not displayed without subscriptions to the API.\n                                        Please Subscribed to the API'\n                                    />\n                                </Typography>\n                                <Typography variant='subtitle1' gutterBottom>\n                                    <FormattedMessage\n                                        id='Base.Errors.ResourceNotfound.default_body'\n                                        defaultMessage='The page you are looking for is not available'\n                                    />\n                                    <span style={{ color: 'green' }}>\n                                        {' '}\n                                        {props.response ? props.response.statusText : ''}\n                                        {' '}\n                                    </span>\n                                </Typography>\n                                <Box py={5}>\n                                    <Box pb={2}>\n                                        <Typography variant='subtitle1'>\n                                            <FormattedMessage\n                                                id='Base.Errors.ResourceNotFound.more.links'\n                                                defaultMessage='You may check the links below'\n                                            />\n                                        </Typography>\n                                    </Box>\n                                    <Link to='/apis/' style={{ marginRight: 8 }}>\n                                        <Button variant='contained' color='primary'>\n                                            <FormattedMessage\n                                                id='Base.Errors.ResourceNotFound.api.list'\n                                                defaultMessage='API List'\n                                            />\n                                        </Button>\n                                    </Link>\n                                    <Link to='/applications/'>\n                                        <Button variant='contained' color='primary'>\n                                            <FormattedMessage\n                                                id='Base.Errors.ResourceNotFound.applications'\n                                                defaultMessage='Applications'\n                                            />\n                                        </Button>\n                                    </Link>\n                                </Box>\n                            </Grid>\n                            <Grid item xs={12} md={6}>\n                                {/* Image */}\n                                <Image404 style={{ fontSize: 400, fill: '#ccc' }} />\n                            </Grid>\n                        </Grid>\n                    </Box>\n                </Paper>\n            </Box>\n        </Container>\n    );\n};\n\nexport default SubscriptionNotFound;\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.com). All Rights Reserved.\n *\n * This software is the property of WSO2 Inc. and its suppliers, if any.\n * Dissemination of any information or reproduction of any material contained\n * herein is strictly forbidden, unless permitted by WSO2 in accordance with\n * the WSO2 Commercial License available at http://wso2.com/licenses.\n * For specific language governing the permissions and limitations under\n * this license, please see the license as well as any agreement you’ve\n * entered into with WSO2 governing the purchase of this software and any\n * associated services.\n */\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst solaceTopicStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(3, 2),\n        '& td, & th': {\n            color: theme.palette.getContrastText(theme.custom.infoBar.background),\n        },\n        '& option': {\n            padding: '5px 0px 5px 0px',\n        },\n        background: theme.custom.infoBar.background,\n    },\n    table: {\n        minWidth: '100%',\n    },\n    centerItems: {\n        margin: 'auto',\n    },\n    leftCol: {\n        width: 200,\n    },\n    iconAligner: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n    },\n    iconTextWrapper: {\n        display: 'inline-block',\n        paddingLeft: 20,\n    },\n    iconEven: {\n        color: theme.custom.infoBar.iconOddColor,\n        width: theme.spacing(3),\n    },\n    iconOdd: {\n        color: theme.custom.infoBar.iconOddColor,\n        width: theme.spacing(3),\n    },\n    heading: {\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        paddingLeft: theme.spacing(1),\n    },\n    heading1: {\n        marginRight: 20,\n    },\n    emptyBox: {\n        background: '#ffffff55',\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        border: 'solid 1px #fff',\n        padding: theme.spacing(2),\n        width: '100%',\n    },\n    summaryRoot: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    actionPanel: {\n        justifyContent: 'flex-start',\n    },\n    Paper: {\n        marginTop: theme.spacing(2),\n        padding: theme.spacing(2),\n    },\n    Box2: {\n        marginTop: theme.spacing(2),\n        padding: theme.spacing(2),\n        height: '100%',\n    },\n    Box3: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        width: '100%',\n        border: `solid 1px ${theme.palette.grey[300]}`,\n        '& .MuiInputBase-root:before,  .MuiInputBase-root:hover': {\n            borderBottom: 'none !important',\n            color: theme.palette.primary.main,\n        },\n        '& .MuiSelect-select': {\n            color: theme.palette.primary.main,\n            paddingLeft: theme.spacing(),\n        },\n        '& .MuiInputBase-input': {\n            color: theme.palette.primary.main,\n        },\n        '& .material-icons': {\n            fontSize: 16,\n            color: `${theme.palette.grey[700]} !important`,\n        },\n        borderRadius: 10,\n        marginRight: theme.spacing(),\n    },\n    list: {\n        width: '100%',\n        maxWidth: 800,\n        backgroundColor: theme.palette.background.paper,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 175,\n    },\n    urlPaper: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        width: '100%',\n        border: `solid 1px ${theme.palette.grey[300]}`,\n        '& .MuiInputBase-root:before,  .MuiInputBase-root:hover': {\n            borderBottom: 'none !important',\n            color: theme.palette.primary.main,\n        },\n        '& .MuiSelect-select': {\n            color: theme.palette.primary.main,\n            paddingLeft: theme.spacing(),\n        },\n        '& .MuiInputBase-input': {\n            color: theme.palette.primary.main,\n        },\n        '& .material-icons': {\n            fontSize: 16,\n            color: `${theme.palette.grey[700]} !important`,\n        },\n        borderRadius: 10,\n        marginRight: theme.spacing(),\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    avatar: {\n        width: 30,\n        height: 30,\n        background: 'transparent',\n        border: `solid 1px ${theme.palette.grey[300]}`,\n    },\n    iconStyle: {\n        cursor: 'pointer',\n        margin: '-10px 0',\n        padding: '0 0 0 5px',\n        '& .material-icons': {\n            fontSize: 18,\n            color: '#9c9c9c',\n        },\n    },\n}));\n\nexport default solaceTopicStyles;\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.com). All Rights Reserved.\n *\n * This software is the property of WSO2 Inc. and its suppliers, if any.\n * Dissemination of any information or reproduction of any material contained\n * herein is strictly forbidden, unless permitted by WSO2 in accordance with\n * the WSO2 Commercial License available at http://wso2.com/licenses.\n * For specific language governing the permissions and limitations under\n * this license, please see the license as well as any agreement you’ve\n * entered into with WSO2 governing the purchase of this software and any\n * associated services.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport {\n    Divider, Grid, TextField,\n} from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport InputBase from '@material-ui/core/InputBase';\nimport Avatar from '@material-ui/core/Avatar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport Chip from '@material-ui/core/Chip';\nimport { upperCaseString } from 'AppData/stringFormatter';\nimport API from 'AppData/api';\nimport Loading from 'AppComponents/Base/Loading/Loading';\nimport SubscriptionNotFound from '../../../Base/Errors/SubscriptionNotFound';\nimport ResourceNotFound from '../../../Base/Errors/ResourceNotFound';\nimport solaceTopicStyles from './SolaceTopicStyles';\n\nfunction VerbElement(props) {\n    const {\n        verb,\n    } = props;\n\n    const useMenuStyles = makeStyles((theme) => {\n        const backgroundColor = theme.custom.resourceChipColors[verb.toLowerCase()];\n        return {\n            customButton: {\n                backgroundColor: '#ffffff',\n                borderColor: backgroundColor,\n                color: backgroundColor,\n                width: theme.spacing(2),\n            },\n        };\n    });\n    const classes = useMenuStyles();\n    return (\n        <Button disableFocusRipple variant='outlined' className={classes.customButton} size='small'>\n            {verb.toUpperCase()}\n        </Button>\n    );\n}\n\nfunction SolaceTopicsInfo() {\n    const classes = solaceTopicStyles();\n    const { apiUuid } = useParams();\n    const [application, setApplication] = useState(null);\n    const [environment, setEnvironment] = useState(null);\n    const [selectedProtocol, setSelectedProtocol] = useState(null);\n    const [envsListOfApplication, setEnvsListOfApplication] = useState(null);\n    const [selectedEndpoint, setSelectedEndpoint] = useState(null);\n    const [protocolsListOfEnvironments, setProtocolsListOfEnvironments] = useState(null);\n    const [topics, setTopics] = useState(null);\n    const [applicationList, setApplicationList] = useState(null);\n    const [notFound, setNotFound] = useState(false);\n    const [urlCopied, setUrlCopied] = useState(false);\n    const [topicCopied, setTopicCopied] = useState(false);\n    const [apiTopics, setApiTopics] = useState(null);\n    const [apiPubTopics, setApiPubTopics] = useState(null);\n    const [apiSubTopics, setApiSubTopics] = useState(null);\n\n    const intl = useIntl();\n\n    const onCopy = () => {\n        setUrlCopied(true);\n        const caller = function () {\n            setUrlCopied(false);\n        };\n        setTimeout(caller, 2000);\n    };\n\n    const onTopicCopy = () => {\n        setTopicCopied(true);\n        const caller = function () {\n            setTopicCopied(false);\n        };\n        setTimeout(caller, 2000);\n    };\n\n    function setPubAndSubTopics(allTopics, allApiTopics) {\n        const apiPubTopicList = [];\n        allTopics.publishTopics.map((t) => {\n            allApiTopics.map((e) => {\n                if (t.toString().includes(e)) {\n                    apiPubTopicList.push(t);\n                }\n                return null;\n            });\n            return null;\n        });\n        setApiPubTopics(apiPubTopicList);\n\n        const apiSubTopicList = [];\n        allTopics.subscribeTopics.map((t) => {\n            allApiTopics.map((e) => {\n                if (t.toString().includes(e)) {\n                    apiSubTopicList.push(t);\n                }\n                return null;\n            });\n            return null;\n        });\n        setApiSubTopics(apiSubTopicList);\n    }\n\n    useEffect(() => {\n        const client = new API();\n\n        const promisedApi = client.getAllTopics(apiUuid);\n        const apiTopicList = [];\n        promisedApi\n            .then((response) => {\n                response.obj.list.map((entry) => {\n                    const parts = entry.name.split('{')[0];\n                    apiTopicList.push(parts);\n                    return null;\n                });\n                setApiTopics(apiTopicList);\n                return null;\n            });\n\n        const infoPromise = client.getSubscriptionAdditionalInfo(apiUuid);\n        infoPromise\n            .then((response) => {\n                setApplicationList(response.body.list);\n                // Get application\n                const appInner = response.body.list[0];\n                if (appInner != null) {\n                    setApplication(appInner.applicationName);\n                    if (appInner.solaceDeployedEnvironments !== null) {\n                        // Set default deployed environments of application\n                        setEnvsListOfApplication(appInner.solaceDeployedEnvironments);\n                        setEnvironment(appInner.solaceDeployedEnvironments[0]);\n                        // Set default protocols of deployed environment\n                        setProtocolsListOfEnvironments(appInner.solaceDeployedEnvironments[0].solaceURLs);\n                        setSelectedProtocol(appInner.solaceDeployedEnvironments[0].solaceURLs[0].protocol);\n                        setSelectedEndpoint(appInner.solaceDeployedEnvironments[0].solaceURLs[0].endpointURL);\n                        // Set default topics of deployed solace environment\n                        if (appInner.solaceDeployedEnvironments[0].solaceURLs[0].protocol === 'mqtt') {\n                            setTopics(appInner.solaceDeployedEnvironments[0].SolaceTopicsObject.mqttSyntax);\n                            setPubAndSubTopics(appInner.solaceDeployedEnvironments[0].SolaceTopicsObject.mqttSyntax, apiTopicList);\n                        } else {\n                            setTopics(appInner.solaceDeployedEnvironments[0].SolaceTopicsObject.defaultSyntax);\n                            setPubAndSubTopics(appInner.solaceDeployedEnvironments[0].SolaceTopicsObject.defaultSyntax, apiTopicList);\n                        }\n                    }\n                }\n            }).catch((error) => {\n                console.log(error);\n                const { status } = error;\n                if (status === 404) {\n                    setNotFound(true);\n                } else {\n                    setNotFound(false);\n                }\n            });\n    }, [apiUuid]);\n\n    // Handle resource not found error\n    if (notFound) {\n        return <ResourceNotFound />;\n    }\n    // Handle topic changes with protocol change\n    function setProtocolTopics(protocol, selectedEnv) {\n        if (protocol === 'mqtt') {\n            setTopics(selectedEnv.SolaceTopicsObject.mqttSyntax);\n            setPubAndSubTopics(selectedEnv.SolaceTopicsObject.mqttSyntax, apiTopics);\n        } else {\n            setTopics(selectedEnv.SolaceTopicsObject.defaultSyntax);\n            setPubAndSubTopics(selectedEnv.SolaceTopicsObject.defaultSyntax, apiTopics);\n        }\n    }\n    // Handle application selection change\n    const handleChangeApplication = (event) => {\n        setApplication(event.target.value);\n        let selectedApp;\n        applicationList.map((app) => {\n            if (app.applicationName === event.target.value) {\n                selectedApp = app;\n            }\n            return null;\n        });\n        const selectedEnv = selectedApp.solaceDeployedEnvironments[0];\n        setEnvsListOfApplication(selectedApp.solaceDeployedEnvironments);\n        setSelectedProtocol(selectedEnv.solaceURLs[0].protocol);\n        let protocol;\n        selectedEnv.solaceURLs.map((e) => {\n            if (e.protocol === selectedEnv.solaceURLs[0].protocol) {\n                setSelectedEndpoint(e.endpointURL);\n                protocol = e.protocol;\n            }\n            return null;\n        });\n        setProtocolTopics(protocol, selectedEnv);\n    };\n    // Handle environment selection change\n    const handleChangeEnvironment = (event) => {\n        setEnvironment(event.target.value);\n        let selectedEnv;\n        envsListOfApplication.map((e) => {\n            if (e.environmentDisplayName === event.target.value) {\n                selectedEnv = e;\n            }\n            return null;\n        });\n        setSelectedProtocol(selectedEnv.solaceURLs[0].protocol);\n        setProtocolsListOfEnvironments(selectedEnv.solaceURLs);\n        let protocol;\n        selectedEnv.solaceURLs.map((e) => {\n            if (e.protocol === selectedEnv.solaceURLs[0].protocol) {\n                setSelectedEndpoint(e.endpointURL);\n                protocol = e.protocol;\n            }\n            return null;\n        });\n        setProtocolTopics(protocol, selectedEnv);\n    };\n    // Handle protocol selection change\n    const handleChangeProtocol = (event) => {\n        setSelectedProtocol(event.target.value);\n        let selectedEnv;\n        envsListOfApplication.map((e) => {\n            if (e.environmentDisplayName === environment.environmentDisplayName) {\n                selectedEnv = e;\n            }\n            return null;\n        });\n        let protocol;\n        protocolsListOfEnvironments.map((e) => {\n            if (e.protocol === event.target.value) {\n                setSelectedEndpoint(e.endpointURL);\n                protocol = e.protocol;\n            }\n            return null;\n        });\n        setProtocolTopics(protocol, selectedEnv);\n    };\n\n    if (!applicationList) {\n        return <Loading />;\n    }\n\n    return (\n        <>\n            { !application && <SubscriptionNotFound /> }\n            { environment && topics && apiTopics && applicationList && (\n                <div className={classes.root}>\n                    <Typography id='itest-api-details-bushiness-plans-head' variant='h5'>\n                        <FormattedMessage\n                            id='solace.application.available.topics.heading'\n                            defaultMessage='Available Topics'\n                        />\n                    </Typography>\n                    <Typography variant='caption' gutterBottom>\n                        <FormattedMessage\n                            id='solace.application.available.topics.subheading'\n                            defaultMessage='Topics permitted to access from solace applications'\n                        />\n                    </Typography>\n                    <Box mt={2} />\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} md={4}>\n                            <TextField\n                                select\n                                fullWidth\n                                onChange={handleChangeApplication}\n                                value={application}\n                                variant='outlined'\n                                label='Application'\n                                helperText={(\n                                    <FormattedMessage\n                                        defaultMessage='Subscribed applications'\n                                        id='Apis.Details.SolaceTopicsInfo.SelectAppPanel.select.subscribed.\n                                                    application'\n                                    />\n                                )}\n                                SelectProps={{\n                                    native: true,\n                                }}\n                            >\n                                {applicationList.map((e) => (\n                                    <option key={e} value={e.applicationName}>\n                                        {e.applicationName}\n                                    </option>\n                                ))}\n                            </TextField>\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                            <TextField\n                                select\n                                fullWidth\n                                onChange={handleChangeEnvironment}\n                                value={environment.environmentDisplayName}\n                                variant='outlined'\n                                label='Environment Name'\n                                helperText={(\n                                    <FormattedMessage\n                                        defaultMessage='Deployed Environments'\n                                        id='Apis.Details.SolaceTopicsInfo.SelectAppPanel.select.\n                                                        deployed.environment'\n                                    />\n                                )}\n                                SelectProps={{\n                                    native: true,\n                                }}\n                            >\n                                {envsListOfApplication.map((e) => (\n                                    <option key={e} value={e.environmentDisplayName}>\n                                        {e.environmentDisplayName}\n                                    </option>\n                                ))}\n                            </TextField>\n                        </Grid>\n                        <Grid item xs={12} md={4}>\n                            <TextField\n                                select\n                                fullWidth\n                                onChange={handleChangeProtocol}\n                                value={selectedProtocol}\n                                variant='outlined'\n                                label='Protocol'\n                                helperText={(\n                                    <FormattedMessage\n                                        defaultMessage='Available Protocols'\n                                        id='Apis.Details.SolaceTopicsInfo.SelectAppPanel.select.\n                                                        environment.protocol'\n                                    />\n                                )}\n                                SelectProps={{\n                                    native: true,\n                                }}\n                            >\n                                {protocolsListOfEnvironments.map((e) => (\n                                    <option key={e.protocol} value={e.protocol}>\n                                        {upperCaseString(e.protocol)}\n                                    </option>\n                                ))}\n                            </TextField>\n                        </Grid>\n                    </Grid>\n                    <Box pt={2}>\n                        <Divider />\n                    </Box>\n                    <Box pt={5} pb={5}>\n                        <Grid container>\n                            <Grid\n                                xs={12}\n                                md={7}\n                                item\n                                style={{\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    justifyContent: 'center',\n                                }}\n                            >\n\n                                <Box\n                                    id='gateway-envirounment'\n                                    component='form'\n                                    className={classes.Box3}\n                                >\n                                    <Box mr={3}>\n                                        <Chip\n                                            label={upperCaseString(selectedProtocol)}\n                                            color='primary'\n                                            style={{\n                                                width: '70px',\n                                            }}\n                                        />\n                                    </Box>\n                                    <InputBase\n                                        className={classes.input}\n                                        inputProps={{ 'aria-label': 'api url' }}\n                                        value={selectedEndpoint}\n                                    />\n                                    <Avatar className={classes.avatar} sizes={30}>\n                                        <Tooltip\n                                            title={\n                                                urlCopied\n                                                    ? intl.formatMessage({\n                                                        defaultMessage: 'Copied',\n                                                        id: 'Apis.Details.Environments.copied',\n                                                    })\n                                                    : intl.formatMessage({\n                                                        defaultMessage: 'Copy to clipboard',\n                                                        id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                    })\n                                            }\n                                            interactive\n                                            placement='right'\n                                            className={classes.iconStyle}\n                                        >\n                                            <CopyToClipboard\n                                                text={selectedEndpoint}\n                                                onCopy={() => onCopy('urlCopied')}\n                                            >\n                                                <IconButton\n                                                    aria-label='Copy the API URL to clipboard'\n                                                >\n                                                    <Icon color='secondary'>file_copy</Icon>\n                                                </IconButton>\n                                            </CopyToClipboard>\n                                        </Tooltip>\n                                    </Avatar>\n                                </Box>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                    <Grid container>\n                        <Grid item xs={6}>\n                            <Box className={classes.Box2}>\n                                <Typography id='itest-api-details-bushiness-plans-head' variant='h6'>\n                                    <FormattedMessage\n                                        id='solace.application.topics.publish'\n                                        defaultMessage='Publish Topics'\n                                    />\n                                </Typography>\n                                <Box p={1}>\n                                    {\n                                        (apiPubTopics && apiPubTopics.length > 0) ? apiPubTopics.map((t) => (\n                                            <Box pt={2}>\n                                                <Box\n                                                    id='gateway-envirounment'\n                                                    component='form'\n                                                    className={classes.Box3}\n                                                >\n                                                    <Grid item>\n                                                        <VerbElement verb='PUB' />\n                                                    </Grid>\n                                                    <InputBase\n                                                        className={classes.input}\n                                                        inputProps={{ 'aria-label': 'api url' }}\n                                                        value={t}\n                                                    />\n                                                    <Avatar className={classes.avatar} sizes={30}>\n                                                        <Tooltip\n                                                            title={\n                                                                topicCopied\n                                                                    ? intl.formatMessage({\n                                                                        defaultMessage: 'Copied',\n                                                                        id: 'Apis.Details.PubTopic.copied',\n                                                                    })\n                                                                    : intl.formatMessage({\n                                                                        defaultMessage: 'Copy to clipboard',\n                                                                        id: 'Apis.Details.PubTopic.copy.to.clipboard',\n                                                                    })\n                                                            }\n                                                            interactive\n                                                            placement='right'\n                                                            className={classes.iconStyle}\n                                                        >\n                                                            <CopyToClipboard\n                                                                text={t}\n                                                                onCopy={() => onTopicCopy('topicCopied')}\n                                                            >\n                                                                <IconButton\n                                                                    aria-label='Copy the API URL to clipboard'\n                                                                >\n                                                                    <Icon color='secondary'>file_copy</Icon>\n                                                                </IconButton>\n                                                            </CopyToClipboard>\n                                                        </Tooltip>\n                                                    </Avatar>\n                                                </Box>\n\n                                            </Box>\n                                        )) : (\n                                            <Box pt={2}>\n                                                <Typography id='itest-api-details-bushiness-plans-head' variant='h7'>\n                                                    <FormattedMessage\n                                                        id='solace.application.topics.publish.empty'\n                                                        defaultMessage='No Publish Topics to Display.'\n                                                    />\n                                                </Typography>\n                                            </Box>\n                                        )\n                                    }\n                                </Box>\n                            </Box>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Box className={classes.Box2}>\n                                <Typography id='itest-api-details-bushiness-plans-head' variant='h6'>\n                                    <FormattedMessage\n                                        id='solace.application.topics.subscribe'\n                                        defaultMessage='Subscribe Topics'\n                                    />\n                                </Typography>\n                                <Box p={1}>\n                                    {\n                                        (apiSubTopics && apiSubTopics.length > 0) ? apiSubTopics.map((t) => (\n                                            <Box pt={2}>\n                                                <Box\n                                                    id='gateway-envirounment'\n                                                    component='form'\n                                                    className={classes.Box3}\n                                                >\n                                                    <Grid item>\n                                                        <VerbElement verb='SUB' />\n                                                    </Grid>\n                                                    <InputBase\n                                                        className={classes.input}\n                                                        inputProps={{ 'aria-label': 'api url' }}\n                                                        value={t}\n                                                    />\n                                                    <Avatar className={classes.avatar} sizes={30}>\n                                                        <Tooltip\n                                                            title={\n                                                                topicCopied\n                                                                    ? intl.formatMessage({\n                                                                        defaultMessage: 'Copied',\n                                                                        id: 'Apis.Details.SubTopic.copied',\n                                                                    })\n                                                                    : intl.formatMessage({\n                                                                        defaultMessage: 'Copy to clipboard',\n                                                                        id: 'Apis.Details.SubTopic.copy.to.clipboard',\n                                                                    })\n                                                            }\n                                                            interactive\n                                                            placement='right'\n                                                            className={classes.iconStyle}\n                                                        >\n                                                            <CopyToClipboard\n                                                                text={t}\n                                                                onCopy={() => onTopicCopy('topicCopied')}\n                                                            >\n                                                                <IconButton\n                                                                    aria-label='Copy the API URL to clipboard'\n                                                                >\n                                                                    <Icon color='secondary'>file_copy</Icon>\n                                                                </IconButton>\n                                                            </CopyToClipboard>\n                                                        </Tooltip>\n                                                    </Avatar>\n                                                </Box>\n\n                                            </Box>\n                                        )) : (\n                                            <Box pt={2}>\n                                                <Typography id='itest-api-details-bushiness-plans-head' variant='h7'>\n                                                    <FormattedMessage\n                                                        id='solace.application.topics.subscribe.empty'\n                                                        defaultMessage='No Subscribe Topics to Display.'\n                                                    />\n                                                </Typography>\n                                            </Box>\n                                        )\n                                    }\n                                </Box>\n                            </Box>\n                        </Grid>\n                    </Grid>\n                </div>\n            )}\n        </>\n    );\n}\n\nSolaceTopicsInfo.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default SolaceTopicsInfo;\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useState, useContext } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Typography from '@material-ui/core/Typography';\nimport { Link as MUILink } from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport Box from '@material-ui/core/Box';\nimport VerticalDivider from 'AppComponents/Shared/VerticalDivider';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport { useIntl } from 'react-intl';\n\nconst useStyles = makeStyles((theme) => {\n    const mainBack = theme.custom.infoBar.background || '#ffffff';\n    return {\n        root: {\n            paddingTop: theme.spacing(),\n            paddingBottom: theme.spacing(),\n            paddingLeft: theme.spacing(3),\n            background: mainBack,\n            color: theme.palette.getContrastText(mainBack),\n            borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n            '& > * + *': {\n                marginTop: theme.spacing(2),\n            },\n        },\n    };\n});\n\n/**\n * @returns {JSX} breadcrumb\n */\nexport default function Breadcrumb() {\n    const { api } = useContext(ApiContext);\n    const classes = useStyles();\n    const history = useHistory();\n    const intl = useIntl();\n    const pages = [\n        {\n            route: 'overview',\n            text: intl.formatMessage({\n                defaultMessage: 'Overview',\n                id: 'Apis.Details.Breadcrumb.overview',\n            }),\n        },\n        {\n            route: 'credentials',\n            text: intl.formatMessage({\n                defaultMessage: 'Subscriptions',\n                id: 'Apis.Details.Breadcrumb.subscriptions',\n            }),\n        },\n        {\n            route: 'test',\n            text: intl.formatMessage({\n                defaultMessage: 'Try Out',\n                id: 'Apis.Details.Breadcrumb.try.out',\n            }),\n        },\n        {\n            route: 'comments',\n            text: intl.formatMessage({\n                defaultMessage: 'Comments',\n                id: 'Apis.Details.Breadcrumb.comments',\n            }),\n        },\n        {\n            route: 'documents',\n            text: intl.formatMessage({\n                defaultMessage: 'Documents',\n                id: 'Apis.Details.Breadcrumb.documents',\n            }),\n        },\n        {\n            route: 'sdk',\n            text: intl.formatMessage({\n                defaultMessage: 'SDKs',\n                id: 'Apis.Details.Breadcrumb.sdks',\n            }),\n        },\n    ];\n\n    const [selected, setSelected] = useState(pages[0]);\n\n    const detectCurrentMenu = (location = null) => {\n        let locationLocal = location;\n        if (!locationLocal) {\n            locationLocal = window.location;\n        }\n        const { pathname } = locationLocal;\n        for (let i = 0; i < pages.length; i++) {\n            const test1 = new RegExp('/' + pages[i].route + '$', 'g');\n            const test2 = new RegExp('/' + pages[i].route + '/', 'g');\n            if (pathname.match(test1) || pathname.match(test2)) {\n                setSelected(pages[i]);\n            }\n        }\n    };\n    useEffect(() => {\n        detectCurrentMenu();\n    }, []);\n    history.listen((location) => {\n        detectCurrentMenu(location);\n    });\n    return (\n        <div className={classes.root}>\n            <Box display='flex' flexDirection='row' alignItems='center'>\n                <Typography color='textPrimary' component='h1' variant='h6'>{selected.text}</Typography>\n                <VerticalDivider height={15} />\n                <Breadcrumbs separator={<NavigateNextIcon fontSize='small' />} aria-label='breadcrumb'>\n                    <MUILink color='inherit' to={'/apis/' + api.id + '/overview'} component={Link}>\n                        {api.name}\n                    </MUILink>\n                    <Typography color='textPrimary'>{selected.text}</Typography>\n                </Breadcrumbs>\n            </Box>\n\n        </div>\n    );\n}\n","import React, { useContext } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { FormattedMessage } from 'react-intl';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport { Box } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst styles = {\n    button: {\n        mt: 2,\n        mr: 1,\n    },\n    wizardButtons: {\n        pl: 2,\n    },\n};\n\nconst ButtonPanel = (props) => {\n    const {\n        currentStep, handleCurrentStep, handleReset, nextActive,\n    } = props;\n    const stepsLength = 5;\n    const { api, updateSubscriptionData } = useContext(ApiContext);\n    const history = useHistory();\n\n    /**\n     * Redirect  to the API console page\n     */\n    const handleTest = () => {\n        history.push(`/apis/${api.id}/test`);\n    };\n\n    /**\n     * Redirect back to credentials page\n     */\n    const handleCancel = () => {\n        updateSubscriptionData(history.push('credentials'));\n    };\n\n    return (\n        <Box display='flex' {...styles.wizardButtons}>\n            {currentStep < stepsLength - 1 && (\n                <Box {...styles.button}>\n                    <Button\n                        onClick={handleCancel}\n                        variant='text'\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Credentials.Wizard.Wizard.Cancel'\n                            defaultMessage='CANCEL'\n                        />\n                    </Button>\n                </Box>\n            )}\n            {currentStep >= stepsLength - 1 && (\n                <Box {...styles.button}>\n                    <Button\n                        onClick={handleTest}\n                        {...styles.button}\n                        variant='outlined'\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Credentials.Wizard.Wizard.test'\n                            defaultMessage='Test'\n                        />\n                    </Button>\n                </Box>\n            )}\n            {currentStep >= stepsLength - 1 && (\n                <Box {...styles.button}>\n                    <Button\n                        variant='outlined'\n                        onClick={handleReset}\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Credentials.Wizard.Wizard.rest'\n                            defaultMessage='Reset'\n                        />\n                    </Button>\n                </Box>\n            )}\n            <Box {...styles.button}>\n                <Button\n                    variant='contained'\n                    color='primary'\n                    onClick={handleCurrentStep}\n                    disabled={!nextActive}\n                >\n                    {currentStep === stepsLength - 1\n                        ? (\n                            <FormattedMessage\n                                id='Apis.Details.Credentials.Wizard.Wizard.finish'\n                                defaultMessage='Finish'\n                            />\n                        )\n                        : (\n                            <FormattedMessage\n                                id='Apis.Details.Credentials.Wizard.Wizard.next'\n                                defaultMessage='Next'\n                            />\n                        )}\n                </Button>\n            </Box>\n        </Box>\n    );\n};\n\nButtonPanel.defaultProps = {\n    nextActive: true,\n};\n\nButtonPanel.propTypes = {\n    currentStep: PropTypes.func.isRequired,\n    handleCurrentStep: PropTypes.func.isRequired,\n    handleReset: PropTypes.func.isRequired,\n    nextActive: PropTypes.bool,\n};\n\nexport default ButtonPanel;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport ApplicationCreateForm from 'AppComponents/Shared/AppsAndKeys/ApplicationCreateForm';\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport cloneDeep from 'lodash.clonedeep';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport ButtonPanel from './ButtonPanel';\n\nconst useStyles = makeStyles((theme) => ({\n    appCreateFormWrapper: {\n        paddingLeft: theme.spacing(2),\n    },\n    warningIcon: {\n        color: '#ff9a00',\n        fontSize: 43,\n        marginRight: 10,\n    },\n}));\n\nconst createAppStep = (props) => {\n    const APPLICATION_STATES = {\n        CREATED: 'CREATED',\n        APPROVED: 'APPROVED',\n        REJECTED: 'REJECTED',\n    };\n    const [throttlingPolicyList, setThrottlingPolicyList] = useState([]);\n    const [applicationRequest, setApplicationRequest] = useState({\n        name: '',\n        throttlingPolicy: '',\n        description: '',\n        tokenType: 'JWT',\n        groups: null,\n        attributes: {},\n    });\n    const [isNameValid, setIsNameValid] = useState(true);\n    const [allAppAttributes, setAllAppAttributes] = useState(null);\n    const [hasValidKM, setHasValidKM] = useState(null);\n    const {\n        currentStep, setCreatedApp, incrementStep, intl, setStepStatus, stepStatuses,\n    } = props;\n    const { api: apiObject } = useContext(ApiContext);\n\n    const validateName = (value) => {\n        if (!value || value.trim() === '') {\n            setIsNameValid({ isNameValid: false });\n            return Promise.reject(new Error(intl.formatMessage({\n                defaultMessage: 'Application name is required',\n                id: 'Apis.Details.Credentials.Wizard.CreateAppStep.application.name.is.required',\n            })));\n        }\n        setIsNameValid({ isNameValid: true });\n        return Promise.resolve(true);\n    };\n\n    /**\n     * @param {object} name application attribute name\n     * @returns {void}\n     * @memberof ApplicationFormHandler\n     */\n    const isRequiredAttribute = (name) => {\n        if (allAppAttributes) {\n            for (let i = 0; i < allAppAttributes.length; i++) {\n                if (allAppAttributes[i].attribute === name) {\n                    return allAppAttributes[i].required === 'true';\n                }\n            }\n        }\n        return false;\n    };\n\n    /**\n     * @param {object} name application attribute name\n     * @returns {Object} attribute value\n     * @memberof ApplicationFormHandler\n     */\n    const getAttributeValue = (name) => {\n        return applicationRequest.attributes[name];\n    };\n\n    const createApplication = () => {\n        const api = new API();\n        if (!applicationRequest.name || applicationRequest.name.trim() === '') {\n            Alert.error(intl.formatMessage({\n                defaultMessage: 'Application name is required',\n                id: 'Apis.Details.Credentials.Wizard.CreateAppStep.application.name.is.required',\n            }));\n            return;\n        }\n        api.createApplication(applicationRequest)\n            .then((response) => {\n                const data = response.body;\n                if (data.status === APPLICATION_STATES.APPROVED) {\n                    const appCreated = { value: data.applicationId, label: data.name };\n                    console.log('Application created successfully.');\n                    setCreatedApp(appCreated);\n                    incrementStep();\n                    setStepStatus(stepStatuses.PROCEED);\n                } else {\n                    setStepStatus(stepStatuses.BLOCKED);\n                }\n            })\n            .catch((error) => {\n                const { response } = error;\n                if (response && response.body) {\n                    const message = response.body.description || intl.formatMessage({\n                        defaultMessage: 'Error while creating the application',\n                        id: 'Apis.Details.Credentials.Wizard.CreateAppStep.error.while.creating.the.application',\n                    });\n                    Alert.error(message);\n                } else {\n                    Alert.error(error.message);\n                }\n                console.error('Error while creating the application');\n            });\n    };\n\n    /**\n     * @param {object} name application attribute name\n     * @returns {void}\n     * @memberof ApplicationFormHandler\n     */\n    const handleAttributesChange = (name) => (event) => {\n        const newApplicationRequest = cloneDeep(applicationRequest);\n        newApplicationRequest.attributes[name] = event.target.value;\n        setApplicationRequest(newApplicationRequest);\n    };\n\n    /**\n     * add a new group function\n     * @param {*} chip newly added group\n     * @param {*} appGroups already existing groups\n     */\n    const handleAddChip = (chip, appGroups) => {\n        const newRequest = { ...applicationRequest };\n        let values = appGroups || [];\n        values = values.slice();\n        values.push(chip);\n        newRequest.groups = values;\n        setApplicationRequest(newRequest);\n    };\n\n    /**\n     * remove a group from already existing groups function\n     * @param {*} chip selected group to be removed\n     * @param {*} index selected group index to be removed\n     * @param {*} appGroups already existing groups\n     */\n    const handleDeleteChip = (chip, index, appGroups) => {\n        const newRequest = { ...applicationRequest };\n        let values = appGroups || [];\n        values = values.filter((v) => v !== chip);\n        newRequest.groups = values;\n        setApplicationRequest(newRequest);\n    };\n\n    useEffect(() => {\n        // Get all the tiers to populate the drop down.\n        const api = new API();\n        const promiseTiers = api.getAllTiers('application');\n        const promisedAttributes = api.getAllApplicationAttributes();\n        const promisedKeyManagers = api.getKeyManagers();\n\n        Promise.all([promiseTiers, promisedAttributes, promisedKeyManagers])\n            .then((response) => {\n                const [tierResponse, allAttributes, keyManagers] = response;\n                const throttlingPolicyListLocal = tierResponse.body.list.map((item) => item.name);\n                const newRequest = { ...applicationRequest };\n                if (throttlingPolicyListLocal.length > 0) {\n                    [newRequest.throttlingPolicy] = throttlingPolicyListLocal;\n                }\n                const allAppAttr = [];\n                allAttributes.body.list.map((item) => allAppAttr.push(item));\n                if (allAttributes.length > 0) {\n                    newRequest.attributes = allAppAttr.filter((item) => !item.hidden);\n                }\n                // Selecting the resident key manager\n                const responseKeyManagerList = [];\n                keyManagers.body.list.map((item) => responseKeyManagerList.push(item));\n\n                let hasValidKMInner;\n                if (responseKeyManagerList.length > 0) {\n                    const responseKeyManagerListDefault = responseKeyManagerList.filter(\n                        (x) => x.name === 'Resident Key Manager' && x.enabled,\n                    );\n                    hasValidKMInner = responseKeyManagerListDefault.length !== 0;\n                }\n                setHasValidKM(hasValidKMInner);\n                setApplicationRequest(newRequest);\n                setThrottlingPolicyList(throttlingPolicyListLocal);\n                setAllAppAttributes(allAppAttr);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Credentials.Wizard.CreateAppStep.error.404',\n                        defaultMessage: 'Resource not found',\n                    }));\n                }\n            });\n    }, []);\n\n    const classes = useStyles();\n    if (!hasValidKM) {\n        return (\n            <Box mb={1} ml={4}>\n                <InlineMessage type='warn'>\n                    <FormattedMessage\n                        id='Apis.Details.Credentials.Wizard.CreateAppStep.default.km.msg'\n                        defaultMessage={'Wizard is only accessible via the Resident Key Manager.'\n                                + 'But the Resident Key Manager is disabled at the moment.'}\n                    />\n                </InlineMessage>\n                <Box mt={2}>\n                    <Link to={`/apis/${apiObject.id}/credentials`}>\n                        <Button variant='contained'>\n                            <FormattedMessage\n                                id='Apis.Details.Credentials.Wizard.CreateAppStep.cancel'\n                                defaultMessage='Cancel'\n                            />\n                        </Button>\n                    </Link>\n                </Box>\n            </Box>\n        );\n    }\n\n    return (\n        <div className={classes.appCreateFormWrapper}>\n            <Box px={2} display='flex' justifyContent='flex-start'>\n                <Grid item xs={10} md={6}>\n                    <ApplicationCreateForm\n                        throttlingPolicyList={throttlingPolicyList}\n                        applicationRequest={applicationRequest}\n                        updateApplicationRequest={setApplicationRequest}\n                        validateName={validateName}\n                        isNameValid={isNameValid}\n                        allAppAttributes={allAppAttributes}\n                        handleAttributesChange={handleAttributesChange}\n                        isRequiredAttribute={isRequiredAttribute}\n                        getAttributeValue={getAttributeValue}\n                        handleDeleteChip={handleDeleteChip}\n                        handleAddChip={handleAddChip}\n                    />\n                </Grid>\n            </Box>\n            <ButtonPanel\n                classes={classes}\n                currentStep={currentStep}\n                handleCurrentStep={createApplication}\n            />\n        </div>\n    );\n};\n\nexport default injectIntl(createAppStep);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport SubscribeToApi from 'AppComponents/Shared/AppsAndKeys/SubscribeToApi';\nimport Alert from 'AppComponents/Shared/Alert';\nimport API from 'AppData/api';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport { injectIntl } from 'react-intl';\nimport ButtonPanel from './ButtonPanel';\n\nconst subscribeToAppStep = (props) => {\n    const SUBSCRIPTION_STATES = {\n        ON_HOLD: 'ON_HOLD',\n        UNBLOCKED: 'UNBLOCKED',\n        REJECTED: 'REJECTED',\n    };\n    const [subscriptionRequest, setApplicationRequest] = useState({\n        applicationId: '',\n        apiId: '',\n        throttlingPolicy: '',\n    });\n    const { api: apiObject } = useContext(ApiContext);\n    const [newApp, setNewApp] = useState(null);\n    const [throttlingPolicyList] = useState(apiObject.tiers);\n    const {\n        currentStep, createdApp, incrementStep, intl, setStepStatus,\n        stepStatuses, classes,\n    } = props;\n    const subscribeToApplication = () => {\n        const api = new API();\n        api.subscribe(\n            subscriptionRequest.apiId, subscriptionRequest.applicationId,\n            subscriptionRequest.throttlingPolicy,\n        )\n            .then((response) => {\n                if (response.body.status === SUBSCRIPTION_STATES.UNBLOCKED) {\n                    console.log('Subscription created successfully with ID : ' + response.body.subscriptionId);\n                    Alert.info(intl.formatMessage({\n                        defaultMessage: 'Subscribed successfully',\n                        id: 'Apis.Details.Credentials.Wizard.SubscribeToAppStep.subscribed.successfully',\n                    }));\n                    incrementStep();\n                    setStepStatus(stepStatuses.PROCEED);\n                } else {\n                    setStepStatus(stepStatuses.BLOCKED);\n                }\n            })\n            .catch((error) => {\n                console.log('Error while creating the subscription.');\n                console.error(error);\n            });\n    };\n\n    useEffect(() => {\n        const newSubscriptionRequest = { ...subscriptionRequest, apiId: apiObject.id };\n        if (throttlingPolicyList) {\n            const [tierData] = throttlingPolicyList;\n            newSubscriptionRequest.throttlingPolicy = tierData.tierName;\n        }\n        if (createdApp) {\n            newSubscriptionRequest.applicationId = createdApp.value;\n        }\n        setApplicationRequest(newSubscriptionRequest);\n        setNewApp(createdApp);\n    }, [createdApp]);\n\n    return (\n        <>\n            <SubscribeToApi\n                throttlingPolicyList={throttlingPolicyList}\n                applicationsAvailable={[newApp]}\n                subscriptionRequest={subscriptionRequest}\n                updateSubscriptionRequest={setApplicationRequest}\n            />\n            <ButtonPanel\n                classes={classes}\n                currentStep={currentStep}\n                handleCurrentStep={subscribeToApplication}\n            />\n        </>\n    );\n};\n\nexport default injectIntl(subscribeToAppStep);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Application from 'AppData/Application';\nimport API from 'AppData/api';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Settings from 'Settings';\nimport ButtonPanel from './ButtonPanel';\n\nconst useStyles = makeStyles((theme) => ({\n    keyConfigWrapper: {\n        paddingLeft: theme.spacing(4),\n        flexDirection: 'column',\n    },\n    radioWrapper: {\n        flexDirection: 'row',\n    },\n    paper: {\n        background: 'none',\n        marginBottom: theme.spacing(2),\n        marginTop: theme.spacing(2),\n    },\n    subTitle: {\n        fontWeight: 400,\n    },\n    tabPanel: {\n        '& .MuiBox-root': {\n            padding: 0,\n        },\n    },\n    hr: {\n        border: 'solid 1px #efefef',\n    },\n    muiFormGroupRoot: {\n        flexDirection: 'row',\n    },\n    table: {\n        minWidth: '100%',\n        '& td, & th': {\n            padding: theme.spacing(),\n        },\n    },\n    leftCol: {\n        width: 200,\n    },\n    iconAligner: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n    },\n}));\n\nfunction TabPanel(props) {\n    const {\n        children, value, index, ...other\n    } = props;\n\n    return (\n        <div\n            role='tabpanel'\n            hidden={value !== index}\n            id={`nav-tabpanel-${index}`}\n            aria-labelledby={`nav-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <>{children}</>\n            )}\n        </div>\n    );\n}\nTabPanel.defaultProps = {\n    children: <div />,\n};\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired,\n};\n\nconst generateKeysStep = (props) => {\n    const intl = useIntl();\n\n    const keyStates = {\n        COMPLETED: 'COMPLETED',\n        APPROVED: 'APPROVED',\n        CREATED: 'CREATED',\n        REJECTED: 'REJECTED',\n    };\n    const [nextActive, setNextActive] = useState(true);\n    const [keyManager, setKeyManager] = useState(null);\n    const selectedTab = 'Resident Key Manager';\n\n    const [keyRequest, setKeyRequest] = useState({\n        keyType: 'SANDBOX',\n        supportedGrantTypes: [],\n        callbackUrl: '',\n        additionalProperties: {},\n        keyManager: '',\n    });\n\n    const {\n        currentStep, createdApp, incrementStep, setCreatedKeyType,\n        setStepStatus, stepStatuses, setCreatedSelectedTab,\n    } = props;\n\n    useEffect(() => {\n        const api = new API();\n        const promisedKeyManagers = api.getKeyManagers();\n        promisedKeyManagers\n            .then((response) => {\n                const responseKeyManagerList = [];\n                response.body.list.map((item) => responseKeyManagerList.push(item));\n\n                // Selecting a key manager from the list of key managers.\n                let selectedKeyManager;\n                if (responseKeyManagerList.length > 0) {\n                    const responseKeyManagerListDefault = responseKeyManagerList.filter((x) => x.name === 'Resident Key Manager');\n                    selectedKeyManager = responseKeyManagerListDefault.length > 0 ? responseKeyManagerListDefault[0]\n                        : responseKeyManagerList[0];\n                }\n                setKeyManager(selectedKeyManager);\n\n                // Setting key request\n                try {\n                    const newKeyRequest = { ...keyRequest };\n                    newKeyRequest.keyManager = selectedKeyManager.id;\n                    newKeyRequest.supportedGrantTypes = selectedKeyManager.availableGrantTypes;\n                    if (selectedKeyManager.availableGrantTypes.includes('implicit')\n                        || selectedKeyManager.availableGrantTypes.includes('authorization_code')) {\n                        newKeyRequest.callbackUrl = 'http://localhost';\n                    }\n                    if (!selectedKeyManager.availableGrantTypes.includes('client_credentials')) {\n                        setNextActive(false);\n                    }\n                    setKeyRequest(newKeyRequest);\n                } catch (e) {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Credentials.Wizard.GenerateKeysStep.error.keymanager',\n                        defaultMessage: 'Error while selecting the key manager',\n                    }));\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n            });\n    }, []);\n\n    const generateKeys = () => {\n        Application.get(createdApp.value).then((application) => {\n            return application.generateKeys(\n                keyRequest.keyType, keyRequest.supportedGrantTypes,\n                keyRequest.callbackUrl,\n                keyRequest.additionalProperties, keyRequest.keyManager,\n            );\n        }).then((response) => {\n            if (response.keyState === keyStates.CREATED || response.keyState === keyStates.REJECTED) {\n                setStepStatus(stepStatuses.BLOCKED);\n            } else {\n                incrementStep();\n                setCreatedKeyType(keyRequest.keyType);\n                setCreatedSelectedTab(selectedTab);\n                setStepStatus(stepStatuses.PROCEED);\n                console.log('Keys generated successfully with ID : ' + response);\n            }\n        }).catch((error) => {\n            if (process.env.NODE_ENV !== 'production') {\n                console.log(error);\n            }\n            const { status } = error;\n            if (status === 404) {\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Credentials.Wizard.GenerateKeysStep.error.404',\n                    defaultMessage: 'Resource not found.',\n                }));\n            }\n        });\n    };\n\n    const classes = useStyles();\n\n    return (\n        <>\n            <Box component='div' marginLeft={4}>\n                <Grid container spacing={2}>\n                    {keyManager && (\n                        <>\n                            <Grid item xs={12} md={12} lg={3}>\n                                <Typography color='inherit' variant='subtitle2' component='div'>\n                                    <FormattedMessage\n                                        defaultMessage='Key Configuration'\n                                        id='Apis.Details.Credentials.Wizard.GenerateKeysStep.key.configuration'\n                                    />\n                                </Typography>\n                                <Typography color='inherit' variant='caption' component='p'>\n                                    <FormHelperText>\n                                        <FormattedMessage\n                                            defaultMessage={'These configurations are set for the purpose of the wizard.'\n                                        + 'You have more control over them when you go to the application view. '}\n                                            id='Apis.Details.Credentials.Wizard.GenerateKeysStep.key.configuration.help'\n                                        />\n                                    </FormHelperText>\n\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={12} md={12} lg={9}>\n                                <Table className={classes.table}>\n                                    <TableBody>\n                                        <TableRow>\n                                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Credentials.Wizard.GenerateKeysStep.config.km.name'\n                                                    defaultMessage='Key Manager'\n                                                />\n                                            </TableCell>\n                                            <TableCell>\n                                                <div>{keyManager.displayName || keyManager.name}</div>\n                                                <Typography variant='caption' component='div'>{keyManager.description}</Typography>\n                                            </TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Credentials.Wizard.GenerateKeysStep.list.environment'\n                                                    defaultMessage='Environment'\n                                                />\n                                            </TableCell>\n                                            <TableCell>Sandbox</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Credentials.Wizard.GenerateKeysStep.list.tokenEndpoint'\n                                                    defaultMessage='Token Endpoint'\n                                                />\n                                            </TableCell>\n                                            <TableCell>{keyManager.tokenEndpoint}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Credentials.Wizard.GenerateKeysStep.list.revokeEndpoint'\n                                                    defaultMessage='Revoke Endpoint'\n                                                />\n                                            </TableCell>\n                                            <TableCell>{keyManager.revokeEndpoint}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Credentials.Wizard.GenerateKeysStep.list.userInfoEndpoint'\n                                                    defaultMessage='User Info Endpoint'\n                                                />\n                                            </TableCell>\n                                            <TableCell>{keyManager.userInfoEndpoint}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Credentials.Wizard.GenerateKeysStep.list.grantTypes'\n                                                    defaultMessage='Grant Types'\n                                                />\n                                            </TableCell>\n                                            <TableCell>\n                                                {keyManager.availableGrantTypes.map((gt) => (\n                                                    <span>\n                                                        {Settings.grantTypes[gt] || gt}\n                                                        ,\n                                                        {' '}\n                                                    </span>\n                                                ))}\n                                            </TableCell>\n                                        </TableRow>\n                                    </TableBody>\n                                </Table>\n                            </Grid>\n                        </>\n                    )}\n                </Grid>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <Box component='span' m={1}>\n                            <ButtonPanel\n                                classes={classes}\n                                currentStep={currentStep}\n                                handleCurrentStep={generateKeys}\n                                nextActive={nextActive}\n                            />\n                        </Box>\n\n                    </Grid>\n                </Grid>\n            </Box>\n        </>\n    );\n};\n\nexport default generateKeysStep;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport Tokens from 'AppComponents/Shared/AppsAndKeys/Tokens';\nimport Application from 'AppData/Application';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { defineMessages, useIntl } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport Alert from 'AppComponents/Shared/Alert';\nimport ButtonPanel from './ButtonPanel';\n\nconst useStyles = makeStyles((theme) => ({\n    tokenWrapper: {\n        paddingLeft: theme.spacing(3),\n        paddingRight: theme.spacing(7),\n    },\n    title: {\n        paddingLeft: theme.spacing(2),\n    },\n}));\n\nconst generateAccessTokenStep = (props) => {\n    const intl = useIntl();\n    const [keyType, setKeyType] = useState('PRODUCTION');\n    const [selectedTab, setSelectedTab] = useState('Resident Key Manager');\n    const [subscriptionScopes, setSubscriptionScopes] = useState([]);\n\n    const [accessTokenRequest, setAccessTokenRequest] = useState({\n        timeout: 3600,\n        scopesSelected: [],\n        keyType: '',\n    });\n    const {\n        currentStep, createdApp, setCreatedToken, incrementStep, createdKeyType, createdSelectedTab,\n    } = props;\n\n    useEffect(() => {\n        const newRequest = { ...accessTokenRequest, keyType: createdKeyType };\n        setKeyType(createdKeyType);\n        setSelectedTab(createdSelectedTab);\n        setAccessTokenRequest(newRequest);\n    }, [createdKeyType, createdSelectedTab]);\n\n    useEffect(() => {\n        Application.get(createdApp.value)\n            .then((application) => {\n                application.getKeys().then(() => {\n                    const subscriptionScopesList = application.subscriptionScopes\n                        .map((scope) => { return scope.key; });\n                    setSubscriptionScopes(subscriptionScopesList);\n                });\n            }).catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Credentials.Wizard.GenerateAccessTokenStep.error.404',\n                        defaultMessage: 'Resource not found',\n                    }));\n                }\n            });\n    }, []);\n\n    const generateAccessToken = () => {\n        setSelectedTab(createdSelectedTab);\n        Application.get(createdApp.value)\n            .then((application) => {\n                return application.generateToken(\n                    selectedTab,\n                    accessTokenRequest.keyType,\n                    accessTokenRequest.timeout,\n                    accessTokenRequest.scopesSelected,\n                );\n            })\n            .then((response) => {\n                console.log('token generated successfully ' + response);\n                setCreatedToken(response);\n                incrementStep();\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Credentials.Wizard.GenerateAccessTokenStep.error.404',\n                        defaultMessage: 'Resource not found',\n                    }));\n                }\n            });\n    };\n    const classes = useStyles();\n    const messages = defineMessages({\n        dataInfo: {\n            id: 'Apis.Details.Credentials.Wizard.GenerateAccessTokenStep',\n            defaultMessage: 'Generate Access Token for {keyType} environment',\n        },\n    });\n\n    return (\n        <>\n            <div className={classes.tokenWrapper}>\n                <Typography variant='subtitle1' component='div' className={classes.title}>\n                    {intl.formatMessage(messages.dataInfo, { keyType })}\n                </Typography>\n                <Tokens\n                    updateAccessTokenRequest={setAccessTokenRequest}\n                    accessTokenRequest={accessTokenRequest}\n                    subscriptionScopes={subscriptionScopes}\n                />\n                <ButtonPanel\n                    classes={classes}\n                    currentStep={currentStep}\n                    handleCurrentStep={generateAccessToken}\n                />\n            </div>\n        </>\n    );\n};\n\nexport default generateAccessTokenStep;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext } from 'react';\nimport ViewToken from 'AppComponents/Shared/AppsAndKeys/ViewToken';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport { Box } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ButtonPanel from './ButtonPanel';\n\nconst useStyles = makeStyles((theme) => ({\n    tokenWrapper: {\n        paddingLeft: theme.spacing(2),\n    },\n}));\n\nconst copyAccessTokenStep = (props) => {\n    const {\n        currentStep, createdToken, handleReset,\n    } = props;\n    const history = useHistory();\n    const { api, updateSubscriptionData } = useContext(ApiContext);\n    const completeStep = () => {\n        updateSubscriptionData(history.push(`/apis/${api.id}/credentials`));\n    };\n    const classes = useStyles();\n\n    return (\n        <div className={classes.tokenWrapper}>\n            <Grid md={10}>\n                <Box my={1} mx={2}>\n                    <ViewToken token={{ ...createdToken, isOauth: true }} />\n                </Box>\n            </Grid>\n            <ButtonPanel\n                classes={classes}\n                currentStep={currentStep}\n                handleCurrentStep={completeStep}\n                handleReset={handleReset}\n            />\n        </div>\n    );\n};\n\nexport default copyAccessTokenStep;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport { Typography, Paper, Box } from '@material-ui/core';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { withStyles } from '@material-ui/core/styles';\nimport CreateAppStep from './CreateAppStep';\nimport SubscribeToAppStep from './SubscribeToAppStep';\nimport GenerateKeysStep from './GenerateKeysStep';\nimport GenerateAccessTokenStep from './GenerateAccessTokenStep';\nimport CopyAccessTokenStep from './CopyAccessTokenStep';\n\nconst styles = (theme) => ({\n    paper: {\n        marginLeft: theme.spacing(3),\n    },\n    titleSub: {\n        marginLeft: theme.spacing(3),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n        color: theme.palette.getContrastText(theme.palette.background.default),\n    },\n    boxWrapper: {\n        '& h5, & label, & td, & li, & div, & input, & p.MuiFormHelperText-root': {\n            color: theme.palette.getContrastText(theme.palette.background.paper),\n        },\n        '& .MuiButton-containedPrimary span.MuiButton-label': {\n            color: theme.palette.getContrastText(theme.palette.primary.main),\n        },\n    },\n\n});\n\nconst stepComponents = [CreateAppStep, SubscribeToAppStep, GenerateKeysStep,\n    GenerateAccessTokenStep, CopyAccessTokenStep];\n\n/**\n * Class used for wizard\n */\nclass Wizard extends Component {\n    /**\n     * @param {*} props properties\n     */\n    constructor(props) {\n        super(props);\n        const { intl } = this.props;\n        this.steps = [\n            intl.formatMessage({\n                defaultMessage: 'Create application',\n                id: 'Apis.Details.Credentials.Wizard.Wizard.create',\n            }),\n            intl.formatMessage({\n                defaultMessage: 'Subscribe to new application',\n                id: 'Apis.Details.Credentials.Wizard.Wizard.subscribe.to.new.application',\n            }),\n            intl.formatMessage({\n                defaultMessage: 'Generate Keys',\n                id: 'Apis.Details.Credentials.Wizard.Wizard.generate.keys',\n            }),\n            intl.formatMessage({\n                defaultMessage: 'Generate Access Token',\n                id: 'Apis.Details.Credentials.Wizard.Wizard.generate.access.token',\n            }),\n            intl.formatMessage({\n                defaultMessage: 'Copy Access Token',\n                id: 'Apis.Details.Credentials.Wizard.Wizard.copy.access.token',\n            }),\n        ];\n        this.stepStatuses = {\n            PROCEED: 'PROCEED',\n            BLOCKED: 'BLOCKED',\n        };\n        this.state = {\n            currentStep: 0,\n            createdApp: null,\n            createdToken: null,\n            redirect: false,\n            createdKeyType: '',\n            createdSelectedTab: '',\n            stepStatus: 'PROCEED',\n        };\n    }\n\n    /**\n     * Used to set the status retured after executing each step. Used in workflow\n     * scenario to evaluate wheather we can proceed to next step\n     * @param {*} stepStatus status\n     */\n    setStepStatus = (stepStatus) => {\n        this.setState({ stepStatus });\n    }\n\n    /**\n     * Set the created app from step 1\n     * @param {*} createdApp app created\n     */\n    setCreatedApp = (createdApp) => {\n        this.setState({ createdApp });\n    }\n\n    /**\n     * Set the created token from step 4\n     * @param {*} createdToken token created\n     */\n    setCreatedToken = (createdToken) => {\n        this.setState({ createdToken });\n    }\n\n    /**\n     * Set the created keytype from step 3\n     * @param {*} createdKeyType token created\n     */\n    setCreatedKeyType = (createdKeyType) => {\n        this.setState({ createdKeyType });\n    }\n\n    /**\n     * Set the created selectedTab from step 3\n     * @param {*} selectedTab token created\n     */\n    setCreatedSelectedTab = (createdSelectedTab) => {\n        this.setState({ createdSelectedTab });\n    }\n\n    /**\n     * Increment the current step or next step by 1\n     */\n    handleNext = () => {\n        this.setState(({ currentStep }) => {\n            return { currentStep: currentStep + 1 };\n        });\n    }\n\n    /**\n     * Rest the currentStep to 0 and bring wizard back to first step\n     * @memberof Wizard\n     */\n    handleReset = () => {\n        this.setState({\n            currentStep: 0,\n        });\n    };\n\n    /**\n     * @inheritdoc\n     */\n    render() {\n        const { classes } = this.props;\n        const { currentStep, stepStatus } = this.state;\n        const CurrentStepComponent = stepComponents[currentStep];\n        return (\n            <>\n                <Typography variant='h4' component='h2' className={classes.titleSub}>\n                    <FormattedMessage\n                        id={'Apis.Details.Credentials.Credentials'\n                    + '.api.credentials.generate'}\n                        defaultMessage='Subscription &amp; Key Generation Wizard'\n                    />\n                </Typography>\n                <Paper elevation={0} className={classes.paper}>\n                    <Box py={1} mx='auto' display='flex'>\n                        <Grid item xs={12} md={12}>\n                            <Stepper activeStep={currentStep}>\n                                {this.steps.map((label) => {\n                                    return (\n                                        <Step key={label}>\n                                            <StepLabel>{label}</StepLabel>\n                                        </Step>\n                                    );\n                                })}\n                            </Stepper>\n                        </Grid>\n                    </Box>\n                    <Box py={1} mx='auto' display='block' className={classes.boxWrapper}>\n                        {stepStatus === this.stepStatuses.PROCEED && (\n                            <>\n                                <CurrentStepComponent\n                                    {...this.state}\n                                    incrementStep={this.handleNext}\n                                    setStepStatus={this.setStepStatus}\n                                    stepStatuses={this.stepStatuses}\n                                    classes={classes}\n                                    setCreatedApp={this.setCreatedApp}\n                                    setCreatedKeyType={this.setCreatedKeyType}\n                                    setCreatedSelectedTab={this.setCreatedSelectedTab}\n                                    setCreatedToken={this.setCreatedToken}\n                                    handleReset={this.handleReset}\n                                />\n                            </>\n                        )}\n                    </Box>\n                    <Box py={1} mb={1} mx='auto' display='flex'>\n                        {stepStatus === this.stepStatuses.BLOCKED && (\n                            <Box pt={2} px={3} display='flex'>\n                                <Typography variant='h5' component='label'>\n                                    <FormattedMessage\n                                        id={'Apis.Details.Credentials.Wizard.Wizard.approval.request.'\n                                                + 'for.this.step.has'}\n                                        defaultMessage='A request to register this step has been sent.'\n                                    />\n                                </Typography>\n                            </Box>\n                        )}\n                    </Box>\n                </Paper>\n            </>\n        );\n    }\n}\n\nWizard.propTypes = {\n    classes: PropTypes.shape({\n        appBar: PropTypes.string,\n        toolbar: PropTypes.string,\n        subscribeTitle: PropTypes.string,\n        plainContent: PropTypes.string,\n        root: PropTypes.string,\n        instructions: PropTypes.string,\n        button: PropTypes.string,\n        wizardContent: PropTypes.string,\n    }).isRequired,\n    intl: PropTypes.func.isRequired,\n    throttlingPolicyList: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(Wizard));\n","/* eslint-disable react/no-unused-state */\n/* eslint-disable react/jsx-props-no-spreading */\n/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { lazy, Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport {\n    Route, Switch, Redirect, Link, withRouter,\n} from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Api from 'AppData/api';\nimport AuthManager from 'AppData/AuthManager';\nimport withSettings from 'AppComponents/Shared/withSettingsContext';\nimport SolaceTopicsInfo from 'AppComponents/Apis/Details/SolaceApi/SolaceTopicsInfo';\nimport Alert from 'AppComponents/Shared/Alert';\nimport classNames from 'classnames';\nimport { Helmet } from 'react-helmet';\nimport { app } from 'Settings';\nimport CONSTANTS from 'AppData/Constants';\nimport CustomIcon from '../../Shared/CustomIcon';\nimport LeftMenuItem from '../../Shared/LeftMenuItem';\nimport { ResourceNotFound } from '../../Base/Errors/index';\nimport Breadcrumb from './Breadcrumb';\nimport { ApiContext } from './ApiContext';\nimport Progress from '../../Shared/Progress';\nimport Wizard from './Credentials/Wizard/Wizard';\nimport User from '../../../data/User';\n\nconst ApiConsole = lazy(() => import('./ApiConsole/ApiConsole' /* webpackChunkName: \"APIConsole\" */));\nconst GraphQLConsole = lazy(() => import('./GraphQLConsole/GraphQLConsole' /* webpackChunkName: \"GraphQLConsole\" */));\nconst AsyncApiConsole = lazy(() => import('./AsyncApiConsole/AsyncApiConsole'));\nconst Overview = lazy(() => import('./Overview' /* webpackChunkName: \"APIOverview\" */));\nconst Documents = lazy(() => import('./Documents/Documents' /* webpackChunkName: \"APIDocuments\" */));\nconst Credentials = lazy(() => import('./Credentials/Credentials' /* webpackChunkName: \"APICredentials\" */));\nconst Comments = lazy(() => import('./Comments/Comments' /* webpackChunkName: \"APIComments\" */));\nconst Sdk = lazy(() => import('./Sdk' /* webpackChunkName: \"APISdk\" */));\nconst AsyncApiDefinition = lazy(() => import('./Definitions/AsyncApi/AsyncApiDefinitionUI'));\n\nconst LoadableSwitch = withRouter((props) => {\n    const { match, api } = props;\n    const { apiUuid } = match.params;\n    const path = '/apis/';\n    const redirectURL = path + apiUuid + '/overview';\n\n    let tryoutRoute;\n    if (api.type === 'GRAPHQL') {\n        tryoutRoute = <Route path='/apis/:apiUuid/test' component={GraphQLConsole} />;\n    } else if (api.type === CONSTANTS.API_TYPES.WS || api.type === CONSTANTS.API_TYPES.WEBSUB\n        || api.type === CONSTANTS.API_TYPES.SSE || api.type === CONSTANTS.API_TYPES.ASYNC) {\n        tryoutRoute = <Route path='/apis/:apiUuid/test' component={AsyncApiConsole} />;\n    } else {\n        tryoutRoute = <Route path='/apis/:apiUuid/test' component={ApiConsole} />;\n    }\n\n    return (\n        <Suspense fallback={<Progress />}>\n            <Switch>\n                <Redirect exact from='/apis/:apiUuid' to={redirectURL} />\n                <Route path='/apis/:apiUuid/overview' render={() => <Overview {...props} />} />\n                <Route path='/apis/:apiUuid/documents' component={Documents} />\n                <Route path='/apis/:apiUuid/definition' component={AsyncApiDefinition} />\n                <Route path='/apis/:apiUuid/solaceTopicsInfo' component={SolaceTopicsInfo} />\n                <Route exact path='/apis/:apiUuid/credentials/wizard' component={Wizard} />\n                <Route path='/apis/:apiUuid/comments' component={Comments} />\n                <Route path='/apis/:apiUuid/credentials' component={Credentials} />\n                {tryoutRoute}\n                <Route path='/apis/:apiUuid/sdk' component={Sdk} />\n                <Route component={ResourceNotFound} />\n            </Switch>\n        </Suspense>\n    );\n});\n\n/**\n *\n * @returns style object\n * @param {*} theme\n */\nconst styles = (theme) => {\n    const {\n        custom: {\n            leftMenu: { width, position },\n        },\n    } = theme;\n    const shiftToLeft = position === 'vertical-left' ? width : 0;\n    const shiftToRight = position === 'vertical-right' ? width : 0;\n    const shiftToLeftMinView = position === 'vertical-left' ? 45 : 0;\n    const shiftToRightMinView = position === 'vertical-right' ? 45 : 0;\n    const leftMenuPaddingLeft = position === 'horizontal' ? theme.spacing(3) : 0;\n\n    return {\n        leftMenu: {\n            backgroundColor: theme.custom.leftMenu.background,\n            backgroundImage: `url(${app.context}${theme.custom.leftMenu.backgroundImage})`,\n            textAlign: 'left',\n            fontFamily: theme.typography.fontFamily,\n            position: 'absolute',\n            bottom: 0,\n            paddingLeft: leftMenuPaddingLeft,\n        },\n        leftMenuHorizontal: {\n            top: theme.custom.infoBar.height,\n            width: '100%',\n            overflowX: 'auto',\n            height: 60,\n            display: 'flex',\n            left: 0,\n        },\n        leftMenuVerticalLeft: {\n            width: theme.custom.leftMenu.width,\n            [theme.breakpoints.down('sm')]: {\n                width: 50,\n            },\n            top: 0,\n            left: 0,\n            overflowY: 'auto',\n        },\n        leftMenuVerticalLeftMinView: {\n            width: 45,\n            top: 0,\n            left: 0,\n            overflowY: 'auto',\n        },\n        leftMenuVerticalRight: {\n            width: theme.custom.leftMenu.width,\n            top: 0,\n            right: 0,\n            overflowY: 'auto',\n        },\n        leftLInkMain: {\n            borderRight: 'solid 1px ' + theme.custom.leftMenu.background,\n            cursor: 'pointer',\n            background: theme.custom.leftMenu.rootBackground,\n            color: theme.palette.getContrastText(theme.custom.leftMenu.rootBackground),\n            alignItems: 'center',\n            justifyContent: 'center',\n            display: 'flex',\n            height: theme.custom.infoBar.height,\n            textDecoration: 'none',\n        },\n        leftLInkMainText: {\n            fontSize: 18,\n            color: theme.palette.grey[500],\n            textDecoration: 'none',\n            paddingLeft: theme.spacing(2),\n        },\n        detailsContent: {\n            display: 'flex',\n            flex: 1,\n        },\n        content: {\n            display: 'flex',\n            flex: 1,\n            flexGrow: 1,\n            flexDirection: 'column',\n            marginLeft: shiftToLeft,\n            marginRight: shiftToRight,\n            [theme.breakpoints.down('sm')]: {\n                marginLeft: shiftToLeft !== 0 && 50,\n                marginRight: shiftToRight !== 0 && 50,\n            },\n            paddingBottom: theme.spacing(3),\n            overflowX: 'hidden',\n        },\n        contentExpandView: {\n            display: 'flex',\n            flex: 1,\n            flexGrow: 1,\n            flexDirection: 'column',\n            marginLeft: shiftToLeftMinView,\n            marginRight: shiftToRightMinView,\n            paddingBottom: theme.spacing(3),\n            overflowX: 'hidden',\n            minHeight: 'calc(100vh - 114px)',\n        },\n        shiftLeft: {\n            marginLeft: 0,\n        },\n        contentLoader: {\n            paddingTop: theme.spacing(3),\n        },\n        contentLoaderRightMenu: {\n            paddingRight: theme.custom.leftMenu.width,\n        },\n    };\n};\n/**\n *\n *\n * @class Details\n * @extends {React.Component}\n */\nclass Details extends React.Component {\n    /**\n     *Creates an instance of Details.\n     * @param {*} props\n     * @memberof Details\n     */\n    constructor(props) {\n        super(props);\n        /**\n         *\n         *\n         * @memberof Details\n         */\n        this.updateSubscriptionData = (callback) => {\n            let existingSubscriptions = null;\n            let promisedApplications = null;\n\n            const restApi = new Api();\n\n            // const subscriptionClient = new Subscription();\n            const promisedAPI = restApi.getAPIById(this.api_uuid);\n\n            promisedAPI\n                .then((api) => {\n                    this.setState({ api: api.body });\n                })\n                .catch((error) => {\n                    const { status, response } = error;\n                    const { setTenantDomain, intl } = this.props;\n\n                    const message = intl.formatMessage({\n                        defaultMessage: 'Invalid tenant domain',\n                        id: 'Apis.Details.index.invalid.tenant.domain',\n                    });\n                    if (response && response.body.code === 901300) {\n                        setTenantDomain('INVALID');\n                        Alert.error(message);\n                    }\n                    console.error('Error when getting apis', error);\n                    if (status === 404 || status === 403) {\n                        this.setState({ notFound: true });\n                    }\n                });\n            const user = AuthManager.getUser();\n            if (user === null) {\n                const user1 = new User();\n                this.setState({ open: user1.isSideBarOpen });\n            }\n            if (user != null) {\n                this.setState({ open: user.isSideBarOpen });\n                existingSubscriptions = restApi.getSubscriptions(this.api_uuid, null);\n                const subscriptionLimit = app.subscribeApplicationLimit || 5000;\n                existingSubscriptions = restApi.getSubscriptions(this.api_uuid, null, subscriptionLimit);\n                promisedApplications = restApi.getAllApplications(null, subscriptionLimit);\n\n                Promise.all([existingSubscriptions, promisedApplications])\n                    .then((response) => {\n                        const [subscriptions, applications] = response.map((data) => data.obj);\n\n                        // get the application IDs of existing subscriptions\n                        const subscribedApplications = subscriptions.list.map((element) => {\n                            return {\n                                value: element.applicationId,\n                                policy: element.throttlingPolicy,\n                                status: element.status,\n                                subscriptionId: element.subscriptionId,\n                                label: element.applicationInfo.name,\n                            };\n                        });\n\n                        // Removing subscribed applications from all the applications and get\n                        // the available applications to subscribe\n                        const subscribedAppIds = subscribedApplications.map((sub) => sub.value);\n                        const applicationsAvailable = applications.list\n                            .filter((appInner) => !subscribedAppIds.includes(appInner.applicationId) && appInner.status === 'APPROVED')\n                            .map((filteredApp) => {\n                                return {\n                                    value: filteredApp.applicationId,\n                                    label: filteredApp.name,\n                                };\n                            });\n                        this.setState({ subscribedApplications, applicationsAvailable }, () => {\n                            if (callback) {\n                                callback();\n                            }\n                        });\n                    })\n                    .catch((error) => {\n                        if (process.env.NODE_ENV !== 'production') {\n                            console.log(error);\n                        }\n                        const { status } = error;\n                        if (status === 404) {\n                            this.setState({ notFound: true });\n                        }\n                    });\n            }\n        };\n\n        this.state = {\n            active: 'overview',\n            overviewHiden: false,\n            updateSubscriptionData: this.updateSubscriptionData,\n            api: null,\n            applications: null,\n            subscribedApplications: [],\n            applicationsAvailable: [],\n            item: 1,\n            xo: null,\n        };\n        this.setDetailsAPI = this.setDetailsAPI.bind(this);\n        this.api_uuid = this.props.match.params.apiUuid;\n        this.handleDrawerClose = this.handleDrawerClose.bind(this);\n        this.handleDrawerOpen = this.handleDrawerOpen.bind(this);\n    }\n\n    /**\n     * @memberof Details\n     */\n    componentDidMount() {\n        this.updateSubscriptionData();\n    }\n\n    /**\n     * handle component did update\n     * @param {JSON} prevProps previous props\n     */\n    componentDidUpdate(prevProps) {\n        const { match: { params: { apiUuid: prevApiUuid } } } = prevProps;\n        const { match: { params: { apiUuid: newApiUuid } } } = this.props;\n        if (prevApiUuid !== newApiUuid) {\n            this.api_uuid = newApiUuid;\n            this.updateSubscriptionData();\n        }\n    }\n\n    /**\n     * @param {JSON} api api object\n     * @memberof Details\n     */\n    setDetailsAPI(api) {\n        this.setState({ api });\n    }\n\n    /**\n     * @memberof Details\n     */\n    handleDrawerClose() {\n        this.setState({ open: false });\n        const user = AuthManager.getUser();\n        if (user != null) {\n            user.isSideBarOpen = false;\n            AuthManager.setUser(user);\n        }\n    }\n\n    /**\n     * handle left side drawer open\n     */\n    handleDrawerOpen() {\n        this.setState({ open: true });\n        const user = AuthManager.getUser();\n        if (user !== null) {\n            user.isSideBarOpen = true;\n            AuthManager.setUser(user);\n        }\n    }\n\n    /**\n     * handle lef side drawer open\n     * @param {JSON} api api object\n     * @returns {boolean} is the api async api\n     */\n    isAsyncAPI(api) {\n        return (api\n            && (api.type === CONSTANTS.API_TYPES.WS\n                || api.type === CONSTANTS.API_TYPES.WEBSUB\n                || api.type === CONSTANTS.API_TYPES.SSE\n                || api.type === CONSTANTS.API_TYPES.ASYNC));\n    }\n\n    /**\n     * @returns {JSX} rendered outpu\n     * @memberof Details\n     */\n    render() {\n        const {\n            classes, theme, intl,\n        } = this.props;\n        const user = AuthManager.getUser();\n        const { api, notFound, open } = this.state;\n        const {\n            custom: {\n                leftMenu: {\n                    rootIconSize, rootIconTextVisible, rootIconVisible, position,\n                },\n                apiDetailPages: {\n                    showCredentials, showComments, showTryout, showDocuments, showSdks, showAsyncSpecification, showSolaceTopics,\n                },\n                title: {\n                    prefix, sufix,\n                },\n            },\n        } = theme;\n        const globalStyle = 'body{ font-family: ' + theme.typography.fontFamily + '}';\n        const pathPrefix = '/apis/' + this.api_uuid + '/';\n        if (!api && notFound) {\n            return <ResourceNotFound />;\n        }\n        // check for widget=true in the query params. If it's present we render without <Base> component.\n        const pageUrl = new URL(window.location);\n        const isWidget = pageUrl.searchParams.get('widget');\n        const isAsyncApi = this.isAsyncAPI(api);\n\n        return api ? (\n            <ApiContext.Provider value={this.state}>\n                <Helmet>\n                    <title>{`${prefix} ${api.name}${sufix}`}</title>\n                </Helmet>\n                <style>{globalStyle}</style>\n                {!isWidget && (\n                    <nav\n                        role='navigation'\n                        aria-label={intl.formatMessage({\n                            id: 'Apis.Details.index.secondary.navigation',\n                            defaultMessage: 'Secondary Navigation',\n                        })}\n                        className={classNames(\n                            classes.leftMenu,\n                            {\n                                [classes.leftMenuHorizontal]: position === 'horizontal',\n                            },\n                            {\n                                [classes.leftMenuVerticalLeft]: position === 'vertical-left' && open,\n                                [classes.leftMenuVerticalLeftMinView]: position === 'vertical-left' && !open,\n\n                            },\n                            {\n                                [classes.leftMenuVerticalRight]: position === 'vertical-right',\n                            },\n                            'left-menu',\n\n                        )}\n                    >\n                        {rootIconVisible && (\n                            <Link to='/apis' className={classes.leftLInkMain} aria-label='ALL APIs'>\n                                <CustomIcon width={rootIconSize} height={rootIconSize} icon='api' />\n                                {rootIconTextVisible && (\n                                    <Typography className={classes.leftLInkMainText}>\n                                        <FormattedMessage id='Apis.Details.index.all.apis' defaultMessage='ALL APIs' />\n                                    </Typography>\n                                )}\n                            </Link>\n                        )}\n                        <LeftMenuItem\n                            text={<FormattedMessage id='Apis.Details.index.overview' defaultMessage='Overview' />}\n                            route='overview'\n                            iconText='overview'\n                            to={pathPrefix + 'overview'}\n                            open={open}\n                        />\n                        {user && showCredentials && (\n                            <>\n\n                                <LeftMenuItem\n                                    text={(\n                                        <FormattedMessage\n                                            id='Apis.Details.index.subscriptions'\n                                            defaultMessage='Subscriptions'\n                                        />\n                                    )}\n                                    route='credentials'\n                                    iconText='credentials'\n                                    to={pathPrefix + 'credentials'}\n                                    open={open}\n                                />\n\n                            </>\n                        )}\n                        {showTryout && (api.gatewayVendor === 'wso2'\n                        || (api.type === 'APIPRODUCT' && !api.gatewayVendor)) && (\n                            <LeftMenuItem\n                                text={(\n                                    <FormattedMessage\n                                        id='Apis.Details.index.try.out'\n                                        defaultMessage='Try out'\n                                    />\n                                )}\n                                route='test'\n                                iconText='test'\n                                to={pathPrefix + 'test'}\n                                open={open}\n                            />\n\n                        )}\n                        {(showSolaceTopics && api.gatewayVendor === 'solace') && (\n                            <LeftMenuItem\n                                text={(\n                                    <FormattedMessage\n                                        id='Apis.Details.index.solaceTopicsInfo'\n                                        defaultMessage='Solace Info'\n                                    />\n                                )}\n                                route='solaceTopicsInfo'\n                                iconText='test'\n                                to={pathPrefix + 'solaceTopicsInfo'}\n                                open={open}\n                            />\n                        )}\n                        {isAsyncApi && showAsyncSpecification && (\n                            <LeftMenuItem\n                                text={(\n                                    <FormattedMessage\n                                        id='Apis.Details.index.definition'\n                                        defaultMessage='Definition'\n                                    />\n                                )}\n                                route='definition'\n                                iconText='Definition'\n                                to={pathPrefix + 'definition'}\n                                open={open}\n                            />\n                        )}\n                        {showComments && (\n\n                            <LeftMenuItem\n                                text={(\n                                    <FormattedMessage\n                                        id='Apis.Details.index.comments'\n                                        defaultMessage='Comments'\n                                    />\n                                )}\n                                route='comments'\n                                iconText='comments'\n                                to={pathPrefix + 'comments'}\n                                open={open}\n                            />\n\n                        )}\n                        {showDocuments && (\n\n                            <LeftMenuItem\n                                text={(\n                                    <FormattedMessage\n                                        id='Apis.Details.index.documentation'\n                                        defaultMessage='Documentation'\n                                    />\n                                )}\n                                route='documents'\n                                iconText='docs'\n                                to={pathPrefix + 'documents'}\n                                open={open}\n                            />\n\n                        )}\n                        {!isAsyncApi && showSdks && (\n\n                            <LeftMenuItem\n                                text={<FormattedMessage id='Apis.Details.index.sdk' defaultMessage='SDKs' />}\n                                route='sdk'\n                                iconText='sdk'\n                                to={pathPrefix + 'sdk'}\n                                open={open}\n                            />\n\n                        )}\n                        {open ? (\n                            <div\n                                onClick={this.handleDrawerClose}\n                                onKeyDown={this.handleDrawerClose}\n                                style={{\n                                    width: 100, paddingLeft: '15px', position: 'absolute', bottom: 0, cursor: 'pointer',\n                                }}\n                            >\n                                <ArrowBackIosIcon fontSize='medium' style={{ color: 'white' }} />\n                            </div>\n                        ) : (\n                            <div\n                                onClick={this.handleDrawerOpen}\n                                onKeyDown={this.handleDrawerOpen}\n                                style={{\n                                    paddingLeft: '15px', position: 'absolute', bottom: 0, cursor: 'pointer',\n                                }}\n                            >\n                                <ArrowForwardIosIcon fontSize='medium' style={{ color: 'white' }} />\n                            </div>\n\n                        )}\n\n                    </nav>\n                )}\n\n                <div\n                    className={classNames(\n                        { [classes.content]: open },\n                        { [classes.contentExpandView]: !open },\n                    )}\n                >\n                    <Breadcrumb />\n                    <div\n                        className={classNames(\n                            { [classes.contentLoader]: position === 'horizontal' },\n                            { [classes.contentLoaderRightMenu]: position === 'vertical-right' },\n                        )}\n                    >\n                        <LoadableSwitch\n                            api={api}\n                            updateSubscriptionData={this.updateSubscriptionData}\n                        />\n                    </div>\n                </div>\n            </ApiContext.Provider>\n        ) : (\n            <div className='apim-dual-ring' />\n        );\n    }\n}\n\nDetails.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    match: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\n\nexport default withSettings(injectIntl(withStyles(styles, { withTheme: true })(Details)));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core';\nimport CommonListing from './Listing/CommonListing';\nimport TagCloudListing from './Listing/TagCloudListing';\nimport Details from './Details/index';\nimport { ResourceNotFound } from '../Base/Errors';\n\n/**\n * Default API Store overview page\n *\n * @returns {React.Component}\n */\nfunction Apis() {\n    return (\n        <Switch>\n            <Route\n                exact\n                path='/api-groups'\n                render={(props) => (\n                    <TagCloudListing {...props} />)}\n            />\n            <Route\n                exact\n                path='/apis'\n                render={(props) => (\n                    <CommonListing {...props} />)}\n            />\n            <Route\n                path='/apis/search'\n                render={(props) => (\n                    <CommonListing {...props} />)}\n            />\n            <Route\n                path='/apis/:apiUuid/'\n                render={(props) => (\n                    <Details {...props} />)}\n            />\n            <Route component={ResourceNotFound} />\n        </Switch>\n    );\n}\n\nexport default withStyles({}, { withTheme: true })(Apis);\n"],"sourceRoot":""}