{"version":3,"sources":["webpack:///./source/src/app/components/Apis/Details/Documents/View.jsx","webpack:///./node_modules/@material-ui/icons/Launch.js","webpack:///./node_modules/@material-ui/icons/Code.js","webpack:///./node_modules/@material-ui/icons/MailOutline.js","webpack:///./node_modules/@material-ui/icons/CloudDownloadRounded.js","webpack:///./node_modules/@material-ui/core/esm/TableContainer/TableContainer.js","webpack:///./source/src/app/components/Apis/Details/Social/EmbedCode.jsx","webpack:///./source/src/app/components/Apis/Details/Social/Social.jsx","webpack:///./source/src/app/components/Apis/Details/TaskState.jsx","webpack:///./source/src/app/components/Apis/Details/GoToTryOut.jsx","webpack:///./source/src/app/components/Apis/Details/SolaceEndpoints.jsx","webpack:///./source/src/app/components/Apis/Details/Environments.jsx","webpack:///./source/src/app/components/Apis/Details/OverviewDocuments.jsx","webpack:///./source/src/app/components/Apis/Details/SourceDownload.jsx","webpack:///./source/src/app/components/Apis/Details/Overview.jsx"],"names":["View","props","classes","doc","apiId","fullScreen","intl","dontShowName","api","useContext","ApiContext","code","setCode","useState","isFileAvailable","setIsFileAvailable","restAPI","API","clean","sanitizeHtml","allowedTags","app","allowedAttributes","useEffect","sourceType","getInlineContentOfDocument","documentId","then","docComplete","text","Object","keys","forEach","fieldName","regex","RegExp","replace","catch","error","getFileForDocument","className","docBadge","type","summary","variant","docSummary","plugins","gfm","escapeHtml","dangerouslySetInnerHTML","__html","displayURL","href","sourceUrl","target","rel","displayURLLink","color","button","disabled","onClick","done","response","fileName","contentDisposition","headers","indexOf","matches","exec","contentType","blob","Blob","data","window","navigator","msSaveBlob","URL","webkitURL","downloadUrl","createObjectURL","aTag","document","createElement","download","location","body","appendChild","click","setTimeout","revokeObjectURL","downloadFile","process","id","defaultMessage","fileAvailability","defaultProps","propTypes","PropTypes","shape","isRequired","string","formatMessage","func","bool","injectIntl","withStyles","theme","root","paddingTop","spacing","paddingBottom","docTitle","fontWeight","fontSize","palette","grey","padding","background","primary","main","position","top","marginTop","getContrastText","display","paddingLeft","marginLeft","_interopRequireDefault","_interopRequireWildcard","defineProperty","exports","value","default","React","_default","d","ref","_props$component","component","Component","other","width","overflowX","name","getModalStyle","left","transform","useStyles","makeStyles","paper","backgroundColor","border","boxShadow","shadows","codeIcon","cursor","custom","infoBar","iconStyle","right","modalStyle","open","setOpen","codeCopied","setCodeCopied","url","searchParams","set","embedCode","Modal","onClose","aria-labelledby","aria-describedby","style","Tooltip","title","placement","onCopy","Icon","socialLink","marginRight","oneFlex","flex","socialLinkWrapper","alignItems","paddingRight","divider","borderRight","height","apiName","apiUrl","encodeURI","useTheme","slack","github","additionalProperties","find","prop","social","showSharing","active","showFacebook","showReddit","showTwitter","showEmbed","showEmail","src","context","alt","TaskState","completed","errors","inProgress","children","completedMessage","inProgressMessage","severity","message","description","Grid","item","xs","icon","CircularProgress","size","thickness","tryoutLabel","whiteSpace","modal","justifyContent","statusBox","outline","asyncButton","minWidth","keyStates","restApi","initialTaskStates","subscribe","prepare","generate","tasksReducer","state","action","status","GoToTryOut","user","AuthManager","getUser","subscribedApplications","applicationsAvailable","updateSubscriptionData","defaultApplications","filter","x","label","defaultApplication","length","tasksStatus","tasksStatusDispatcher","useReducer","showStatus","setShowStatus","useIntl","history","useHistory","isXsOrBelow","useMediaQuery","breakpoints","down","isAsyncAPI","CONSTANTS","API_TYPES","WS","WEBSUB","SSE","ASYNC","isPrototypedAPI","lifeCycleStatus","toLowerCase","taskManager","async","promisedTask","taskResult","console","pushToTryout","push","values","map","tasks","reduce","current","anyErrors","redirectButton","Button","aria-label","advertiseInfo","advertised","throttlingPolicy","tiers","tierName","keyRequest","getKeyManagers","keyType","supportedGrantTypes","callbackUrl","keyManager","responseKeyManagerList","selectedKeyManager","list","responseKeyManagerListDefault","availableGrantTypes","includes","e","Alert","getKeyRequest","applicationId","application","Application","get","getKeys","generateKeys","keyState","log","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","role","Fade","in","Box","bgcolor","borderRadius","p","container","direction","justify","Typography","pr","borderBottom","input","avatar","margin","sectionTitle","SolaceEndpoints","urlCopied","setUrlCopied","protocols","setProtocols","protocolsList","asyncTransportProtocols","JSON","parse","gatewayVendor","gutterBottom","align","endpointURLs","environmentDisplayName","Chip","upperCaseString","protocol","Paper","InputBase","inputProps","endPointUrl","Avatar","sizes","interactive","IconButton","Environments","selectedEndpoint","updateSelectedEndpoint","flexDirection","mr","area-label","for","Select","environmentName","onChange","endpoint","MenuItem","VerticalDivider","URLs","ws","wss","py","arrow","https","http","Divider","light","pt","apiExternalProductionEndpoint","apiExternalSandboxEndpoint","ml","mt","defaultVersionURLs","getDefaultVersionUrl","OverviewDocuments","docs","setDocs","getDocumentsByAPIId","obj","emptyBox","List","listWrapper","index","ListItem","gotoDoc","listItemStyle","key","ListItemIcon","listItemIcon","ListItemText","listItemPrimary","maxWidth","contentAreaWidth","iconClass","secondary","boxBadge","A400","typography","h5","textAlign","subscriptionBox","linkStyle","subscriptionTop","resourceWrapper","overflow","actionPanel","linkToTest","textDecoration","withTheme","buttonIcon","downloadLink","SourceDownload","apiClient","downloadWSDL","getWsdlClient","downloadWSDLForEnvironment","Utils","downloadSwagger","environment","getSwaggerByAPIIdAndEnvironment","getGraphQLSchemaByAPIId","provider","version","linkTitle","textLabel","textValue","textIndent","apiThumb","borderColor","chipRoot","subtitle","cardRoot","moreLink","table","requestCount","requestUnit","launchIcon","originalDevportalUrl","Overview","apiDetailPages","showCredentials","showComments","showDocuments","showThumbnail","showRating","showSwaggerDescriptionOnOverview","descriptionHidden","setDescriptionHidden","isLoading","setIsLoading","notFound","setNotFound","allDocuments","setAllDocuments","overviewDocOverride","setOverviewDocOverride","swaggerDescription","setSwaggerDescription","allPolicies","setAllPolicies","rating","setRating","avgRating","total","count","setSelectedEndpoint","descriptionIsBig","smallDescription","limit","split","slice","join","getSubscriptionPolicies","getAllTiers","filteredList","str","policyName","filteredApiPolicies","t","isApiPolicy","getDocuments","overviewDoc","otherTypeName","Promise","all","swaggerResponse","swagger","info","keyManagers","km","Progress","ResourceNotFound","formattedMessage","paperWithDoc","elevation","sm","xl","ApiThumb","customWidth","customHeight","showInfo","preventDefault","area-lable","businessInformation","businessOwner","trim","getProvider","selectedEnvName","filteredEndpoints","ep","originalDevPortalUrl","flexWrap","tier","Card","CardContent","cardMainTitle","timeUnit","Table","TableHead","TableRow","TableCell","TableBody","scope","Link","to","policy","Comments","isOverview","StarRatingSummary","reviewCount","returnCount","StarRatingBar","isEditable","showSummary","setRatingUpdate","ratingLocal","mb","endpointLabel","tags","tag","clickable","pl","businessOwnerEmail"],"mappings":"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","file":"APIOverview.f8126125ca0837b4fd59.bundle.js","sourcesContent":["/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Icon from '@material-ui/core/Icon';\nimport Button from '@material-ui/core/Button';\nimport ReactMarkdown from 'react-markdown';\nimport gfm from 'remark-gfm';\nimport sanitizeHtml from 'sanitize-html';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport API from 'AppData/api';\nimport { app } from 'Settings';\nimport { ApiContext } from '../ApiContext';\nimport Alert from '../../../Shared/Alert';\n\nconst styles = (theme) => ({\n    root: {\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n    },\n    docTitle: {\n        fontWeight: 100,\n        fontSize: 50,\n        color: theme.palette.grey[500],\n    },\n    docBadge: {\n        padding: theme.spacing(1),\n        background: theme.palette.primary.main,\n        position: 'absolute',\n        top: 0,\n        marginTop: -22,\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n    },\n    button: {\n        padding: theme.spacing(2),\n        marginTop: theme.spacing(2),\n    },\n    displayURL: {\n        padding: theme.spacing(2),\n        marginTop: theme.spacing(2),\n        background: theme.palette.grey[200],\n        color: theme.palette.getContrastText(theme.palette.grey[200]),\n        display: 'flex',\n    },\n    displayURLLink: {\n        paddingLeft: theme.spacing(2),\n    },\n    docSummary: {\n        marginTop: theme.spacing(2),\n        color: theme.palette.text.primary,\n    },\n    fileAvailability: {\n        marginTop: theme.spacing(1),\n        marginLeft: theme.spacing(0.8),\n    },\n});\n/**\n *\n *\n * @param {*} props\n * @returns\n */\nfunction View(props) {\n    const {\n        classes, doc, apiId, fullScreen, intl, dontShowName,\n    } = props;\n    const { api } = useContext(ApiContext);\n    const [code, setCode] = useState('');\n    const [isFileAvailable, setIsFileAvailable] = useState(false);\n    const restAPI = new API();\n\n    const loadContentForDoc = () => {\n        const docPromise = restAPI.getInlineContentOfDocument(apiId, doc.documentId);\n        docPromise\n            .then((docComplete) => {\n                let { text } = docComplete;\n                Object.keys(api).forEach((fieldName) => {\n                    // eslint-disable-next-line no-useless-escape\n                    const regex = new RegExp('\\_\\_\\_' + fieldName + '\\_\\_\\_', 'g');\n                    text = text.replace(regex, api[fieldName]);\n                });\n                setCode(text);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n            });\n    };\n    const clean = sanitizeHtml(code, {\n        allowedTags: (app.sanitizeHtml && app.sanitizeHtml.allowedTags) || false,\n        allowedAttributes: (app.sanitizeHtml && app.sanitizeHtml.allowedAttributes) || false,\n    });\n    useEffect(() => {\n        if (doc.sourceType === 'MARKDOWN' || doc.sourceType === 'INLINE') loadContentForDoc();\n        if (doc.sourceType === 'FILE') {\n            const promisedGetContent = restAPI.getFileForDocument(apiId, doc.documentId);\n            promisedGetContent\n                .then(() => {\n                    setIsFileAvailable(true);\n                })\n                .catch(() => {\n                    setIsFileAvailable(false);\n                });\n        }\n    }, [props.doc]);\n\n    /**\n     * Download the document related file\n     * @param {any} response Response of download file\n     * @param {any} doc Response of download file\n     * @returns {void}\n     */\n    const downloadFile = (response) => {\n        let fileName = '';\n        const contentDisposition = response.headers['content-disposition'];\n\n        if (contentDisposition && contentDisposition.indexOf('attachment') !== -1) {\n            const fileNameReg = /filename[^;=\\n]*=((['\"]).*?\\2|[^;\\n]*)/;\n            const matches = fileNameReg.exec(contentDisposition);\n            if (matches != null && matches[1]) fileName = matches[1].replace(/['\"]/g, '');\n        }\n        const contentType = response.headers['content-type'];\n        const blob = new Blob([response.data], {\n            type: contentType,\n        });\n        if (typeof window.navigator.msSaveBlob !== 'undefined') {\n            window.navigator.msSaveBlob(blob, fileName);\n        } else {\n            const URL = window.URL || window.webkitURL;\n            const downloadUrl = URL.createObjectURL(blob);\n\n            if (fileName) {\n                const aTag = document.createElement('a');\n                if (typeof aTag.download === 'undefined') {\n                    window.location = downloadUrl;\n                } else {\n                    aTag.href = downloadUrl;\n                    aTag.download = fileName;\n                    document.body.appendChild(aTag);\n                    aTag.click();\n                }\n            } else {\n                window.location = downloadUrl;\n            }\n\n            setTimeout(() => {\n                URL.revokeObjectURL(downloadUrl);\n            }, 100);\n        }\n    };\n    const handleDownload = () => {\n        const promisedGetContent = restAPI.getFileForDocument(apiId, doc.documentId);\n        promisedGetContent\n            .then((done) => {\n                downloadFile(done);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Documents.View.error.downloading',\n                        defaultMessage: 'Error downloading the file',\n                    }));\n                }\n            });\n    };\n    return (\n        <>\n            {!fullScreen && <div className={classes.docBadge}>{doc.type}</div>}\n\n            {(!dontShowName && doc.summary) && (\n                <Typography variant='body1' className={classes.docSummary}>\n                    {doc.summary}\n                </Typography>\n            )}\n\n            {doc.sourceType === 'MARKDOWN'\n            && (\n                <ReactMarkdown plugins={[gfm]} escapeHtml>\n                    {code}\n                </ReactMarkdown>\n            )}\n            {doc.sourceType === 'INLINE' && (<div dangerouslySetInnerHTML={{ __html: clean }} />)}\n            {doc.sourceType === 'URL' && (\n                <a\n                    className={classes.displayURL}\n                    href={doc.sourceUrl}\n                    target='_blank'\n                    rel='noopener noreferrer'\n                >\n                    {doc.sourceUrl}\n                    <Icon className={classes.displayURLLink}>open_in_new</Icon>\n                </a>\n            )}\n            {doc.sourceType === 'FILE' && (\n                <Button\n                    variant='contained'\n                    color='default'\n                    className={classes.button}\n                    disabled={!isFileAvailable}\n                    onClick={handleDownload}\n                >\n                    <FormattedMessage id='Apis.Details.Documents.View.btn.download' defaultMessage='Download' />\n\n                    <Icon>arrow_downward</Icon>\n                </Button>\n            )}\n            {doc.sourceType === 'FILE' && !isFileAvailable && (\n                <Typography className={classes.fileAvailability}>\n                    <FormattedMessage\n                        id='Apis.Details.Documents.View.file.availability'\n                        defaultMessage='No file available'\n                    />\n                </Typography>\n            )}\n        </>\n    );\n}\nView.defaultProps = {\n    dontShowName: false,\n};\nView.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    doc: PropTypes.shape({}).isRequired,\n    apiId: PropTypes.string.isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n    fullScreen: PropTypes.bool.isRequired,\n    dontShowName: PropTypes.bool,\n};\n\nexport default injectIntl(withStyles(styles)(View));\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\"\n}), 'Launch');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M9.4 16.6L4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0l4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z\"\n}), 'Code');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 14H4V8l8 5 8-5v10zm-8-7L4 6h16l-8 5z\"\n}), 'MailOutline');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM17 13l-4.65 4.65c-.2.2-.51.2-.71 0L7 13h3V9h4v4h3z\"\n}), 'CloudDownloadRounded');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    width: '100%',\n    overflowX: 'auto'\n  }\n};\nvar TableContainer = /*#__PURE__*/React.forwardRef(function TableContainer(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableContainer.propTypes = {\n  /**\n   * The table itself, normally `<Table />`\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableContainer'\n})(TableContainer);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport CodeIcon from '@material-ui/icons/Code';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Icon from '@material-ui/core/Icon';\n\n/**\n * Position the modal\n * @returns {JSON} css atrributes JSON.\n */\nfunction getModalStyle() {\n    const top = 50;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        position: 'absolute',\n        width: 400,\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n    codeIcon: {\n        cursor: 'pointer',\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n    },\n    code: {\n        background: '#efefef',\n        color: 'cc0000',\n        border: 'solid 1px #ccc',\n        padding: theme.spacing(1),\n    },\n    iconStyle: {\n        position: 'absolute',\n        top: 60,\n        right: 30,\n    },\n}));\n\n/**\n * Adds two numbers together.\n * @param {JSON} props props passed from parent\n * @returns {JSX} code in a modal\n */\nfunction EmbedCode(props) {\n    const { intl } = props;\n    const classes = useStyles();\n    // getModalStyle is not a pure function, we roll the style only on the first render\n    const [modalStyle] = React.useState(getModalStyle);\n    const [open, setOpen] = React.useState(false);\n    const [codeCopied, setCodeCopied] = React.useState(false);\n    const url = new URL(window.location);\n    url.searchParams.set('widget', true);\n\n    const onCopy = () => {\n        setCodeCopied(true);\n        setTimeout(() => setCodeCopied(false), 2000);\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n    const embedCode = '<iframe width=\"450\" height=\"120\" src=\"'\n        + url + '\" frameBorder=\"0\" allowFullScreen title=\"Embed API\" />';\n\n    return (\n        <div>\n            <CodeIcon className={classes.codeIcon} onClick={handleOpen} />\n            <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby='simple-modal-title'\n                aria-describedby='simple-modal-description'\n            >\n                <div style={modalStyle} className={classes.paper}>\n                    <h2 id='simple-modal-title'>\n                        <FormattedMessage\n                            id='Apis.Details.Social.EmbedCode'\n                            defaultMessage='Embed'\n                        />\n                    </h2>\n                    <div className={classes.code}>\n                        <code>{embedCode}</code>\n                    </div>\n                    <Tooltip\n                        title={\n                            codeCopied\n                                ? intl.formatMessage({\n                                    defaultMessage: 'Copied',\n                                    id: 'Apis.Details.Environments.copied',\n                                })\n                                : intl.formatMessage({\n                                    defaultMessage: 'Copy to clipboard',\n                                    id: 'Apis.Details.Environments.copy.to.clipboard',\n                                })\n                        }\n                        placement='right'\n                        className={classes.iconStyle}\n                    >\n                        <CopyToClipboard\n                            text={embedCode}\n                            onCopy={onCopy}\n                        >\n                            <Icon color='secondary'>file_copy</Icon>\n                        </CopyToClipboard>\n                    </Tooltip>\n                </div>\n            </Modal>\n        </div>\n    );\n}\n\nexport default injectIntl(EmbedCode);\n","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { injectIntl } from 'react-intl';\nimport { app } from 'Settings';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport EmbedCode from 'AppComponents/Apis/Details/Social/EmbedCode';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\n\nconst useStyles = makeStyles((theme) => ({\n    socialLink: {\n        display: 'inline-block',\n        '& img': {\n            width: 32,\n            marginRight: theme.spacing(1),\n        },\n    },\n    oneFlex: {\n        flex: 1,\n    },\n    socialLinkWrapper: {\n        marginTop: 16,\n        display: 'flex',\n        alignItems: 'center',\n        paddingRight: theme.spacing(2),\n        '& > div': {\n            display: 'inline-block',\n        },\n    },\n    divider: {\n        display: 'inline-block',\n        borderRight: 'solid 1px #ccc',\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        height: 30,\n    },\n    codeIcon: {\n        cursor: 'pointer',\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n    },\n}));\n\n/**\n * Render the social icons\n * @param {int} num1 The first number.\n * @param {int} num2 The second number.\n * @returns {int} The sum of the two numbers.\n */\nfunction Social() {\n    const classes = useStyles();\n    const { api } = useContext(ApiContext);\n    const { name: apiName } = api;\n    const apiUrl = encodeURI(window.location);\n    const theme = useTheme();\n    const [slack, github] = [\n        api.additionalProperties.find((prop) => prop.name === 'slack_url'),\n        api.additionalProperties.find((prop) => prop.name === 'github_repo'),\n    ];\n    const {\n        custom: {\n            social: {\n                showSharing: {\n                    active, showFacebook, showReddit, showTwitter, showEmbed, showEmail,\n                },\n            },\n        },\n    } = theme;\n    return (\n        <>\n            <div className={classes.oneFlex} />\n            <div className={classes.socialLinkWrapper}>\n                {slack && (\n                    <>\n                        <a\n                            className={classes.socialLink}\n                            id='Slack'\n                            href={slack.value}\n                            target='_blank'\n                            rel='noopener noreferrer'\n                            title='Slack'\n                        >\n                            <img\n                                src={`${app.context}/site/public/images/social/slack.png`}\n                                alt='Slack'\n                            />\n                        </a>\n                    </>\n                )}\n                {github && (\n                    <>\n                        <a\n                            className={classes.socialLink}\n                            id='github'\n                            href={github.value}\n                            target='_blank'\n                            rel='noopener noreferrer'\n                            title='GitHub'\n                        >\n                            <img\n                                src={`${app.context}/site/public/images/social/github.jpg`}\n                                alt='GitHub'\n                            />\n                        </a>\n                    </>\n                )}\n                {active && (slack || github) && (\n                    <div className={classes.divider} />\n                )}\n                {active && showFacebook && (\n                    <a\n                        className={classes.socialLink}\n                        id='facebook'\n                        href={`http://www.facebook.com/sharer.php?u=${apiUrl}`}\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        title='Facebook'\n                    >\n                        <img\n                            src={`${app.context}/site/public/images/social/facebook.png`}\n                            alt='Facebook'\n                        />\n                    </a>\n                )}\n                {/* Twitter */}\n                {active && showTwitter && (\n                    <a\n                        className={classes.socialLink}\n                        id='Twitter'\n                        href={`http://twitter.com/share?url=${apiUrl}&text=${apiName}`}\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        title='Twitter'\n                    >\n                        <img\n                            src={`${app.context}/site/public/images/social/twitter.png`}\n                            alt='Twitter'\n                        />\n                    </a>\n                )}\n                {/* Reddit */}\n                {active && showReddit && (\n                    <a\n                        className={classes.socialLink}\n                        id='Reddit'\n                        href={`http://www.reddit.com/submit?url=${apiUrl}&title=${apiName}`}\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        title='Reddit'\n                    >\n                        <img\n                            src={`${app.context}/site/public/images/social/reddit.png`}\n                            alt='Reddit'\n                        />\n                    </a>\n                )}\n                {active && showEmbed && (\n                    <>\n                        <div className={classes.divider} />\n                        {/* TODO: Fix spelling mistake ~tmkb */}\n                        <EmbedCode />\n                    </>\n                )}\n                {active && showEmail && (\n                    <>\n                        <div className={classes.divider} />\n                        <a href={`mailto:?Subject=${apiName}&body=Link+:+${apiUrl}\"`} className={classes.codeIcon}>\n                            <MailOutlineIcon />\n                        </a>\n                    </>\n                )}\n            </div>\n        </>\n    );\n}\n\nexport default injectIntl(Social);\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Alert from '@material-ui/lab/Alert';\nimport { FormattedMessage } from 'react-intl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n/**\n * @export\n * @param {JSON} props props from parent\n * @return {JSX} rendered output\n */\nexport default function TaskState(props) {\n    const {\n        completed, errors, inProgress, children, completedMessage, inProgressMessage,\n    } = props;\n    let severity;\n    let message = children;\n    if (completed) {\n        severity = 'success';\n        if (completedMessage) {\n            message = completedMessage;\n        }\n    } else if (inProgress) {\n        severity = 'info';\n        if (inProgressMessage) {\n            message = inProgressMessage;\n        }\n    } else {\n        severity = 'waiting';\n    }\n    if (errors) {\n        severity = 'error';\n        if (errors.response) {\n            const { body } = errors.response;\n            message = (\n                <>\n                    <b>\n                        [\n                        {body.code}\n                        ]\n                    </b>\n                    {' '}\n                    :\n                    {body.description}\n                </>\n            );\n        } else {\n            message = (\n                <>\n                    <FormattedMessage\n                        id='Apis.Listing.TaskState.generic.error.prefix'\n                        defaultMessage='Error while'\n                    />\n                    {' '}\n                    {inProgressMessage}\n                </>\n            );\n        }\n    }\n\n    return (\n        <>\n            <Grid item xs={12}>\n                <Alert\n                    icon={inProgress ? <CircularProgress size={20} thickness={2} /> : null}\n                    variant={errors ? 'standard' : 'plain'}\n                    severity={severity}\n                >\n                    {message}\n                </Alert>\n            </Grid>\n        </>\n    );\n}\n","/* eslint-disable prefer-destructuring */\n/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, {\n    useReducer, useContext, useState,\n} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { useHistory } from 'react-router-dom';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport API from 'AppData/api';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport Application from 'AppData/Application';\nimport Alert from 'AppComponents/Shared/Alert';\nimport AuthManager from 'AppData/AuthManager';\nimport CONSTANTS from 'AppData/Constants';\nimport { ApiContext } from './ApiContext';\nimport TaskState from './TaskState';\n\nconst useStyles = makeStyles(() => ({\n    tryoutLabel: {\n        whiteSpace: 'nowrap',\n    },\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    statusBox: {\n        outline: 'none',\n    },\n    asyncButton: {\n        minWidth: 115,\n    },\n}));\n\nconst keyStates = {\n    COMPLETED: 'COMPLETED',\n    APPROVED: 'APPROVED',\n    CREATED: 'CREATED',\n    REJECTED: 'REJECTED',\n};\n\nconst restApi = new API();\nconst initialTaskStates = {\n    subscribe: { inProgress: true, completed: false, errors: false },\n    prepare: { inProgress: false, completed: false, errors: false },\n    generate: { inProgress: false, completed: false, errors: false },\n};\n\nconst tasksReducer = (state, action) => {\n    const { name, status } = action;\n    if (name === 'reset') {\n        return initialTaskStates;\n    }\n    // In the case of a key collision, the right-most (last) object's value wins out\n    return { ...state, [name]: { ...state[name], ...status } };\n};\n/**\n *\n * @returns {JSX} rendered output\n */\nexport default function GoToTryOut() {\n    const user = AuthManager.getUser();\n    const {\n        api, subscribedApplications, applicationsAvailable, updateSubscriptionData,\n    } = useContext(ApiContext);\n    const defaultApplications = applicationsAvailable.filter((x) => x.label === 'DefaultApplication');\n    const defaultApplication = defaultApplications.length > 0 ? defaultApplications[0] : null;\n    const [tasksStatus, tasksStatusDispatcher] = useReducer(tasksReducer, initialTaskStates);\n    const [showStatus, setShowStatus] = useState(false);\n    const classes = useStyles();\n    const intl = useIntl();\n    const history = useHistory();\n    const theme = useTheme();\n    const isXsOrBelow = useMediaQuery(theme.breakpoints.down('xs'));\n    const isAsyncAPI = (api\n        && (api.type === CONSTANTS.API_TYPES.WS\n            || api.type === CONSTANTS.API_TYPES.WEBSUB\n            || api.type === CONSTANTS.API_TYPES.SSE\n            || api.type === CONSTANTS.API_TYPES.ASYNC));\n    const isPrototypedAPI = api.lifeCycleStatus && api.lifeCycleStatus.toLowerCase() === 'prototyped';\n    const getKeyRequest = async () => {\n        const promisedKeyManagers = restApi.getKeyManagers();\n        return promisedKeyManagers\n            .then((response) => {\n                const keyRequest = {\n                    keyType: 'SANDBOX',\n                    supportedGrantTypes: [],\n                    callbackUrl: '',\n                    additionalProperties: {},\n                    keyManager: '',\n                };\n                const responseKeyManagerList = [];\n                response.body.list.map((item) => responseKeyManagerList.push(item));\n\n                // Selecting a key manager from the list of key managers.\n                let selectedKeyManager;\n                if (responseKeyManagerList.length > 0) {\n                    const responseKeyManagerListDefault = responseKeyManagerList.filter((x) => x.name === 'Resident Key Manager');\n                    selectedKeyManager = responseKeyManagerListDefault.length > 0 ? responseKeyManagerListDefault[0]\n                        : responseKeyManagerList[0];\n                }\n\n                // Setting key request\n                try {\n                    keyRequest.keyManager = selectedKeyManager.id;\n                    keyRequest.supportedGrantTypes = selectedKeyManager.availableGrantTypes;\n                    if (selectedKeyManager.availableGrantTypes.includes('implicit')\n                        || selectedKeyManager.availableGrantTypes.includes('authorization_code')) {\n                        keyRequest.callbackUrl = 'http://localhost';\n                    }\n                } catch (e) {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Credentials.Wizard.GenerateKeysStep.error.keymanager',\n                        defaultMessage: 'Error while selecting the key manager',\n                    }));\n                }\n                return keyRequest;\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n            });\n    };\n    const generateKeys = async (keyRequest, applicationId) => {\n        const application = await Application.get(applicationId);\n        const keys = await application.getKeys(keyRequest.keyType);\n        if (keys.size > 0) {\n            return;\n        }\n        application.generateKeys(\n            keyRequest.keyType, keyRequest.supportedGrantTypes,\n            keyRequest.callbackUrl,\n            keyRequest.additionalProperties, keyRequest.keyManager,\n        ).then((response) => {\n            if (response.keyState === keyStates.CREATED || response.keyState === keyStates.REJECTED) {\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.GoToTryOut.error.keymanager',\n                    defaultMessage: 'Key Generation is Blocked.',\n                }));\n            } else {\n                console.log('Keys generated successfully with ID : ' + response);\n            }\n            return response;\n        }).catch((error) => {\n            if (process.env.NODE_ENV !== 'production') {\n                console.log(error);\n            }\n            const { status } = error;\n            if (status === 404) {\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.GoToTryOut.error.404',\n                    defaultMessage: 'Resource not found.',\n                }));\n            }\n        });\n    };\n\n    const taskManager = async (promisedTask, name) => {\n        tasksStatusDispatcher({ name, status: { inProgress: true } });\n        let taskResult;\n        try {\n            taskResult = await promisedTask;\n        } catch (errors) {\n            console.error(errors);\n            tasksStatusDispatcher({ name, status: { errors } });\n        }\n        tasksStatusDispatcher({ name, status: { inProgress: false, completed: true } });\n        return taskResult;\n    };\n\n    const pushToTryout = async () => {\n        await updateSubscriptionData();\n        if (isAsyncAPI) {\n            history.push('/apis/' + api.id + '/definition');\n        } else {\n            history.push('/apis/' + api.id + '/test');\n        }\n    };\n\n    /**\n     *Handle onClick event for `Deploy Sample API` Button\n     * @memberof GoToTryOut\n     */\n    const handleTryOutClick = async () => {\n        let throttlingPolicy = null;\n        if (api.tiers && api.tiers.length > 0) {\n            throttlingPolicy = api.tiers[0].tierName;\n        } else {\n            history.push('/apis/' + api.id + '/test');\n        }\n        setShowStatus(true);\n        // Get the request for key generation using the key managers.\n        const keyRequest = await taskManager(getKeyRequest(), 'prepare');\n        // Generate consumer key and secret\n        await taskManager(generateKeys(keyRequest, defaultApplication.value), 'generate');\n        // Subscribe this API to the default application\n        await taskManager(restApi.subscribe(\n            api.id,\n            defaultApplication.value,\n            throttlingPolicy,\n        ), 'subscribe');\n    };\n\n    Object.values(tasksStatus)\n        .map((tasks) => tasks.completed)\n        .reduce((done, current) => current && done);\n    const anyErrors = Object.values(tasksStatus).map((tasks) => tasks.errors).find((error) => error !== false);\n\n    const redirectButton = isAsyncAPI ? (\n        <Button\n            variant='outlined'\n            color='primary'\n            size='small'\n            classes={{ root: classes.asyncButton, label: classes.tryoutLabel }}\n            onClick={pushToTryout}\n        >\n            <FormattedMessage\n                id='Apis.Details.GoToTryOut.btn.view.definition'\n                defaultMessage='View Definition'\n            />\n        </Button>\n    ) : (\n        <Button\n            variant='contained'\n            color='primary'\n            size='medium'\n            classes={{ label: classes.tryoutLabel }}\n            onClick={pushToTryout}\n            aria-label='Go to Try Out page'\n        >\n            <FormattedMessage\n                id='Apis.Details.GoToTryOut.btn.tryout'\n                defaultMessage='Try Out'\n            />\n        </Button>\n    );\n    if (!defaultApplication\n        || subscribedApplications.length > 0\n        || api.advertiseInfo.advertised\n        || !user\n        || isAsyncAPI\n        || isPrototypedAPI) {\n        return (\n            <>{redirectButton}</>\n\n        );\n    }\n    return (\n        <>\n            <Button\n                onClick={handleTryOutClick}\n                variant='contained'\n                color='primary'\n                size='medium'\n                aria-label='Try Out the API'\n                classes={{ label: classes.tryoutLabel }}\n            >\n                <FormattedMessage\n                    id='Apis.Details.GoToTryOut.btn.tryout'\n                    defaultMessage='Try Out'\n                />\n            </Button>\n\n            <Modal\n                aria-label='Preparing to Try Out the API'\n                className={classes.modal}\n                open={showStatus}\n                // onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n                role='status'\n            >\n                <Fade in={showStatus}>\n                    <Box\n                        bgcolor='background.paper'\n                        borderRadius='borderRadius'\n                        width={isXsOrBelow ? 4 / 5 : 1 / 4}\n                        className={classes.statusBox}\n                        p={2}\n                    >\n                        <Grid\n                            container\n                            direction='row'\n                            justify='center'\n                            alignItems='center'\n                        >\n                            <TaskState\n                                completed={tasksStatus.subscribe.completed}\n                                errors={tasksStatus.subscribe.errors}\n                                inProgress={tasksStatus.subscribe.inProgress}\n                                completedMessage={(\n                                    <FormattedMessage\n                                        id='Apis.Details.GoToTryOut.popup.subscribe.complete.success'\n                                        defaultMessage='API subscribe to DefaultApplication successfully!'\n                                    />\n                                )}\n                                inProgressMessage={(\n                                    <FormattedMessage\n                                        id='Apis.Details.GoToTryOut.popup.subscribe.inprogress'\n                                        defaultMessage='API subscribing to DefaultApplication ...'\n                                    />\n                                )}\n                            >\n                                <FormattedMessage\n                                    id='Apis.Details.GoToTryOut.popup.subscribe.complete'\n                                    defaultMessage='API subscribe to DefaultApplication'\n                                />\n                            </TaskState>\n                            <TaskState\n                                completed={tasksStatus.prepare.completed}\n                                errors={tasksStatus.prepare.errors}\n                                inProgress={tasksStatus.prepare.inProgress}\n                                completedMessage={(\n                                    <FormattedMessage\n                                        id='Apis.Details.GoToTryOut.popup.prepare.complete'\n                                        defaultMessage='Getting ready to generate keys'\n                                    />\n                                )}\n                                inProgressMessage={(\n                                    <FormattedMessage\n                                        id='Apis.Details.GoToTryOut.popup.prepare.inprogress'\n                                        defaultMessage='Gathering information to generate keys ...'\n                                    />\n                                )}\n                            >\n                                <FormattedMessage\n                                    id='Apis.Details.GoToTryOut.popup.prepare.complete'\n                                    defaultMessage='Getting ready to generate keys'\n                                />\n                            </TaskState>\n                            <TaskState\n                                completed={tasksStatus.generate.completed}\n                                errors={tasksStatus.generate.errors}\n                                inProgress={tasksStatus.generate.inProgress}\n                                completedMessage={(\n                                    <FormattedMessage\n                                        id='Apis.Details.GoToTryOut.popup.generate.complete'\n                                        defaultMessage='Consumer key and secret generated successfully!'\n                                    />\n                                )}\n                                inProgressMessage={(\n                                    <FormattedMessage\n                                        id='Apis.Details.GoToTryOut.popup.generate.inprogress'\n                                        defaultMessage='Generating Consumer key and secret ...'\n                                    />\n                                )}\n                            >\n                                <FormattedMessage\n                                    id='Apis.Details.GoToTryOut.popup.key.secret'\n                                    defaultMessage='Consumer key and secret'\n                                />\n                            </TaskState>\n                            {anyErrors ? (\n                                <Grid item xs={12}>\n                                    <Button\n                                        onClick={() => {\n                                            setShowStatus(false);\n                                            tasksStatusDispatcher({ name: 'reset' });\n                                        }}\n                                        variant='outlined'\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Details.GoToTryOut.continue.on.close'\n                                            defaultMessage='Close'\n                                        />\n                                    </Button>\n                                </Grid>\n                            ) : (\n                                <>\n                                    <Grid item xs={12}>\n                                        <Typography variant='caption'>\n                                            <FormattedMessage\n                                                id='Apis.Details.GoToTryOut.popup.final.message'\n                                                defaultMessage={'All set to try out. Use the \"Generate Keys\"'\n                                                + ' button to get an access token while you are on the Try Out page.'}\n                                            />\n                                        </Typography>\n\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Box display='flex' pr={4}>\n                                            <Box flex={1} />\n                                            {redirectButton}\n                                        </Box>\n                                    </Grid>\n                                </>\n                            )}\n                        </Grid>\n                    </Box>\n                </Fade>\n            </Modal>\n\n        </>\n    );\n}\n","/*\n *  Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\nimport React, { useContext, useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport PropTypes from 'prop-types';\nimport Icon from '@material-ui/core/Icon';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport Grid from '@material-ui/core/Grid';\nimport Chip from '@material-ui/core/Chip';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { upperCaseString } from 'AppData/stringFormatter';\nimport { ApiContext } from './ApiContext';\nimport GoToTryOut from './GoToTryOut';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        width: '100%',\n        border: `solid 1px ${theme.palette.grey[300]}`,\n        '& .MuiInputBase-root:before,  .MuiInputBase-root:hover': {\n            borderBottom: 'none !important',\n            color: theme.palette.primary.main,\n        },\n        '& .MuiSelect-select': {\n            color: theme.palette.primary.main,\n            paddingLeft: theme.spacing(),\n        },\n        '& .MuiInputBase-input': {\n            color: theme.palette.primary.main,\n        },\n        '& .material-icons': {\n            fontSize: 16,\n            color: `${theme.palette.grey[700]} !important`,\n        },\n        borderRadius: 10,\n        marginRight: theme.spacing(),\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    avatar: {\n        width: 30,\n        height: 30,\n        background: 'transparent',\n        border: `solid 1px ${theme.palette.grey[300]}`,\n    },\n    iconStyle: {\n        cursor: 'pointer',\n        margin: '-10px 0',\n        padding: '0 0 0 5px',\n        '& .material-icons': {\n            fontSize: 18,\n            color: '#9c9c9c',\n        },\n    },\n\n    sectionTitle: {\n        color: '#424242',\n        fontSize: '0.85rem',\n        marginRight: 20,\n        fontWeight: 400,\n    },\n}));\n\nfunction SolaceEndpoints() {\n    const { api } = useContext(ApiContext);\n    const [urlCopied, setUrlCopied] = useState(false);\n    const [protocols, setProtocols] = useState(null);\n\n    const intl = useIntl();\n    const classes = useStyles();\n\n    const onCopy = () => {\n        setUrlCopied(true);\n        const caller = function () {\n            setUrlCopied(false);\n        };\n        setTimeout(caller, 2000);\n    };\n\n    useEffect(() => {\n        const protocolsList = [];\n        if (api.asyncTransportProtocols) {\n            api.asyncTransportProtocols.map((e) => {\n                protocolsList.push(JSON.parse(e));\n                return null;\n            });\n            setProtocols(protocolsList);\n        }\n    }, [api]);\n\n    return (\n\n        <>\n            {(api.gatewayVendor === 'solace') && (\n                <Grid container spacing={2} xs={12}>\n                    <Grid item spacing={2} xs={2}>\n                        <Typography\n                            variant='subtitle2'\n                            component='label'\n                            gutterBottom\n                            align='left'\n                            className={classes.sectionTitle}\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.protocols.and.endpoints'\n                                defaultMessage='Protocols & Endpoints'\n                            />\n                        </Typography>\n                    </Grid>\n                    <Grid item spacing={2} xs={10}>\n                        <GoToTryOut />\n                    </Grid>\n                    <Grid item spacing={2} xs={12}>\n                        <Grid container spacing={2} xs={12}>\n\n                            <Grid item spacing={2} xs={12}>\n                                {api.endpointURLs.map((e) => (\n                                    <Typography\n                                        component='p'\n                                        variant='subtitle2'\n                                    >\n                                        {e.environmentDisplayName}\n                                    </Typography>\n                                ))}\n                            </Grid>\n                            <Grid item spacing={2} xs={12}>\n                                {protocols && protocols.map((p) => (\n                                    <Grid container spacing={2} xs={12}>\n                                        <Grid item>\n                                            <Typography component='p' variant='body1'>\n                                                <FormattedMessage\n                                                    id='Apis.Details.NewOverview.Endpoints.blank'\n                                                    defaultMessage='-'\n                                                />\n                                            </Typography>\n                                        </Grid>\n                                        <Grid\n                                            item\n                                            style={{\n                                                display: 'flex',\n                                                alignItems: 'center',\n                                                justifyContent: 'center',\n                                            }}\n                                        >\n                                            <Chip\n                                                label={upperCaseString(p.protocol)}\n                                                color='primary'\n                                                style={{\n                                                    width: '70px',\n                                                }}\n                                            />\n                                        </Grid>\n                                        <Grid\n                                            xs={10}\n                                            item\n                                            style={{\n                                                display: 'flex',\n                                                alignItems: 'center',\n                                                justifyContent: 'center',\n                                            }}\n                                        >\n                                            <Paper\n                                                id='gateway-envirounment'\n                                                component='form'\n                                                className={classes.root}\n                                            >\n                                                <InputBase\n                                                    className={classes.input}\n                                                    inputProps={{ 'aria-label': 'api url' }}\n                                                    value={p.endPointUrl}\n                                                />\n                                                <Avatar className={classes.avatar} sizes={30}>\n                                                    <Tooltip\n                                                        title={\n                                                            urlCopied\n                                                                ? intl.formatMessage({\n                                                                    defaultMessage: 'Copied',\n                                                                    id: 'Apis.Details.Environments.copied',\n                                                                })\n                                                                : intl.formatMessage({\n                                                                    defaultMessage: 'Copy to clipboard',\n                                                                    id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                                })\n                                                        }\n                                                        interactive\n                                                        placement='right'\n                                                        className={classes.iconStyle}\n                                                    >\n                                                        <CopyToClipboard\n                                                            text={p.endPointUrl}\n                                                            // text={endpoint.URLs.http}\n                                                            onCopy={() => onCopy('urlCopied')}\n                                                        >\n                                                            <IconButton\n                                                                aria-label='Copy the API URL to clipboard'\n                                                            >\n                                                                <Icon color='secondary'>file_copy</Icon>\n                                                            </IconButton>\n                                                        </CopyToClipboard>\n                                                    </Tooltip>\n                                                </Avatar>\n                                            </Paper>\n                                        </Grid>\n                                    </Grid>\n                                ))}\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            )}\n        </>\n    );\n}\n\nSolaceEndpoints.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default SolaceEndpoints;\n","/* eslint-disable no-unreachable */\n/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useContext, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport VerticalDivider from 'AppComponents/Shared/VerticalDivider';\nimport Avatar from '@material-ui/core/Avatar';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Box from '@material-ui/core/Box';\nimport Icon from '@material-ui/core/Icon';\nimport Divider from '@material-ui/core/Divider';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { ApiContext } from './ApiContext';\nimport GoToTryOut from './GoToTryOut';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        width: '100%',\n        border: `solid 1px ${theme.palette.grey[300]}`,\n        '& .MuiInputBase-root:before,  .MuiInputBase-root:hover': {\n            borderBottom: 'none !important',\n            color: theme.palette.primary.main,\n        },\n        '& .MuiSelect-select': {\n            color: theme.palette.primary.main,\n            paddingLeft: theme.spacing(),\n        },\n        '& .MuiInputBase-input': {\n            color: theme.palette.primary.main,\n        },\n        '& .material-icons': {\n            fontSize: 16,\n            color: `${theme.palette.grey[700]} !important`,\n        },\n        borderRadius: 10,\n        marginRight: theme.spacing(),\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    avatar: {\n        width: 30,\n        height: 30,\n        background: 'transparent',\n        border: `solid 1px ${theme.palette.grey[300]}`,\n    },\n    iconStyle: {\n        cursor: 'pointer',\n        margin: '-10px 0',\n        padding: '0 0 0 5px',\n        '& .material-icons': {\n            fontSize: 18,\n            color: '#9c9c9c',\n        },\n    },\n\n    sectionTitle: {\n        color: '#424242',\n        fontSize: '0.85rem',\n        marginRight: 20,\n        fontWeight: 400,\n    },\n}));\n\n/**\n *  @inheritdoc\n */\nfunction Environments(props) {\n    const { selectedEndpoint, updateSelectedEndpoint } = props;\n    const {\n        api,\n        api: { advertiseInfo },\n    } = useContext(ApiContext);\n    const [urlCopied, setUrlCopied] = useState(false);\n\n    const intl = useIntl();\n    const classes = useStyles();\n\n    const onCopy = () => {\n        setUrlCopied(true);\n        const caller = function () {\n            setUrlCopied(false);\n        };\n        setTimeout(caller, 2000);\n    };\n\n    const getDefaultVersionUrl = () => {\n        const { defaultVersionURLs } = selectedEndpoint;\n        if (defaultVersionURLs\n            && (defaultVersionURLs.https\n                || defaultVersionURLs.http\n                || defaultVersionURLs.ws\n                || defaultVersionURLs.wss)) {\n            return (\n                <>\n                    {`\n            ${intl.formatMessage({\n                    id: 'Apis.Details.Environments.default.url',\n                    defaultMessage: '( Default Version ) ',\n                })}\n            ${(defaultVersionURLs.https || defaultVersionURLs.http || defaultVersionURLs.ws || defaultVersionURLs.wss)}`}\n                    <Tooltip\n                        title={\n                            urlCopied\n                                ? intl.formatMessage({\n                                    defaultMessage: 'Copied',\n                                    id: 'Apis.Details.Environments.copied',\n                                })\n                                : intl.formatMessage({\n                                    defaultMessage: 'Copy to clipboard',\n                                    id: 'Apis.Details.Environments.copy.to.clipboard',\n                                })\n                        }\n                        interactive\n                        placement='right'\n                        className={classes.iconStyle}\n                    >\n                        <CopyToClipboard\n                            text={defaultVersionURLs.https\n                                || defaultVersionURLs.http\n                                || defaultVersionURLs.ws\n                                || defaultVersionURLs.wss}\n                            // text={endpoint.URLs.http}\n                            onCopy={() => onCopy('urlCopied')}\n                        >\n                            <IconButton aria-label='Copy the Default Version URL to clipboard'>\n                                <Icon color='secondary'>file_copy</Icon>\n                            </IconButton>\n                        </CopyToClipboard>\n                    </Tooltip>\n                </>\n            );\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     *  @inheritdoc\n     */\n    // if (!selectedEndpoint) {\n    //     return <Progress />;\n    // }\n    return (\n        <Box display='flex' flexDirection='column' width='100%'>\n            <Box mr={5} display='flex' area-label='API URL details' alignItems='center' width='100%' flexDirection='row'>\n                {selectedEndpoint && (!advertiseInfo || !advertiseInfo.advertised) && (\n                    <>\n                        <Typography\n                            variant='subtitle2'\n                            component='label'\n                            for='gateway-envirounment'\n                            gutterBottom\n                            align='left'\n                            className={classes.sectionTitle}\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.Environments.label.url'\n                                defaultMessage='URL'\n                            />\n                        </Typography>\n                        <Paper id='gateway-envirounment' component='form' className={classes.root}>\n                            {api.endpointURLs.length > 1 && (\n                                <>\n                                    <Select\n                                        value={selectedEndpoint.environmentName}\n                                        onChange={updateSelectedEndpoint}\n                                        aria-label='Select the Gateway Environment'\n                                    >\n                                        {api.endpointURLs.map((endpoint) => (\n                                            <MenuItem value={endpoint.environmentName}>\n                                                {endpoint.environmentDisplayName || endpoint.environmentName}\n                                            </MenuItem>\n                                        ))}\n                                    </Select>\n                                    <VerticalDivider height={api.type === 'GRAPHQL' && (selectedEndpoint.URLs.ws\n                                        || selectedEndpoint.URLs.wss) ? 80 : 30}\n                                    />\n                                </>\n                            )}\n                            <Box display='flex' flexDirection='column' width='100%'>\n                                <Box py={0.5} display='flex' alignItems='center' width='100%' flexDirection='row'>\n                                    <Tooltip\n                                        title={(\n                                            <Typography color='inherit'>\n                                                {(api.type === 'GRAPHQL')\n                                                    ? intl.formatMessage({\n                                                        defaultMessage: 'Gateway HTTP URL for GraphQL Queries and Mutations',\n                                                        id: 'Apis.Details.Environments.GraphQL.HTTP.Gateway.URL',\n                                                    })\n                                                    : intl.formatMessage({\n                                                        defaultMessage: 'Gateway URL',\n                                                        id: 'Apis.Details.Environments.Gateway.URL',\n                                                    })}\n                                            </Typography>\n                                        )}\n                                        placement='left-start'\n                                        arrow\n                                    >\n                                        <InputBase\n                                            className={classes.input}\n                                            inputProps={{ 'aria-label': 'api url' }}\n                                            value={selectedEndpoint.URLs.https\n                                            || selectedEndpoint.URLs.http\n                                            || selectedEndpoint.URLs.wss\n                                            || selectedEndpoint.URLs.ws}\n                                        />\n                                    </Tooltip>\n                                    <Avatar className={classes.avatar} sizes={30}>\n                                        <Tooltip\n                                            title={\n                                                urlCopied\n                                                    ? intl.formatMessage({\n                                                        defaultMessage: 'Copied',\n                                                        id: 'Apis.Details.Environments.copied',\n                                                    })\n                                                    : intl.formatMessage({\n                                                        defaultMessage: 'Copy to clipboard',\n                                                        id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                    })\n                                            }\n                                            interactive\n                                            placement='right'\n                                            className={classes.iconStyle}\n                                        >\n                                            <CopyToClipboard\n                                                text={selectedEndpoint.URLs.https\n                                            || selectedEndpoint.URLs.http\n                                            || selectedEndpoint.URLs.wss\n                                            || selectedEndpoint.URLs.ws}\n                                                // text={endpoint.URLs.http}\n                                                onCopy={() => onCopy('urlCopied')}\n                                            >\n                                                <IconButton aria-label='Copy the API URL to clipboard'>\n                                                    <Icon color='secondary'>file_copy</Icon>\n                                                </IconButton>\n                                            </CopyToClipboard>\n                                        </Tooltip>\n                                    </Avatar>\n                                </Box>\n                                {api.type === 'GRAPHQL' && (selectedEndpoint.URLs.ws || selectedEndpoint.URLs.wss)\n                            && (\n                                <>\n                                    <Divider light />\n                                    <Box pt={0.5} display='flex' alignItems='center' width='100%' flexDirection='row'>\n                                        <>\n                                            <Tooltip\n                                                title={(\n                                                    <Typography color='inherit'>\n                                                        {intl.formatMessage({\n                                                            defaultMessage: 'Gateway Websocket URL for GraphQL Subscriptions',\n                                                            id: 'Apis.Details.Environments.GraphQL.WS.Gateway.URL',\n                                                        })}\n                                                    </Typography>\n                                                )}\n                                                placement='left-start'\n                                                arrow\n                                            >\n                                                <InputBase\n                                                    className={classes.input}\n                                                    inputProps={{ 'aria-label': 'api url' }}\n                                                    value={selectedEndpoint.URLs.wss\n                                                    || selectedEndpoint.URLs.ws}\n                                                />\n                                            </Tooltip>\n                                            <Avatar className={classes.avatar} sizes={30}>\n                                                <Tooltip\n                                                    title={urlCopied\n                                                        ? intl.formatMessage({\n                                                            defaultMessage: 'Copied',\n                                                            id: 'Apis.Details.Environments.copied',\n                                                        })\n                                                        : intl.formatMessage({\n                                                            defaultMessage: 'Copy to clipboard',\n                                                            id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                        })}\n                                                    interactive\n                                                    placement='right'\n                                                    className={classes.iconStyle}\n                                                >\n                                                    <CopyToClipboard\n                                                        text={selectedEndpoint.URLs.wss\n                                                            || selectedEndpoint.URLs.ws}\n                                                        onCopy={() => onCopy('urlCopied')}\n                                                    >\n                                                        <IconButton aria-label='Copy the API URL to clipboard'>\n                                                            <Icon color='secondary'>file_copy</Icon>\n                                                        </IconButton>\n                                                    </CopyToClipboard>\n                                                </Tooltip>\n                                            </Avatar>\n                                        </>\n                                    </Box>\n\n                                </>\n                            )}\n                            </Box>\n                        </Paper>\n                    </>\n                )}\n                {advertiseInfo && advertiseInfo.advertised && (advertiseInfo.apiExternalProductionEndpoint\n                    || advertiseInfo.apiExternalSandboxEndpoint) && (\n                    <>\n                        <Typography\n                            variant='subtitle2'\n                            component='label'\n                            for='external-endpoint-url'\n                            gutterBottom\n                            align='left'\n                            className={classes.sectionTitle}\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.Environments.externalEndpoint.label.url'\n                                defaultMessage='URL'\n                            />\n                        </Typography>\n                        <Paper id='external-endpoint-url' component='form' className={classes.root}>\n                            <Box display='flex' flexDirection='column' width='100%'>\n                                <Box py={0.5} display='flex' alignItems='center' width='100%' flexDirection='row'>\n                                    <Tooltip\n                                        title={(\n                                            <Typography color='inherit'>\n                                                {intl.formatMessage({\n                                                    defaultMessage: 'External Production Endpoint',\n                                                    id: 'Apis.Details.Environments.apiExternalProductionEndpoint',\n                                                })}\n                                            </Typography>\n                                        )}\n                                        placement='left-start'\n                                        arrow\n                                    >\n                                        <InputBase\n                                            className={classes.input}\n                                            inputProps={{ 'aria-label': 'api url' }}\n                                            value={advertiseInfo.apiExternalProductionEndpoint}\n                                        />\n                                    </Tooltip>\n                                    <Avatar className={classes.avatar} sizes={30}>\n                                        <Tooltip\n                                            title={\n                                                urlCopied\n                                                    ? intl.formatMessage({\n                                                        defaultMessage: 'Copied',\n                                                        id: 'Apis.Details.Environments.copied',\n                                                    })\n                                                    : intl.formatMessage({\n                                                        defaultMessage: 'Copy to clipboard',\n                                                        id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                    })\n                                            }\n                                            interactive\n                                            placement='right'\n                                            className={classes.iconStyle}\n                                        >\n                                            <CopyToClipboard\n                                                text={advertiseInfo.apiExternalProductionEndpoint}\n                                                // text={endpoint.URLs.http}\n                                                onCopy={() => onCopy('urlCopied')}\n                                            >\n                                                <IconButton aria-label='Copy the API URL to clipboard'>\n                                                    <Icon color='secondary'>file_copy</Icon>\n                                                </IconButton>\n                                            </CopyToClipboard>\n                                        </Tooltip>\n                                    </Avatar>\n                                </Box>\n                                {advertiseInfo.apiExternalSandboxEndpoint && (\n                                    <>\n                                        <Divider light />\n                                        <Box pt={0.5} display='flex' alignItems='center' width='100%' flexDirection='row'>\n                                            <>\n                                                <Tooltip\n                                                    title={(\n                                                        <Typography color='inherit'>\n                                                            {intl.formatMessage({\n                                                                defaultMessage: 'External Sandbox Endpoint',\n                                                                id: 'Apis.Details.Environments.apiExternalSandboxEndpoint',\n                                                            })}\n                                                        </Typography>\n                                                    )}\n                                                    placement='left-start'\n                                                    arrow\n                                                >\n                                                    <InputBase\n                                                        className={classes.input}\n                                                        inputProps={{ 'aria-label': 'api url' }}\n                                                        value={advertiseInfo.apiExternalSandboxEndpoint}\n                                                    />\n                                                </Tooltip>\n                                                <Avatar className={classes.avatar} sizes={30}>\n                                                    <Tooltip\n                                                        title={urlCopied\n                                                            ? intl.formatMessage({\n                                                                defaultMessage: 'Copied',\n                                                                id: 'Apis.Details.Environments.copied',\n                                                            })\n                                                            : intl.formatMessage({\n                                                                defaultMessage: 'Copy to clipboard',\n                                                                id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                            })}\n                                                        interactive\n                                                        placement='right'\n                                                        className={classes.iconStyle}\n                                                    >\n                                                        <CopyToClipboard\n                                                            text={advertiseInfo.apiExternalSandboxEndpoint}\n                                                            onCopy={() => onCopy('urlCopied')}\n                                                        >\n                                                            <IconButton aria-label='Copy the API URL to clipboard'>\n                                                                <Icon color='secondary'>file_copy</Icon>\n                                                            </IconButton>\n                                                        </CopyToClipboard>\n                                                    </Tooltip>\n                                                </Avatar>\n                                            </>\n                                        </Box>\n\n                                    </>\n                                )}\n                            </Box>\n                        </Paper>\n                    </>\n                )}\n                {!selectedEndpoint && (advertiseInfo && advertiseInfo.advertised\n                    && !(advertiseInfo.apiExternalProductionEndpoint || advertiseInfo.apiExternalSandboxEndpoint)) && (\n                    <Typography variant='subtitle2' component='p' gutterBottom align='left' className={classes.sectionTitle}>\n                        <FormattedMessage\n                            id='Apis.Details.Environments.label.noendpoint'\n                            defaultMessage='No endpoints yet.'\n                        />\n                    </Typography>\n                )}\n                <GoToTryOut />\n            </Box>\n            {(!api.advertiseInfo || !api.advertiseInfo.advertised) && (\n                <Box ml={8} alignItems='center' mt={1}>\n                    {selectedEndpoint && (\n                        <Typography variant='caption'>\n                            {getDefaultVersionUrl()}\n                        </Typography>\n                    )}\n                </Box>\n            )}\n        </Box>\n\n    );\n}\nEnvironments.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default Environments;\n","/* eslint-disable react/prop-types */\n/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Icon from '@material-ui/core/Icon';\nimport { withStyles } from '@material-ui/core/styles';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\n\n/**\n * Add two numbers.\n * @param {JSON} theme The second number.\n * @returns {JSON} The theme object.\n */\nconst styles = (theme) => ({\n    root: {\n        padding: theme.spacing(3),\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    iconClass: {\n        marginRight: 10,\n        color: theme.palette.secondary.main,\n    },\n    boxBadge: {\n        background: theme.palette.grey.A400,\n        color: theme.palette.getContrastText(theme.palette.grey.A400),\n        fontSize: theme.typography.h5.fontSize,\n        padding: theme.spacing(1),\n        width: 30,\n        height: 30,\n        marginRight: 20,\n        textAlign: 'center',\n    },\n    subscriptionBox: {\n        paddingLeft: theme.spacing(2),\n    },\n    linkStyle: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n        fontSize: theme.typography.fontSize,\n    },\n    subscriptionTop: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    resourceWrapper: {\n        height: 192,\n        overflow: 'auto',\n    },\n    actionPanel: {\n        justifyContent: 'flex-start',\n    },\n    linkToTest: {\n        textDecoration: 'none',\n    },\n    emptyBox: {\n        background: '#ffffff55',\n        color: '#444',\n        border: 'solid 1px #fff',\n        padding: theme.spacing(2),\n        marginTop: 50,\n    },\n    listWrapper: {\n        padding: 0,\n        margin: 0,\n        width: '100%',\n    },\n    listItemStyle: {\n        padding: 0,\n        margin: 0,\n    },\n    listItemIcon: {\n        minWidth: 30,\n        color: '#BBBEBC66',\n    },\n    listItemPrimary: {\n        fontSize: '14px',\n    },\n});\n\n/**\n * Add two numbers.\n * @param {number} props The second number.\n * @returns {JSX} jsx.\n */\nfunction OverviewDocuments(props) {\n    const [docs, setDocs] = useState([]);\n    const intl = useIntl();\n    const { apiId } = props;\n    const history = useHistory();\n    useEffect(() => {\n        const restApi = new API();\n        const promisedApi = restApi.getDocumentsByAPIId(apiId);\n        promisedApi\n            .then((response) => {\n                if (response.obj.list.length > 0) {\n                    // Rearanging the response to group them by the sourceType property.\n                    setDocs(response.obj.list);\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Overview.documents.error.occurred',\n                        defaultMessage: 'Error occurred',\n                    }));\n                }\n            });\n    }, []);\n\n    const gotoDoc = (documentId) => {\n        history.push('/apis/' + apiId + '/documents/' + documentId);\n    };\n    /**\n     *\n     *\n     * @returns\n     * @memberof Overview\n     */\n\n    const { classes } = props;\n    if (docs.length === 0) {\n        return (\n            <Grid container className={classes.root} spacing={2}>\n                <Grid item xs={12}>\n                    <div className={classes.emptyBox}>\n                        <Typography variant='body2'>\n                            <FormattedMessage\n                                id='Apis.Details.Overview.documents.no.content'\n                                defaultMessage='No Documents Available'\n                            />\n                        </Typography>\n                    </div>\n                </Grid>\n            </Grid>\n        );\n    }\n\n    return (\n        docs.length > 0 && (\n            <List\n                component='nav'\n                aria-label='Available document list'\n                className={classes.listWrapper}\n            >\n                {docs.map((doc, index) => (\n                    index <= 1\n                    && (\n                        <ListItem button onClick={() => gotoDoc(doc.documentId)} className={classes.listItemStyle} key={doc.name}>\n                            <ListItemIcon classes={{ root: classes.listItemIcon }}>\n                                <Icon>insert_drive_file</Icon>\n                            </ListItemIcon>\n                            <ListItemText\n                                primary={doc.name}\n                                // secondary={truncateString(100, doc.summary)}\n                                classes={{ primary: classes.listItemPrimary }}\n                            />\n                        </ListItem>\n                    )\n                ))}\n            </List>\n        )\n    );\n}\n\nOverviewDocuments.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(OverviewDocuments);\n","/* eslint-disable no-unreachable */\n/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext } from 'react';\nimport { Link as MUILink } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CloudDownloadRounded from '@material-ui/icons/CloudDownloadRounded';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport API from 'AppData/api';\nimport Utils from 'AppData/Utils';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { ApiContext } from './ApiContext';\n\nconst useStyles = makeStyles((theme) => ({\n    iconStyle: {\n        cursor: 'pointer',\n        margin: '-10px 0',\n        padding: '0 0 0 5px',\n        '& .material-icons': {\n            fontSize: 18,\n            color: theme.palette.secondary.main,\n        },\n    },\n    buttonIcon: {\n        marginRight: 10,\n    },\n    downloadLink: {\n        fontSize: 14,\n        color: theme.palette.primary.main,\n        display: 'flex',\n    },\n}));\n\n/**\n * Renders the download links.\n * @returns {JSX} rendered output\n */\nfunction SourceDownload(props) {\n    const { selectedEndpoint } = props;\n    const { api } = useContext(ApiContext);\n    const apiClient = new API();\n    const classes = useStyles();\n    const intl = useIntl();\n\n    /**\n     * Downloads the WSDL of the api for the provided environment\n     *\n     * @param {string} apiId uuid of the API\n     * @param {string} environmentName name of the environment\n     */\n    const downloadWSDL = (apiId, environmentName) => {\n        const wsdlClient = apiClient.getWsdlClient();\n        const promisedGet = wsdlClient.downloadWSDLForEnvironment(apiId, environmentName);\n        promisedGet\n            .then((done) => {\n                Utils.downloadFile(done);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Environments.download.wsdl.error',\n                        defaultMessage: 'Error downloading the WSDL',\n                    }));\n                }\n            });\n    };\n\n    const downloadGraphQLSchema = () => {\n        const newAPI = new API();\n        const promisedGraphQL = newAPI.getGraphQLSchemaByAPIId(api.id);\n        promisedGraphQL.then((response) => {\n            const fileName = api.provider + '-' + api.name + '-' + api.version + '.graphql';\n            Utils.downloadFile(response, fileName);\n        })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Environments.download.graphql.error',\n                        defaultMessage: 'Error downloading the GraphQL Schema',\n                    }));\n                }\n            });\n    };\n\n    /**\n     * Downloads the swagger of the api for the provided environment\n     *\n     * @param {string} apiId uuid of the API\n     * @param {string} environment name of the environment\n     */\n    const downloadSwagger = (apiId, environment) => {\n        const promiseSwagger = apiClient.getSwaggerByAPIIdAndEnvironment(apiId, environment);\n        promiseSwagger\n            .then((done) => {\n                Utils.downloadFile(done);\n            })\n            .catch((error) => {\n                console.log(error);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Environments.download.swagger.error',\n                    defaultMessage: 'Error downloading the Swagger',\n                }));\n            });\n    };\n    if (\n        api.type === 'SOAP') {\n        return (\n            <Tooltip\n                title={(\n                    <FormattedMessage\n                        id='Apis.Details.Environments.download.wsdl'\n                        defaultMessage='WSDL'\n                    />\n                )}\n                placement='right'\n                className={classes.iconStyle}\n            >\n                <MUILink\n                    onClick={() => downloadWSDL(api.id, selectedEndpoint.environmentName)}\n                    className={classes.downloadLink}\n                >\n                    <CloudDownloadRounded className={classes.buttonIcon} />\n                    <FormattedMessage\n                        id='Apis.Details.Environments.download.wsdl.text'\n                        defaultMessage='Download WSDL'\n                    />\n                </MUILink>\n            </Tooltip>\n        );\n    }\n    if (api.type === 'HTTP' || api.type === 'SOAPTOREST') {\n        return (\n            <Tooltip\n                title={(\n                    <FormattedMessage\n                        id='Apis.Details.Environments.download.swagger'\n                        defaultMessage='Swagger'\n                    />\n                )}\n                placement='right'\n                className={classes.iconStyle}\n            >\n                <MUILink\n                    href='#'\n                    onClick={() => downloadSwagger(api.id, selectedEndpoint.environmentName)}\n                    className={classes.downloadLink}\n                >\n                    <CloudDownloadRounded className={classes.buttonIcon} />\n                    <FormattedMessage\n                        id='Apis.Details.Environments.download.swagger.text'\n                        defaultMessage='Download Swagger'\n                    />\n                </MUILink>\n            </Tooltip>\n        );\n    }\n    if (api.type === 'GRAPHQL') {\n        return (\n            <Tooltip\n                title={(\n                    <FormattedMessage\n                        id='Apis.Details.Environments.download.graphQL'\n                        defaultMessage='GraphQL'\n                    />\n                )}\n                placement='right'\n                className={classes.iconStyle}\n            >\n                <MUILink\n                    href='#'\n                    onClick={() => downloadGraphQLSchema()}\n                    className={classes.downloadLink}\n                >\n                    <CloudDownloadRounded className={classes.buttonIcon} />\n                    <FormattedMessage\n                        id='Apis.Details.Environments.download.graphql.text'\n                        defaultMessage='Download GraphQL'\n                    />\n                </MUILink>\n            </Tooltip>\n        );\n    }\n}\n\nexport default SourceDownload;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useContext, useState, useEffect } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { Link as MUILink } from '@material-ui/core';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport VerticalDivider from 'AppComponents/Shared/VerticalDivider';\nimport Box from '@material-ui/core/Box';\nimport Chip from '@material-ui/core/Chip';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport CardContent from '@material-ui/core/CardContent';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport ReactMarkdown from 'react-markdown';\nimport gfm from 'remark-gfm';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport ApiThumb from 'AppComponents/Apis/Listing/ApiThumb';\nimport StarRatingBar from 'AppComponents/Apis/Listing/StarRatingBar';\nimport StarRatingSummary from 'AppComponents/Apis/Details/StarRatingSummary';\nimport Social from 'AppComponents/Apis/Details/Social/Social';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\nimport AuthManager from 'AppData/AuthManager';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Progress from 'AppComponents/Shared/Progress';\nimport API from 'AppData/api';\nimport View from 'AppComponents/Apis/Details/Documents/View';\nimport SolaceEndpoints from './SolaceEndpoints';\nimport Environments from './Environments';\nimport Comments from './Comments/Comments';\nimport OverviewDocuments from './OverviewDocuments';\nimport SourceDownload from './SourceDownload';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        height: '100vh',\n        paddingLeft: theme.spacing(2),\n        paddingTop: theme.spacing(2),\n    },\n    linkTitle: {\n        color: theme.palette.grey[800],\n    },\n    description: {\n        color: theme.palette.grey[700],\n    },\n    textLabel: {\n        fontWeight: 400,\n        color: theme.palette.grey[800],\n    },\n    textValue: {\n        textIndent: theme.spacing(1),\n    },\n    apiThumb: {\n        padding: theme.spacing(),\n        border: 'solid 1px',\n        borderColor: theme.palette.grey[800],\n    },\n    chipRoot: {\n        cursor: 'pointer',\n        marginRight: theme.spacing(),\n    },\n    subtitle: {\n        color: theme.palette.grey[800],\n    },\n    cardRoot: {\n        width: 150,\n        height: 150,\n        marginRight: theme.spacing(),\n        marginTop: theme.spacing(2),\n    },\n    sectionTitle: {\n        color: theme.palette.grey[800],\n        fontSize: '0.95rem',\n        fontWeight: 400,\n    },\n    moreLink: {\n        fontSize: '14px',\n    },\n    table: {\n        '& th': {\n            fontWeight: 400,\n        },\n    },\n    requestCount: {\n        fontSize: 22,\n    },\n    requestUnit: {\n        fontSize: 13,\n    },\n    launchIcon: {\n        paddingLeft: theme.spacing(1),\n    },\n    originalDevportalUrl: {\n        marginTop: theme.spacing(4),\n    },\n}));\n/**\n * @returns {JSX} overview section\n */\nfunction Overview() {\n    const theme = useTheme();\n\n    const {\n        custom: {\n            apiDetailPages: {\n                showCredentials,\n                showComments,\n                showDocuments,\n            },\n            infoBar: { showThumbnail },\n            social: { showRating },\n            showSwaggerDescriptionOnOverview,\n        },\n    } = theme;\n    const intl = useIntl();\n    const {\n        api,\n        api: { advertiseInfo },\n        subscribedApplications,\n    } = useContext(ApiContext);\n    const [descriptionHidden, setDescriptionHidden] = useState(true);\n    const [isLoading, setIsLoading] = useState(false);\n    const [notFound, setNotFound] = useState(false);\n    const [allDocuments, setAllDocuments] = useState(null);\n    const [overviewDocOverride, setOverviewDocOverride] = useState(null);\n    const [swaggerDescription, setSwaggerDescription] = useState(null);\n    const [allPolicies, setAllPolicies] = useState(null);\n    const [rating, setRating] = useState({\n        avgRating: 0,\n        total: 0,\n        count: 0,\n    });\n    const [selectedEndpoint, setSelectedEndpoint] = useState((api.endpointURLs && api.endpointURLs.length > 0)\n        ? api.endpointURLs[0]\n        : null);\n    const classes = useStyles();\n    // Truncating the description\n    let descriptionIsBig = false;\n    let smallDescription = '';\n    if (api.description) {\n        const limit = 40;\n        if (api.description.split(' ').length > limit) {\n            const newContent = api.description.split(' ').slice(0, limit);\n            smallDescription = newContent.join(' ') + '...';\n            descriptionIsBig = true;\n        }\n    }\n\n    const isApiPolicy = (policyName) => {\n        const filteredApiPolicies = api.tiers.filter((t) => t.tierName === policyName);\n        return filteredApiPolicies && filteredApiPolicies.length > 0;\n    };\n\n    const updateSelectedEndpoint = (e) => {\n        const selectedEnvName = e.target.value;\n        const filteredEndpoints = api.endpointURLs.filter((ep) => ep.environmentName === selectedEnvName);\n        if (filteredEndpoints && filteredEndpoints.length > 0) {\n            setSelectedEndpoint(filteredEndpoints[0]);\n        } else {\n            Alert.error(intl.formatMessage({\n                id: 'Apis.Details.Overview.select.env.error',\n                defaultMessage: 'Error Selecting Environment',\n            }));\n        }\n    };\n\n    const getSubscriptionPolicies = () => {\n        const restApi = new API();\n        return restApi.getAllTiers('subscription')\n            .then((response) => {\n                try {\n                    // Filter policies base on async or not.\n                    const filteredList = response.body.list.filter((str) => isApiPolicy(str.name));\n                    setAllPolicies(filteredList);\n                } catch (e) {\n                    console.log(e);\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Overview.error.occurred',\n                        defaultMessage: 'Error occurred',\n                    }));\n                }\n            }).catch((error) => {\n                console.log(error);\n                const { status } = error;\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Overview.error.occurred.subs',\n                    defaultMessage: 'Error occurred when fetching subscription policies',\n                }));\n                if (status === 404) {\n                    setNotFound(true);\n                }\n                setAllDocuments([]);\n                setIsLoading(false);\n            });\n    };\n\n    const getDocuments = () => {\n        const restApi = new API();\n        return restApi.getDocumentsByAPIId(api.id)\n            .then((response) => {\n                const overviewDoc = response.body.list.filter((item) => item.otherTypeName === '_overview');\n                if (overviewDoc.length > 0) {\n                    // We can override the UI with this content\n                    setOverviewDocOverride(overviewDoc[0]); // Only one doc we can render\n                }\n                setAllDocuments(response.body.list);\n            })\n            .catch((error) => {\n                console.log(error);\n                const { status } = error;\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Overview.error.occurred.docs',\n                    defaultMessage: 'Error occurred when fetching documents',\n                }));\n                if (status === 404) {\n                    setNotFound(true);\n                }\n                setAllDocuments([]);\n                setIsLoading(false);\n            });\n    };\n    useEffect(() => {\n        setIsLoading(true);\n        const { endpointURLs } = api;\n        if (endpointURLs && endpointURLs.length > 0) {\n            setSelectedEndpoint(endpointURLs[0]);\n        }\n        Promise.all([getDocuments(), getSubscriptionPolicies()])\n            .then(() => {\n                setIsLoading(false);\n            });\n    }, [api]);\n    useEffect(() => {\n        const restApi = new API();\n        if (showSwaggerDescriptionOnOverview) {\n            restApi.getSwaggerByAPIIdAndEnvironment(api.id, selectedEndpoint.environmentName)\n                .then((swaggerResponse) => {\n                    const swagger = swaggerResponse.obj;\n                    if (swagger && swagger.info) {\n                        setSwaggerDescription(swagger.info.description);\n                    } else {\n                        setSwaggerDescription('');\n                    }\n                })\n                .catch((error) => {\n                    console.log(error);\n                    setSwaggerDescription('');\n                });\n        } else {\n            setIsLoading(true);\n            Promise.all([getDocuments(), getSubscriptionPolicies()])\n                .then(() => {\n                    setIsLoading(false);\n                });\n        }\n    }, []);\n\n    /**\n     * @param {event} e click event\n     */\n    const collapseAllDescription = (e) => {\n        e.preventDefault();\n        setDescriptionHidden(!descriptionHidden);\n    };\n\n    /**\n     * @returns {string} provider\n     */\n    const getProvider = () => {\n        let { provider } = api;\n        if (\n            api.businessInformation\n            && api.businessInformation.businessOwner\n            && api.businessInformation.businessOwner.trim() !== ''\n        ) {\n            provider = api.businessInformation.businessOwner;\n        }\n        return provider;\n    };\n\n    /**\n     * @param {number} ratings rating value\n     */\n    const setRatingUpdate = (ratingLocal) => {\n        if (ratingLocal) {\n            const { avgRating, total, count } = ratingLocal;\n            setRating({ avgRating, total, count });\n        }\n    };\n\n    /**\n     * @param {JSON} api api object\n     * @returns {JSON} key managers\n     */\n    const getKeyManagers = () => {\n        if (api.keyManagers) {\n            if (api.keyManagers[0] === 'all') {\n                return null;\n            } else {\n                return (\n                    api.keyManagers.map((km) => (<Typography variant='body2'>{km}</Typography>))\n                );\n            }\n        } else {\n            return null;\n        }\n    };\n\n    const user = AuthManager.getUser();\n    if (isLoading) {\n        return (<Progress />);\n    }\n    if (showSwaggerDescriptionOnOverview) {\n        if (!swaggerDescription) {\n            return (<Progress />);\n        } else {\n            return (\n                <Box p={3}>\n                    <ReactMarkdown plugins={[gfm]} escapeHtml>\n                        {swaggerDescription}\n                    </ReactMarkdown>\n                </Box>\n            );\n        }\n    }\n    if (!allDocuments) {\n        return (<Progress />);\n    }\n    if (notFound) {\n        return (\n            <ResourceNotFound message={intl.formattedMessage({\n                id: 'Apis.Details.Overview.not.found.message',\n                defaultMessage: 'Resource Not Found',\n            })}\n            />\n        );\n    }\n    if (overviewDocOverride) {\n        return (\n            <>\n                <Paper className={classes.paperWithDoc}>\n                    <View doc={overviewDocOverride} apiId={api.id} fullScreen dontShowName />\n                </Paper>\n            </>\n        );\n    }\n    return (\n        <Paper className={classes.root} elevation={0}>\n            <Grid container>\n                <Grid item sm={8} xl={9}>\n                    <Box display='flex' flexDirection='column'>\n                        <Box display='flex' flexDirection='row'>\n                            {showThumbnail && (\n                                <Box id='overview-thumbnail' width={86} display='flex' alignItems='center'>\n                                    <Box className={classes.apiThumb}>\n                                        <ApiThumb\n                                            api={api}\n                                            customWidth={70}\n                                            customHeight={50}\n                                            showInfo={false}\n                                        />\n                                    </Box>\n                                </Box>\n                            )}\n                            <Box ml={3} mr={2}>\n                                <Typography variant='h4' component='h2'>{api.name}</Typography>\n                                {api.description && (\n                                    <Typography variant='body2' gutterBottom align='left' className={classes.description}>\n                                        {(descriptionIsBig && descriptionHidden) ? smallDescription : api.description}\n                                        {descriptionIsBig && (\n                                            <a aria-label='Show more/less description' onClick={collapseAllDescription} href='#'>\n                                                {descriptionHidden\n                                                    ? intl.formatMessage({\n                                                        defaultMessage: ' more',\n                                                        id: 'Apis.Details.Overview.description.more',\n                                                    })\n                                                    : intl.formatMessage({\n                                                        defaultMessage: ' less',\n                                                        id: 'Apis.Details.Overview.description.less',\n                                                    })}\n                                            </a>\n                                        )}\n                                    </Typography>\n                                )}\n                                <Box display='flex' area-lable='API version and owner details' flexDirection='row'>\n                                    <Typography variant='body2' gutterBottom align='left' className={classes.textLabel}>\n                                        <FormattedMessage\n                                            id='Apis.Details.Overview.list.version'\n                                            defaultMessage='Version '\n                                        />\n                                    </Typography>\n                                    {' '}\n                                    <Typography variant='body2' gutterBottom align='left' className={classes.textValue}>\n                                        {api.version}\n                                    </Typography>\n                                    <VerticalDivider height={20} />\n                                    <Typography variant='body2' gutterBottom align='left' className={classes.textLabel}>\n                                        <FormattedMessage\n                                            id='Apis.Details.Overview.list.provider'\n                                            defaultMessage='By '\n                                        />\n                                    </Typography>\n                                    {' '}\n                                    <Typography variant='body2' gutterBottom align='left' className={classes.textValue}>\n                                        {getProvider()}\n                                    </Typography>\n                                </Box>\n                            </Box>\n                        </Box>\n                        <Box display='flex' flexDirection='row' alignItems='center' mt={2} pr={6}>\n                            {\n                                (api.gatewayVendor === 'solace') ? (\n                                    <SolaceEndpoints />\n                                ) : (\n                                    <Environments updateSelectedEndpoint={updateSelectedEndpoint} selectedEndpoint={selectedEndpoint} />\n                                )\n                            }\n                        </Box>\n                        <Box display='flex' flexDirection='row' alignItems='center' className={classes.originalDevportalUrl} mt={2} pr={6}>\n                            {advertiseInfo && advertiseInfo.advertised && advertiseInfo.originalDevPortalUrl && (\n                                <MUILink\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href={advertiseInfo.originalDevPortalUrl}\n                                    variant='body3'\n                                >\n                                    <FormattedMessage\n                                        id={'Apis.Details.Credentials.Credentials.visit.original.'\n                                        + 'developer.portal'}\n                                        defaultMessage='Visit Original Developer Portal'\n                                    />\n                                    <LaunchIcon className={classes.launchIcon} />\n                                </MUILink>\n                            )}\n                        </Box>\n                        {api.gatewayVendor === 'wso2' && allPolicies && allPolicies.length > 0 && (\n                            <>\n                                <Box mt={6}>\n                                    <Typography variant='subtitle2' component='h3' className={classes.sectionTitle}>\n                                        <FormattedMessage\n                                            id='Apis.Details.Overview.business.plans.title'\n                                            defaultMessage='Business Plans'\n                                        />\n                                    </Typography>\n                                </Box>\n                                <Box\n                                    flexWrap='wrap'\n                                    display='flex'\n                                    flexDirection='row'\n                                    alignItems='center'\n                                    mt={2}\n                                    ml={1}\n                                    textAlign='center'\n                                >\n                                    {allPolicies && allPolicies.map((tier) => (\n                                        <Card className={classes.cardRoot} key={tier.name}>\n                                            <CardContent>\n                                                <Typography className={classes.cardMainTitle} color='textSecondary' gutterBottom>\n                                                    {tier.name}\n                                                </Typography>\n                                                <Box mt={2}>\n                                                    <Typography className={classes.requestCount} color='textSecondary'>\n                                                        {tier.requestCount === 2147483647 ? 'Unlimited' : tier.requestCount}\n                                                    </Typography>\n                                                </Box>\n                                                <Box>\n                                                    <Typography className={classes.requestUnit} color='textSecondary'>\n                                                        Requests/\n                                                        {tier.timeUnit}\n                                                    </Typography>\n                                                </Box>\n                                            </CardContent>\n                                        </Card>\n                                    ))}\n                                </Box>\n                            </>\n                        )}\n                        {(showCredentials && subscribedApplications.length > 0) && (\n                            <>\n                                <Box mt={6}>\n                                    <Typography variant='subtitle2' component='h3' className={classes.sectionTitle}>\n                                        <FormattedMessage\n                                            id='Apis.Details.Overview.subscriptions.title'\n                                            defaultMessage='Subscriptions'\n                                        />\n                                    </Typography>\n                                </Box>\n                                <Box mt={2} ml={1} pr={6}>\n                                    <TableContainer component={Paper}>\n                                        <Table className={classes.table} aria-label='simple table'>\n                                            <TableHead>\n                                                <TableRow>\n                                                    <TableCell>\n                                                        <FormattedMessage\n                                                            id={'Apis.Details.Overview.'\n                                                                + 'api.credentials.subscribed.apps.name'}\n                                                            defaultMessage='Application Name'\n                                                        />\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        <FormattedMessage\n                                                            id={'Apis.Details.Overview.api.'\n                                                                + 'credentials.subscribed.apps.tier'}\n                                                            defaultMessage='Throttling Tier'\n                                                        />\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        <FormattedMessage\n                                                            id={'Apis.Details.Overview.'\n                                                                + 'api.credentials.subscribed.apps.status'}\n                                                            defaultMessage='Application Status'\n                                                        />\n                                                    </TableCell>\n                                                </TableRow>\n                                            </TableHead>\n                                            <TableBody>\n                                                {subscribedApplications.map((app) => (\n                                                    <TableRow key={app.label}>\n                                                        <TableCell component='th' scope='row'>\n                                                            <MUILink component={Link} to={`/applications/${app.value}/overview`}>\n                                                                {app.label}\n                                                            </MUILink>\n                                                        </TableCell>\n                                                        <TableCell>{app.policy}</TableCell>\n                                                        <TableCell>{app.status}</TableCell>\n                                                    </TableRow>\n                                                ))}\n                                            </TableBody>\n                                        </Table>\n                                    </TableContainer>\n                                </Box>\n                            </>\n                        )}\n                        <Box mt={6}>\n                            {showComments && (\n                                <>\n                                    <Typography variant='subtitle2' component='h3' className={classes.sectionTitle}>\n                                        <FormattedMessage\n                                            id='Apis.Details.Overview.comments.title'\n                                            defaultMessage='Comments'\n                                        />\n                                    </Typography>\n                                    <Box pr={6}>\n                                        {api && (\n                                            <Comments apiId={api.id} isOverview />\n                                        )}\n                                    </Box>\n                                </>\n                            )}\n                        </Box>\n                    </Box>\n                </Grid>\n                <Grid item xs={4} xl={3}>\n                    {user && showRating && (\n                        <Box display='flex' flexDirection='row' alignItems='center'>\n                            <StarRatingSummary avgRating={rating.avgRating} reviewCount={rating.total} returnCount={rating.count} />\n                            <VerticalDivider height={30} />\n                            <StarRatingBar\n                                apiId={api.id}\n                                isEditable\n                                showSummary={false}\n                                setRatingUpdate={setRatingUpdate}\n                            />\n                        </Box>\n                    )}\n                    <Box mt={6}>\n                        <Social />\n                    </Box>\n                    <Box mt={6} mb={1}>\n                        <Typography variant='subtitle2' component='h3' className={classes.sectionTitle}>\n                            <FormattedMessage\n                                id='Apis.Details.Overview.tags.title'\n                                defaultMessage='Tags'\n                            />\n                        </Typography>\n                    </Box>\n\n                    <Typography variant='body2' className={classes.endpointLabel}>\n                        {api.tags.map((tag) => (\n                            <Chip\n                                label={tag}\n                                key={tag}\n                                component={Link}\n                                clickable\n                                to={`/apis?offset=0&query=tag:${tag}`}\n                                classes={{ root: classes.chipRoot }}\n                                variant='outlined'\n                                size='small'\n                            />\n                        ))}\n                        {api.tags.length === 0 && (\n                            <FormattedMessage\n                                id='Apis.Details.Overview.list.tags.not'\n                                defaultMessage='Not Tagged'\n                            />\n                        )}\n                    </Typography>\n\n                    {/* Documentation */}\n                    {(showDocuments && allDocuments && allDocuments.length > 0) && (\n                        <>\n                            <Box mt={6}>\n                                <Typography variant='subtitle2' component='h3' className={classes.sectionTitle}>\n                                    <FormattedMessage\n                                        id='Apis.Details.Overview.documents.title'\n                                        defaultMessage='Documents'\n                                    />\n                                </Typography>\n                            </Box>\n                            <Box pr={2} pl={1}>\n                                <OverviewDocuments apiId={api.id} />\n                                {allDocuments.length > 2 && (\n                                    <MUILink component={Link} to={'/apis/' + api.id + '/documents'} className={classes.moreLink}>\n                                        {allDocuments.length - 2}\n                                        {' '}\n                                        <FormattedMessage\n                                            id='Apis.Details.Overview.comments.show.more.more'\n                                            defaultMessage='more'\n                                        />\n                                    </MUILink>\n                                )}\n                            </Box>\n                        </>\n\n                    )}\n                    {api.businessInformation.businessOwnerEmail && (\n                        <>\n                            <Box mt={6}>\n                                <Typography variant='subtitle2' component='h3' className={classes.sectionTitle}>\n                                    <FormattedMessage\n                                        id='Apis.Details.Overview.business.info'\n                                        defaultMessage='Business Info'\n                                    />\n                                </Typography>\n                            </Box>\n                            <Box mt={1}>\n                                <Typography variant='body2'>\n                                    {api.businessInformation.businessOwnerEmail}\n                                </Typography>\n                            </Box>\n                        </>\n                    )}\n                    <Box mt={6}>\n                        <Typography variant='subtitle2' component='h3' className={classes.sectionTitle}>\n                            <FormattedMessage\n                                id='Apis.Details.Overview.source'\n                                defaultMessage='Source'\n                            />\n                        </Typography>\n                    </Box>\n                    {(api.type === 'HTTP' || api.type === 'SOAPTOREST'\n                    || api.type === 'SOAP' || api.type === 'GRAPHQL') && (\n                        <Box mt={2}>\n                            <SourceDownload selectedEndpoint={selectedEndpoint} />\n                        </Box>\n                    )}\n                    {/* Key Managers */}\n                    {getKeyManagers() && (\n                        <>\n                            <Box mt={6}>\n                                <Typography variant='subtitle2' component='h3' className={classes.sectionTitle}>\n                                    <FormattedMessage\n                                        id='Apis.Details.Overview.key.manager'\n                                        defaultMessage='Key Managers'\n                                    />\n                                </Typography>\n                            </Box>\n                            <Box mt={1}>\n                                {getKeyManagers()}\n                            </Box>\n                        </>\n                    )}\n                    {api.additionalProperties && Object.keys(api.additionalProperties).length > 0 && (\n                        <>\n                            <Box mt={6}>\n                                <Typography variant='subtitle2' className={classes.sectionTitle}>\n                                    <FormattedMessage\n                                        id='Apis.Details.Overview.additional.properties'\n                                        defaultMessage='Additonal properties'\n                                    />\n                                </Typography>\n                            </Box>\n                            <Box mt={1} ml={1}>\n                                {api.additionalProperties\n                                    .filter(({ name, display }) => display && !['slack_url', 'github_repo'].includes(name))\n                                    .map(({ name, value }) => {\n                                        return (\n                                            <Typography variant='body2'>\n                                                {name}\n                                                {' '}\n                                                :\n                                                {' '}\n                                                {value}\n                                            </Typography>\n                                        );\n                                    })}\n                            </Box>\n                        </>\n                    )}\n                </Grid>\n            </Grid>\n        </Paper>\n    );\n}\n\nexport default Overview;\n"],"sourceRoot":""}