{"version":3,"sources":["webpack:///./node_modules/mdurl/encode.js","webpack:///./node_modules/uc.micro/categories/P/regex.js","webpack:///./node_modules/mdurl/index.js","webpack:///./node_modules/uc.micro/index.js","webpack:///./node_modules/uc.micro/properties/Any/regex.js","webpack:///./node_modules/uc.micro/categories/Cc/regex.js","webpack:///./node_modules/uc.micro/categories/Z/regex.js","webpack:///./node_modules/linkify-it/index.js","webpack:///./node_modules/mdurl/decode.js","webpack:///./node_modules/mdurl/format.js","webpack:///./node_modules/mdurl/parse.js","webpack:///./node_modules/uc.micro/categories/Cf/regex.js","webpack:///./node_modules/linkify-it/lib/re.js"],"names":["encodeCache","encode","string","exclude","keepEscaped","i","l","code","nextCode","cache","result","defaultChars","ch","String","fromCharCode","test","push","toString","toUpperCase","slice","length","charCodeAt","getEncodeCache","encodeURIComponent","componentChars","module","exports","decode","format","parse","Any","Cc","Cf","P","Z","assign","obj","sources","Array","prototype","call","arguments","forEach","source","Object","keys","key","_class","isFunction","escapeRE","str","replace","defaultOptions","fuzzyLink","fuzzyEmail","fuzzyIP","defaultSchemas","validate","text","pos","self","tail","re","http","RegExp","src_auth","src_host_port_strict","src_path","match","no_http","src_domain","src_domain_root","src_port","src_host_terminator","mailto","src_email_name","src_host_strict","tlds_default","split","compile","__opts__","tlds","__tlds__","untpl","tpl","src_tlds","onCompile","__tlds_replaced__","src_xn","join","email_fuzzy","tpl_email_fuzzy","link_fuzzy","tpl_link_fuzzy","link_no_ip_fuzzy","tpl_link_no_ip_fuzzy","host_fuzzy_test","tpl_host_fuzzy_test","aliases","schemaError","name","val","Error","__compiled__","__schemas__","compiled","link","isRegExp","createValidator","normalize","isString","alias","slist","filter","map","schema_test","src_ZPCc","schema_search","pretest","__index__","__text_cache__","resetScanCache","Match","shift","start","end","__last_index__","this","schema","__schema__","toLowerCase","index","lastIndex","raw","url","createMatch","LinkifyIt","schemas","options","reduce","acc","k","hasOwnProperty","add","definition","set","m","ml","me","len","next","tld_pos","exec","testSchemaAt","search","indexOf","list","keepOld","isArray","concat","sort","el","idx","arr","reverse","decodeCache","getDecodeCache","seq","b1","b2","b3","b4","chr","parseInt","protocol","slashes","auth","hostname","port","pathname","hash","Url","protocolPattern","portPattern","simplePathPattern","unwise","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","hostlessProtocol","slashedProtocol","slashesDenoteHost","lowerProto","hec","rest","trim","simplePath","proto","substr","atSign","hostEnd","lastIndexOf","host","parseHost","ipv6Hostname","hostparts","part","newpart","j","validParts","notHost","bit","unshift","qm","u","opts","src_Any","src_Cc","src_Z","src_P","src_ZCc","src_pseudo_letter","src_ip4","src_host","tpl_host_fuzzy","tpl_host_no_ip_fuzzy","tpl_host_fuzzy_strict","tpl_host_port_fuzzy_strict","tpl_host_port_no_ip_fuzzy_strict"],"mappings":"wFAIA,IAAIA,EAAc,GAsClB,SAASC,EAAOC,EAAQC,EAASC,GAC/B,IAAIC,EAAGC,EAAGC,EAAMC,EAAUC,EACtBC,EAAS,GAcb,IAZuB,iBAAZP,IAETC,EAAeD,EACfA,EAAUF,EAAOU,mBAGQ,IAAhBP,IACTA,GAAc,GAGhBK,EA9CF,SAAwBN,GACtB,IAAIE,EAAGO,EAAIH,EAAQT,EAAYG,GAC/B,GAAIM,EAAS,OAAOA,EAIpB,IAFAA,EAAQT,EAAYG,GAAW,GAE1BE,EAAI,EAAGA,EAAI,IAAKA,IACnBO,EAAKC,OAAOC,aAAaT,GAErB,cAAcU,KAAKH,GAErBH,EAAMO,KAAKJ,GAEXH,EAAMO,KAAK,KAAO,IAAMX,EAAEY,SAAS,IAAIC,eAAeC,OAAO,IAIjE,IAAKd,EAAI,EAAGA,EAAIF,EAAQiB,OAAQf,IAC9BI,EAAMN,EAAQkB,WAAWhB,IAAMF,EAAQE,GAGzC,OAAOI,EAyBCa,CAAenB,GAElBE,EAAI,EAAGC,EAAIJ,EAAOkB,OAAQf,EAAIC,EAAGD,IAGpC,GAFAE,EAAOL,EAAOmB,WAAWhB,GAErBD,GAAwB,KAATG,GAAyBF,EAAI,EAAIC,GAC9C,iBAAiBS,KAAKb,EAAOiB,MAAMd,EAAI,EAAGA,EAAI,IAChDK,GAAUR,EAAOiB,MAAMd,EAAGA,EAAI,GAC9BA,GAAK,OAKT,GAAIE,EAAO,IACTG,GAAUD,EAAMF,QAIlB,GAAIA,GAAQ,OAAUA,GAAQ,MAA9B,CACE,GAAIA,GAAQ,OAAUA,GAAQ,OAAUF,EAAI,EAAIC,IAC9CE,EAAWN,EAAOmB,WAAWhB,EAAI,KACjB,OAAUG,GAAY,MAAQ,CAC5CE,GAAUa,mBAAmBrB,EAAOG,GAAKH,EAAOG,EAAI,IACpDA,IACA,SAGJK,GAAU,iBAIZA,GAAUa,mBAAmBrB,EAAOG,IAGtC,OAAOK,EAGTT,EAAOU,aAAiB,uBACxBV,EAAOuB,eAAiB,YAGxBC,EAAOC,QAAUzB,G,mBCjGjBwB,EAAOC,QAAQ,s2D,kCCGfD,EAAOC,QAAQzB,OAAS,EAAQ,MAChCwB,EAAOC,QAAQC,OAAS,EAAQ,MAChCF,EAAOC,QAAQE,OAAS,EAAQ,MAChCH,EAAOC,QAAQG,MAAS,EAAQ,O,kCCJhCH,EAAQI,IAAM,EAAQ,MACtBJ,EAAQK,GAAM,EAAQ,MACtBL,EAAQM,GAAM,EAAQ,MACtBN,EAAQO,EAAM,EAAQ,MACtBP,EAAQQ,EAAM,EAAQ,O,mBCNtBT,EAAOC,QAAQ,oI,mBCAfD,EAAOC,QAAQ,sB,mBCAfD,EAAOC,QAAQ,4D,kCCQf,SAASS,EAAOC,GACd,IAAIC,EAAUC,MAAMC,UAAUpB,MAAMqB,KAAKC,UAAW,GAUpD,OARAJ,EAAQK,SAAQ,SAAUC,GACnBA,GAELC,OAAOC,KAAKF,GAAQD,SAAQ,SAAUI,GACpCV,EAAIU,GAAOH,EAAOG,SAIfV,EAGT,SAASW,EAAOX,GAAO,OAAOQ,OAAOL,UAAUtB,SAASuB,KAAKJ,GAI7D,SAASY,EAAWZ,GAAO,MAAuB,sBAAhBW,EAAOX,GAGzC,SAASa,EAASC,GAAO,OAAOA,EAAIC,QAAQ,uBAAwB,QAKpE,IAAIC,EAAiB,CACnBC,WAAW,EACXC,YAAY,EACZC,SAAS,GAWX,IAAIC,EAAiB,CACnB,QAAS,CACPC,SAAU,SAAUC,EAAMC,EAAKC,GAC7B,IAAIC,EAAOH,EAAKvC,MAAMwC,GAQtB,OANKC,EAAKE,GAAGC,OAEXH,EAAKE,GAAGC,KAAQ,IAAIC,OAClB,UAAYJ,EAAKE,GAAGG,SAAWL,EAAKE,GAAGI,qBAAuBN,EAAKE,GAAGK,SAAU,MAGhFP,EAAKE,GAAGC,KAAKhD,KAAK8C,GACbA,EAAKO,MAAMR,EAAKE,GAAGC,MAAM,GAAG3C,OAE9B,IAGX,SAAW,QACX,OAAW,QACX,KAAW,CACTqC,SAAU,SAAUC,EAAMC,EAAKC,GAC7B,IAAIC,EAAOH,EAAKvC,MAAMwC,GAkBtB,OAhBKC,EAAKE,GAAGO,UAEXT,EAAKE,GAAGO,QAAW,IAAIL,OACrB,IACAJ,EAAKE,GAAGG,SAGR,sBAAwBL,EAAKE,GAAGQ,WAAa,SAAWV,EAAKE,GAAGS,gBAAkB,IAClFX,EAAKE,GAAGU,SACRZ,EAAKE,GAAGW,oBACRb,EAAKE,GAAGK,SAER,MAIAP,EAAKE,GAAGO,QAAQtD,KAAK8C,GAEnBF,GAAO,GAAuB,MAAlBD,EAAKC,EAAM,IACvBA,GAAO,GAAuB,MAAlBD,EAAKC,EAAM,GADqB,EAEzCE,EAAKO,MAAMR,EAAKE,GAAGO,SAAS,GAAGjD,OAEjC,IAGX,UAAW,CACTqC,SAAU,SAAUC,EAAMC,EAAKC,GAC7B,IAAIC,EAAOH,EAAKvC,MAAMwC,GAOtB,OALKC,EAAKE,GAAGY,SACXd,EAAKE,GAAGY,OAAU,IAAIV,OACpB,IAAMJ,EAAKE,GAAGa,eAAiB,IAAMf,EAAKE,GAAGc,gBAAiB,MAG9DhB,EAAKE,GAAGY,OAAO3D,KAAK8C,GACfA,EAAKO,MAAMR,EAAKE,GAAGY,QAAQ,GAAGtD,OAEhC,KAWTyD,EAAe,8EAA8EC,MAAM,KA8BvG,SAASC,EAAQnB,GAGf,IAAIE,EAAKF,EAAKE,GAAK,EAAQ,KAAR,CAAoBF,EAAKoB,UAGxCC,EAAOrB,EAAKsB,SAAS/D,QAWzB,SAASgE,EAAMC,GAAO,OAAOA,EAAIjC,QAAQ,SAAUW,EAAGuB,UATtDzB,EAAK0B,YAEA1B,EAAK2B,mBACRN,EAAKjE,KA5Ca,2VA8CpBiE,EAAKjE,KAAK8C,EAAG0B,QAEb1B,EAAGuB,SAAWJ,EAAKQ,KAAK,KAIxB3B,EAAG4B,YAAmB1B,OAAOmB,EAAMrB,EAAG6B,iBAAkB,KACxD7B,EAAG8B,WAAmB5B,OAAOmB,EAAMrB,EAAG+B,gBAAiB,KACvD/B,EAAGgC,iBAAmB9B,OAAOmB,EAAMrB,EAAGiC,sBAAuB,KAC7DjC,EAAGkC,gBAAmBhC,OAAOmB,EAAMrB,EAAGmC,qBAAsB,KAM5D,IAAIC,EAAU,GAId,SAASC,EAAYC,EAAMC,GACzB,MAAM,IAAIC,MAAM,+BAAiCF,EAAO,MAAQC,GAHlEzC,EAAK2C,aAAe,GAMpB3D,OAAOC,KAAKe,EAAK4C,aAAa9D,SAAQ,SAAU0D,GAC9C,IAAIC,EAAMzC,EAAK4C,YAAYJ,GAG3B,GAAY,OAARC,EAAJ,CAEA,IAAII,EAAW,CAAEhD,SAAU,KAAMiD,KAAM,MAIvC,GAFA9C,EAAK2C,aAAaH,GAAQK,EAzKkB,oBAAhB1D,EA2KfsD,GAiBX,OA3LN,SAAkBjE,GAAO,MAAuB,oBAAhBW,EAAOX,GA2K7BuE,CAASN,EAAI5C,UAENT,EAAWqD,EAAI5C,UACxBgD,EAAShD,SAAW4C,EAAI5C,SAExB0C,EAAYC,EAAMC,GAJlBI,EAAShD,SAnEjB,SAAyBK,GACvB,OAAO,SAAUJ,EAAMC,GACrB,IAAIE,EAAOH,EAAKvC,MAAMwC,GAEtB,OAAIG,EAAG/C,KAAK8C,GACHA,EAAKO,MAAMN,GAAI,GAAG1C,OAEpB,GA4DiBwF,CAAgBP,EAAI5C,eAOtCT,EAAWqD,EAAIQ,WACjBJ,EAASI,UAAYR,EAAIQ,UACfR,EAAIQ,UAGdV,EAAYC,EAAMC,GAFlBI,EAASI,UAjER,SAAUzC,EAAOR,GACtBA,EAAKiD,UAAUzC,MAxHnB,SAAkBhC,GAAO,MAAuB,oBAAhBW,EAAOX,GAgM/B0E,CAAST,GAKbF,EAAYC,EAAMC,GAJhBH,EAAQlF,KAAKoF,OAWjBF,EAAQxD,SAAQ,SAAUqE,GACnBnD,EAAK2C,aAAa3C,EAAK4C,YAAYO,MAMxCnD,EAAK2C,aAAaQ,GAAOtD,SACvBG,EAAK2C,aAAa3C,EAAK4C,YAAYO,IAAQtD,SAC7CG,EAAK2C,aAAaQ,GAAOF,UACvBjD,EAAK2C,aAAa3C,EAAK4C,YAAYO,IAAQF,cAM/CjD,EAAK2C,aAAa,IAAM,CAAE9C,SAAU,KAAMoD,UArGnC,SAAUzC,EAAOR,GACtBA,EAAKiD,UAAUzC,KAyGjB,IAAI4C,EAAQpE,OAAOC,KAAKe,EAAK2C,cACRU,QAAO,SAAUb,GAEhB,OAAOA,EAAKhF,OAAS,GAAKwC,EAAK2C,aAAaH,MAE7Cc,IAAIjE,GACJwC,KAAK,KAE1B7B,EAAKE,GAAGqD,YAAgBnD,OAAO,oBAA2BF,EAAGsD,SAAW,MAAQJ,EAAQ,IAAK,KAC7FpD,EAAKE,GAAGuD,cAAgBrD,OAAO,oBAA2BF,EAAGsD,SAAW,MAAQJ,EAAQ,IAAK,MAE7FpD,EAAKE,GAAGwD,QAAUtD,OAChB,IAAMJ,EAAKE,GAAGqD,YAAYxE,OAAS,MAAQiB,EAAKE,GAAGkC,gBAAgBrD,OAAS,MAC5E,KAxIJ,SAAwBiB,GACtBA,EAAK2D,WAAa,EAClB3D,EAAK4D,eAAmB,GA6IxBC,CAAe7D,GAQjB,SAAS8D,EAAM9D,EAAM+D,GACnB,IAAIC,EAAQhE,EAAK2D,UACbM,EAAQjE,EAAKkE,eACbpE,EAAQE,EAAK4D,eAAerG,MAAMyG,EAAOC,GAO7CE,KAAKC,OAAYpE,EAAKqE,WAAWC,cAMjCH,KAAKI,MAAYP,EAAQD,EAMzBI,KAAKK,UAAYP,EAAMF,EAMvBI,KAAKM,IAAY3E,EAMjBqE,KAAKrE,KAAYA,EAMjBqE,KAAKO,IAAY5E,EAGnB,SAAS6E,EAAY3E,EAAM+D,GACzB,IAAIvD,EAAQ,IAAIsD,EAAM9D,EAAM+D,GAI5B,OAFA/D,EAAK2C,aAAanC,EAAM4D,QAAQnB,UAAUzC,EAAOR,GAE1CQ,EA0CT,SAASoE,EAAUC,EAASC,GAC1B,KAAMX,gBAAgBS,GACpB,OAAO,IAAIA,EAAUC,EAASC,GAvUlC,IAAsBtG,EA0UfsG,IA1UetG,EA2UDqG,EA1UZ7F,OAAOC,KAAKT,GAAO,IAAIuG,QAAO,SAAUC,EAAKC,GAClD,OAAOD,GAAOxF,EAAe0F,eAAeD,MAC3C,KAyUCH,EAAUD,EACVA,EAAU,KAIdV,KAAK/C,SAAqB7C,EAAO,GAAIiB,EAAgBsF,GAGrDX,KAAKR,WAAsB,EAC3BQ,KAAKD,gBAAsB,EAC3BC,KAAKE,WAAqB,GAC1BF,KAAKP,eAAqB,GAE1BO,KAAKvB,YAAqBrE,EAAO,GAAIqB,EAAgBiF,GACrDV,KAAKxB,aAAqB,GAE1BwB,KAAK7C,SAAqBL,EAC1BkD,KAAKxC,mBAAqB,EAE1BwC,KAAKjE,GAAK,GAEViB,EAAQgD,MAWVS,EAAUjG,UAAUwG,IAAM,SAAaf,EAAQgB,GAG7C,OAFAjB,KAAKvB,YAAYwB,GAAUgB,EAC3BjE,EAAQgD,MACDA,MAUTS,EAAUjG,UAAU0G,IAAM,SAAaP,GAErC,OADAX,KAAK/C,SAAW7C,EAAO4F,KAAK/C,SAAU0D,GAC/BX,MASTS,EAAUjG,UAAUxB,KAAO,SAAc2C,GAKvC,GAHAqE,KAAKP,eAAiB9D,EACtBqE,KAAKR,WAAkB,GAElB7D,EAAKtC,OAAU,OAAO,EAE3B,IAAI8H,EAAGC,EAAIC,EAAIC,EAAK1B,EAAO2B,EAAMxF,EAAIyF,EAGrC,GAAIxB,KAAKjE,GAAGqD,YAAYpG,KAAK2C,GAG3B,KAFAI,EAAKiE,KAAKjE,GAAGuD,eACVe,UAAY,EACgB,QAAvBc,EAAIpF,EAAG0F,KAAK9F,KAElB,GADA2F,EAAMtB,KAAK0B,aAAa/F,EAAMwF,EAAE,GAAIpF,EAAGsE,WAC9B,CACPL,KAAKE,WAAiBiB,EAAE,GACxBnB,KAAKR,UAAiB2B,EAAEf,MAAQe,EAAE,GAAG9H,OACrC2G,KAAKD,eAAiBoB,EAAEf,MAAQe,EAAE,GAAG9H,OAASiI,EAC9C,MA8CN,OAzCItB,KAAK/C,SAAS3B,WAAa0E,KAAKxB,aAAa,WAE/CgD,EAAU7F,EAAKgG,OAAO3B,KAAKjE,GAAGkC,mBACf,IAET+B,KAAKR,UAAY,GAAKgC,EAAUxB,KAAKR,YAC0D,QAA5F4B,EAAKzF,EAAKU,MAAM2D,KAAK/C,SAASzB,QAAUwE,KAAKjE,GAAG8B,WAAamC,KAAKjE,GAAGgC,qBAExE6B,EAAQwB,EAAGhB,MAAQgB,EAAG,GAAG/H,QAErB2G,KAAKR,UAAY,GAAKI,EAAQI,KAAKR,aACrCQ,KAAKE,WAAiB,GACtBF,KAAKR,UAAiBI,EACtBI,KAAKD,eAAiBqB,EAAGhB,MAAQgB,EAAG,GAAG/H,SAO7C2G,KAAK/C,SAAS1B,YAAcyE,KAAKxB,aAAa,YAEvC7C,EAAKiG,QAAQ,MACR,GAGmC,QAA1CP,EAAK1F,EAAKU,MAAM2D,KAAKjE,GAAG4B,gBAE3BiC,EAAQyB,EAAGjB,MAAQiB,EAAG,GAAGhI,OACzBkI,EAAQF,EAAGjB,MAAQiB,EAAG,GAAGhI,QAErB2G,KAAKR,UAAY,GAAKI,EAAQI,KAAKR,WAClCI,IAAUI,KAAKR,WAAa+B,EAAOvB,KAAKD,kBAC3CC,KAAKE,WAAiB,UACtBF,KAAKR,UAAiBI,EACtBI,KAAKD,eAAiBwB,IAMvBvB,KAAKR,WAAa,GAW3BiB,EAAUjG,UAAU+E,QAAU,SAAiB5D,GAC7C,OAAOqE,KAAKjE,GAAGwD,QAAQvG,KAAK2C,IAa9B8E,EAAUjG,UAAUkH,aAAe,SAAsB/F,EAAMsE,EAAQrE,GAErE,OAAKoE,KAAKxB,aAAayB,EAAOE,eAGvBH,KAAKxB,aAAayB,EAAOE,eAAezE,SAASC,EAAMC,EAAKoE,MAF1D,GAsBXS,EAAUjG,UAAU6B,MAAQ,SAAeV,GACzC,IAAIiE,EAAQ,EAAGjH,EAAS,GAGpBqH,KAAKR,WAAa,GAAKQ,KAAKP,iBAAmB9D,IACjDhD,EAAOM,KAAKuH,EAAYR,KAAMJ,IAC9BA,EAAQI,KAAKD,gBAOf,IAHA,IAAIjE,EAAO8D,EAAQjE,EAAKvC,MAAMwG,GAASjE,EAGhCqE,KAAKhH,KAAK8C,IACfnD,EAAOM,KAAKuH,EAAYR,KAAMJ,IAE9B9D,EAAOA,EAAK1C,MAAM4G,KAAKD,gBACvBH,GAASI,KAAKD,eAGhB,OAAIpH,EAAOU,OACFV,EAGF,MAmBT8H,EAAUjG,UAAU0C,KAAO,SAAc2E,EAAMC,GAG7C,OAFAD,EAAOtH,MAAMwH,QAAQF,GAAQA,EAAO,CAAEA,GAEjCC,GAOL9B,KAAK7C,SAAW6C,KAAK7C,SAAS6E,OAAOH,GACJI,OACA/C,QAAO,SAAUgD,EAAIC,EAAKC,GACzB,OAAOF,IAAOE,EAAID,EAAM,MAEzBE,UAEjCrF,EAAQgD,MACDA,OAdLA,KAAK7C,SAAW0E,EAAKzI,QACrB4G,KAAKxC,mBAAoB,EACzBR,EAAQgD,MACDA,OAmBXS,EAAUjG,UAAUsE,UAAY,SAAmBzC,GAK5CA,EAAM4D,SAAU5D,EAAMkE,IAAM,UAAYlE,EAAMkE,KAE9B,YAAjBlE,EAAM4D,QAAyB,YAAYjH,KAAKqD,EAAMkE,OACxDlE,EAAMkE,IAAM,UAAYlE,EAAMkE,MAUlCE,EAAUjG,UAAU+C,UAAY,aAIhC7D,EAAOC,QAAU8G,G,kCCrnBjB,IAAI6B,EAAc,GAwBlB,SAAS1I,EAAOzB,EAAQC,GACtB,IAAIM,EAQJ,MANuB,iBAAZN,IACTA,EAAUwB,EAAOhB,cAGnBF,EA7BF,SAAwBN,GACtB,IAAIE,EAAGO,EAAIH,EAAQ4J,EAAYlK,GAC/B,GAAIM,EAAS,OAAOA,EAIpB,IAFAA,EAAQ4J,EAAYlK,GAAW,GAE1BE,EAAI,EAAGA,EAAI,IAAKA,IACnBO,EAAKC,OAAOC,aAAaT,GACzBI,EAAMO,KAAKJ,GAGb,IAAKP,EAAI,EAAGA,EAAIF,EAAQiB,OAAQf,IAE9BI,EADAG,EAAKT,EAAQkB,WAAWhB,IACZ,KAAO,IAAMO,EAAGK,SAAS,IAAIC,eAAeC,OAAO,GAGjE,OAAOV,EAaC6J,CAAenK,GAEhBD,EAAOiD,QAAQ,qBAAqB,SAASoH,GAClD,IAAIlK,EAAGC,EAAGkK,EAAIC,EAAIC,EAAIC,EAAIC,EACtBlK,EAAS,GAEb,IAAKL,EAAI,EAAGC,EAAIiK,EAAInJ,OAAQf,EAAIC,EAAGD,GAAK,GACtCmK,EAAKK,SAASN,EAAIpJ,MAAMd,EAAI,EAAGA,EAAI,GAAI,KAE9B,IACPK,GAAUD,EAAM+J,GAIE,MAAV,IAALA,IAAwBnK,EAAI,EAAIC,GAIf,MAAV,KAFVmK,EAAKI,SAASN,EAAIpJ,MAAMd,EAAI,EAAGA,EAAI,GAAI,OAMnCK,IAHFkK,EAAQJ,GAAM,EAAK,KAAe,GAALC,GAEnB,IACE,KAEA5J,OAAOC,aAAa8J,GAGhCvK,GAAK,GAKW,MAAV,IAALmK,IAAwBnK,EAAI,EAAIC,IAEnCmK,EAAKI,SAASN,EAAIpJ,MAAMd,EAAI,EAAGA,EAAI,GAAI,IACvCqK,EAAKG,SAASN,EAAIpJ,MAAMd,EAAI,EAAGA,EAAI,GAAI,IAEnB,MAAV,IAALoK,IAAuC,MAAV,IAALC,KAIzBhK,IAHFkK,EAAQJ,GAAM,GAAM,MAAYC,GAAM,EAAK,KAAe,GAALC,GAE3C,MAAUE,GAAO,OAAUA,GAAO,MAChC,MAEA/J,OAAOC,aAAa8J,GAGhCvK,GAAK,GAKW,MAAV,IAALmK,IAAwBnK,EAAI,EAAIC,IAEnCmK,EAAKI,SAASN,EAAIpJ,MAAMd,EAAI,EAAGA,EAAI,GAAI,IACvCqK,EAAKG,SAASN,EAAIpJ,MAAMd,EAAI,EAAGA,EAAI,GAAI,IACvCsK,EAAKE,SAASN,EAAIpJ,MAAMd,EAAI,GAAIA,EAAI,IAAK,IAErB,MAAV,IAALoK,IAAuC,MAAV,IAALC,IAAuC,MAAV,IAALC,MACnDC,EAAQJ,GAAM,GAAM,QAAcC,GAAM,GAAM,OAAaC,GAAM,EAAK,KAAe,GAALC,GAEtE,OAAWC,EAAM,QACzBlK,GAAU,QAEVkK,GAAO,MACPlK,GAAUG,OAAOC,aAAa,OAAU8J,GAAO,IAAK,OAAgB,KAANA,KAGhEvK,GAAK,GAKTK,GAAU,IAGZ,OAAOA,KAKXiB,EAAOhB,aAAiB,cACxBgB,EAAOH,eAAiB,GAGxBC,EAAOC,QAAUC,G,kCCrHjBF,EAAOC,QAAU,SAAgB4G,GAC/B,IAAI5H,EAAS,GAkBb,OAhBAA,GAAU4H,EAAIwC,UAAY,GAC1BpK,GAAU4H,EAAIyC,QAAU,KAAO,GAC/BrK,GAAU4H,EAAI0C,KAAO1C,EAAI0C,KAAO,IAAM,GAElC1C,EAAI2C,WAA2C,IAA/B3C,EAAI2C,SAAStB,QAAQ,KAEvCjJ,GAAU,IAAM4H,EAAI2C,SAAW,IAE/BvK,GAAU4H,EAAI2C,UAAY,GAG5BvK,GAAU4H,EAAI4C,KAAO,IAAM5C,EAAI4C,KAAO,GACtCxK,GAAU4H,EAAI6C,UAAY,GAC1BzK,GAAU4H,EAAIoB,QAAU,GACxBhJ,GAAU4H,EAAI8C,MAAQ,K,kCCwBxB,SAASC,IACPtD,KAAK+C,SAAW,KAChB/C,KAAKgD,QAAU,KACfhD,KAAKiD,KAAO,KACZjD,KAAKmD,KAAO,KACZnD,KAAKkD,SAAW,KAChBlD,KAAKqD,KAAO,KACZrD,KAAK2B,OAAS,KACd3B,KAAKoD,SAAW,KAOlB,IAAIG,EAAkB,oBAClBC,EAAc,WAGdC,EAAoB,qCAOpBC,EAAS,CAAE,IAAK,IAAK,IAAK,KAAM,IAAK,KAAM1B,OAHlC,CAAE,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,OAMhD2B,EAAa,CAAE,KAAO3B,OAAO0B,GAK7BE,EAAe,CAAE,IAAK,IAAK,IAAK,IAAK,KAAM5B,OAAO2B,GAClDE,EAAkB,CAAE,IAAK,IAAK,KAE9BC,EAAsB,yBACtBC,EAAoB,+BAIpBC,EAAmB,CACjB,YAAc,EACd,eAAe,GAGjBC,EAAkB,CAChB,MAAQ,EACR,OAAS,EACT,KAAO,EACP,QAAU,EACV,MAAQ,EACR,SAAS,EACT,UAAU,EACV,QAAQ,EACR,WAAW,EACX,SAAS,GAYfX,EAAI9I,UAAUV,MAAQ,SAASyG,EAAK2D,GAClC,IAAI5L,EAAGC,EAAG4L,EAAYC,EAAKpB,EACvBqB,EAAO9D,EAMX,GAFA8D,EAAOA,EAAKC,QAEPJ,GAA+C,IAA1B3D,EAAIxD,MAAM,KAAK1D,OAAc,CAErD,IAAIkL,EAAad,EAAkBhC,KAAK4C,GACxC,GAAIE,EAKF,OAJAvE,KAAKoD,SAAWmB,EAAW,GACvBA,EAAW,KACbvE,KAAK2B,OAAS4C,EAAW,IAEpBvE,KAIX,IAAIwE,EAAQjB,EAAgB9B,KAAK4C,GAoBjC,GAnBIG,IAEFL,GADAK,EAAQA,EAAM,IACKrE,cACnBH,KAAK+C,SAAWyB,EAChBH,EAAOA,EAAKI,OAAOD,EAAMnL,UAOvB6K,GAAqBM,GAASH,EAAKhI,MAAM,6BAC3C2G,EAAgC,OAAtBqB,EAAKI,OAAO,EAAG,KACRD,GAASR,EAAiBQ,KACzCH,EAAOA,EAAKI,OAAO,GACnBzE,KAAKgD,SAAU,KAIdgB,EAAiBQ,KACjBxB,GAAYwB,IAAUP,EAAgBO,IAAU,CAkBnD,IAUIvB,EAAMyB,EAVNC,GAAW,EACf,IAAKrM,EAAI,EAAGA,EAAIuL,EAAgBxK,OAAQf,KAEzB,KADb8L,EAAMC,EAAKzC,QAAQiC,EAAgBvL,QACH,IAAbqM,GAAkBP,EAAMO,KACzCA,EAAUP,GA0Bd,KARgB,KATdM,GAFe,IAAbC,EAEON,EAAKO,YAAY,KAIjBP,EAAKO,YAAY,IAAKD,MAM/B1B,EAAOoB,EAAKjL,MAAM,EAAGsL,GACrBL,EAAOA,EAAKjL,MAAMsL,EAAS,GAC3B1E,KAAKiD,KAAOA,GAId0B,GAAW,EACNrM,EAAI,EAAGA,EAAIsL,EAAavK,OAAQf,KAEtB,KADb8L,EAAMC,EAAKzC,QAAQgC,EAAatL,QACA,IAAbqM,GAAkBP,EAAMO,KACzCA,EAAUP,IAIG,IAAbO,IACFA,EAAUN,EAAKhL,QAGS,MAAtBgL,EAAKM,EAAU,IAAcA,IACjC,IAAIE,EAAOR,EAAKjL,MAAM,EAAGuL,GACzBN,EAAOA,EAAKjL,MAAMuL,GAGlB3E,KAAK8E,UAAUD,GAIf7E,KAAKkD,SAAWlD,KAAKkD,UAAY,GAIjC,IAAI6B,EAAoC,MAArB/E,KAAKkD,SAAS,IACe,MAA5ClD,KAAKkD,SAASlD,KAAKkD,SAAS7J,OAAS,GAGzC,IAAK0L,EAAc,CACjB,IAAIC,EAAYhF,KAAKkD,SAASnG,MAAM,MACpC,IAAKzE,EAAI,EAAGC,EAAIyM,EAAU3L,OAAQf,EAAIC,EAAGD,IAAK,CAC5C,IAAI2M,EAAOD,EAAU1M,GACrB,GAAK2M,IACAA,EAAK5I,MAAMyH,GAAsB,CAEpC,IADA,IAAIoB,EAAU,GACLC,EAAI,EAAGrE,EAAImE,EAAK5L,OAAQ8L,EAAIrE,EAAGqE,IAClCF,EAAK3L,WAAW6L,GAAK,IAIvBD,GAAW,IAEXA,GAAWD,EAAKE,GAIpB,IAAKD,EAAQ7I,MAAMyH,GAAsB,CACvC,IAAIsB,EAAaJ,EAAU5L,MAAM,EAAGd,GAChC+M,EAAUL,EAAU5L,MAAMd,EAAI,GAC9BgN,EAAML,EAAK5I,MAAM0H,GACjBuB,IACFF,EAAWnM,KAAKqM,EAAI,IACpBD,EAAQE,QAAQD,EAAI,KAElBD,EAAQhM,SACVgL,EAAOgB,EAAQ3H,KAAK,KAAO2G,GAE7BrE,KAAKkD,SAAWkC,EAAW1H,KAAK,KAChC,SAMJsC,KAAKkD,SAAS7J,OA1LD,MA2Lf2G,KAAKkD,SAAW,IAKd6B,IACF/E,KAAKkD,SAAWlD,KAAKkD,SAASuB,OAAO,EAAGzE,KAAKkD,SAAS7J,OAAS,IAKnE,IAAIgK,EAAOgB,EAAKzC,QAAQ,MACV,IAAVyB,IAEFrD,KAAKqD,KAAOgB,EAAKI,OAAOpB,GACxBgB,EAAOA,EAAKjL,MAAM,EAAGiK,IAEvB,IAAImC,EAAKnB,EAAKzC,QAAQ,KAWtB,OAVY,IAAR4D,IACFxF,KAAK2B,OAAS0C,EAAKI,OAAOe,GAC1BnB,EAAOA,EAAKjL,MAAM,EAAGoM,IAEnBnB,IAAQrE,KAAKoD,SAAWiB,GACxBJ,EAAgBE,IAChBnE,KAAKkD,WAAalD,KAAKoD,WACzBpD,KAAKoD,SAAW,IAGXpD,MAGTsD,EAAI9I,UAAUsK,UAAY,SAASD,GACjC,IAAI1B,EAAOK,EAAY/B,KAAKoD,GACxB1B,IAEW,OADbA,EAAOA,EAAK,MAEVnD,KAAKmD,KAAOA,EAAKsB,OAAO,IAE1BI,EAAOA,EAAKJ,OAAO,EAAGI,EAAKxL,OAAS8J,EAAK9J,SAEvCwL,IAAQ7E,KAAKkD,SAAW2B,IAG9BnL,EAAOC,QA7MP,SAAkB4G,EAAK2D,GACrB,GAAI3D,GAAOA,aAAe+C,EAAO,OAAO/C,EAExC,IAAIkF,EAAI,IAAInC,EAEZ,OADAmC,EAAE3L,MAAMyG,EAAK2D,GACNuB,I,mBC/GT/L,EAAOC,QAAQ,yN,kCCGfD,EAAOC,QAAU,SAAU+L,GACzB,IAAI3J,EAAK,GAGTA,EAAG4J,QAAU,EAAQ,MAAiC/K,OACtDmB,EAAG6J,OAAU,EAAQ,MAAgChL,OACrDmB,EAAG8J,MAAU,EAAQ,MAA+BjL,OACpDmB,EAAG+J,MAAU,EAAQ,MAA+BlL,OAGpDmB,EAAGsD,SAAW,CAAEtD,EAAG8J,MAAO9J,EAAG+J,MAAO/J,EAAG6J,QAASlI,KAAK,KAGrD3B,EAAGgK,QAAU,CAAEhK,EAAG8J,MAAO9J,EAAG6J,QAASlI,KAAK,KAmK1C,OA1JA3B,EAAGiK,kBAA0B,eAAmCjK,EAAGsD,SAAW,IAAMtD,EAAG4J,QAAU,IAMjG5J,EAAGkK,QAED,yFAGFlK,EAAGG,SAAc,YAAcH,EAAGgK,QAAU,uBAE5ChK,EAAGU,SAED,kFAEFV,EAAGW,oBAED,cAAkCX,EAAGsD,SAAW,6BAA+BtD,EAAGsD,SAAW,KAE/FtD,EAAGK,SAED,iBAGcL,EAAGgK,QAHjB,2CAIoBhK,EAAGgK,QAJvB,wBAKoBhK,EAAGgK,QALvB,wBAMoBhK,EAAGgK,QANvB,wBAOoBhK,EAAGgK,QAPvB,yBAQoBhK,EAAGgK,QARvB,qBASiBhK,EAAGiK,kBATpB,sCAkBiBjK,EAAGgK,QAAU,WACvBL,GAAQA,EAAK,OACZ,6BAEA,SAEF,OAAS3J,EAAGgK,QAxBlB,UAyBehK,EAAGgK,QAzBlB,aA0BkBhK,EAAGgK,QA1BrB,gBA2BiBhK,EAAGgK,QA3BpB,iBAkCFhK,EAAGa,eAED,iEAEFb,EAAG0B,OAED,wBAKF1B,EAAGS,gBAGD,MACET,EAAG0B,OACH,IACA1B,EAAGiK,kBAHL,UAMFjK,EAAGQ,WAED,MACER,EAAG0B,OADL,OAGU1B,EAAGiK,kBAHb,QAKUjK,EAAGiK,kBAAoB,QAAUjK,EAAGiK,kBAAoB,UAAYjK,EAAGiK,kBALjF,KAQFjK,EAAGmK,SAED,eAIgBnK,EAAGQ,WAAa,SAAWR,EAAGQ,WAJ9C,KAOFR,EAAGoK,eAED,MACEpK,EAAGkK,QADL,aAGgBlK,EAAGQ,WAHnB,qBAMFR,EAAGqK,qBAED,YAAcrK,EAAGQ,WAAa,oBAEhCR,EAAGc,gBAEDd,EAAGmK,SAAWnK,EAAGW,oBAEnBX,EAAGsK,sBAEDtK,EAAGoK,eAAiBpK,EAAGW,oBAEzBX,EAAGI,qBAEDJ,EAAGmK,SAAWnK,EAAGU,SAAWV,EAAGW,oBAEjCX,EAAGuK,2BAEDvK,EAAGoK,eAAiBpK,EAAGU,SAAWV,EAAGW,oBAEvCX,EAAGwK,iCAEDxK,EAAGqK,qBAAuBrK,EAAGU,SAAWV,EAAGW,oBAO7CX,EAAGmC,oBAED,sDAAwDnC,EAAGsD,SAAW,SAExEtD,EAAG6B,gBAEC,kBAAsC7B,EAAGgK,QAAzC,KACMhK,EAAGa,eAAiB,IAAMb,EAAGsK,sBAAwB,IAE/DtK,EAAG+B,eAGC,mCAA0C/B,EAAGsD,SAA7C,qBAC0BtD,EAAGuK,2BAA6BvK,EAAGK,SAAW,IAE5EL,EAAGiC,qBAGC,mCAA0CjC,EAAGsD,SAA7C,qBAC0BtD,EAAGwK,iCAAmCxK,EAAGK,SAAW,IAE3EL","file":"10.6be3bd84d30d81d1f8b5.bundle.js","sourcesContent":["\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","module.exports=/[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","'use strict';\n\n\nmodule.exports.encode = require('./encode');\nmodule.exports.decode = require('./decode');\nmodule.exports.format = require('./format');\nmodule.exports.parse  = require('./parse');\n","'use strict';\n\nexports.Any = require('./properties/Any/regex');\nexports.Cc  = require('./categories/Cc/regex');\nexports.Cf  = require('./categories/Cf/regex');\nexports.P   = require('./categories/P/regex');\nexports.Z   = require('./categories/Z/regex');\n","module.exports=/[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/","module.exports=/[\\0-\\x1F\\x7F-\\x9F]/","module.exports=/[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/","'use strict';\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Helpers\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\nfunction isString(obj) { return _class(obj) === '[object String]'; }\nfunction isObject(obj) { return _class(obj) === '[object Object]'; }\nfunction isRegExp(obj) { return _class(obj) === '[object RegExp]'; }\nfunction isFunction(obj) { return _class(obj) === '[object Function]'; }\n\n\nfunction escapeRE(str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&'); }\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\n\nfunction isOptionsObj(obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    return acc || defaultOptions.hasOwnProperty(k);\n  }, false);\n}\n\n\nvar defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http =  new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        );\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'https:':  'http:',\n  'ftp:':    'http:',\n  '//':      {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http =  new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        );\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0; }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0; }\n        return tail.match(self.re.no_http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto =  new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        );\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length;\n      }\n      return 0;\n    }\n  }\n};\n\n/*eslint-disable max-len*/\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\nvar tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]';\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nvar tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|');\n\n/*eslint-enable max-len*/\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction resetScanCache(self) {\n  self.__index__ = -1;\n  self.__text_cache__   = '';\n}\n\nfunction createValidator(re) {\n  return function (text, pos) {\n    var tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length;\n    }\n    return 0;\n  };\n}\n\nfunction createNormalizer() {\n  return function (match, self) {\n    self.normalize(match);\n  };\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile(self) {\n\n  // Load & clone RE patterns.\n  var re = self.re = require('./lib/re')(self.__opts__);\n\n  // Define dynamic patterns\n  var tlds = self.__tlds__.slice();\n\n  self.onCompile();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n  tlds.push(re.src_xn);\n\n  re.src_tlds = tlds.join('|');\n\n  function untpl(tpl) { return tpl.replace('%TLDS%', re.src_tlds); }\n\n  re.email_fuzzy      = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy       = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test  = RegExp(untpl(re.tpl_host_fuzzy_test), 'i');\n\n  //\n  // Compile each schema\n  //\n\n  var aliases = [];\n\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError(name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    var val = self.__schemas__[name];\n\n    // skip disabled methods\n    if (val === null) { return; }\n\n    var compiled = { validate: null, link: null };\n\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return;\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return;\n    }\n\n    schemaError(name, val);\n  });\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return;\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize;\n  });\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() };\n\n  //\n  // Build schema condition\n  //\n  var slist = Object.keys(self.__compiled__)\n                      .filter(function (name) {\n                        // Filter disabled & fake schemas\n                        return name.length > 0 && self.__compiled__[name];\n                      })\n                      .map(escapeRE)\n                      .join('|');\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test   = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig');\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  );\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match(self, shift) {\n  var start = self.__index__,\n      end   = self.__last_index__,\n      text  = self.__text_cache__.slice(start, end);\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema    = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index     = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw       = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text      = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url       = text;\n}\n\nfunction createMatch(self, shift) {\n  var match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match;\n}\n\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt(schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options);\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__           = assign({}, defaultOptions, options);\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__          = -1;\n  this.__last_index__     = -1; // Next scan position\n  this.__schema__         = '';\n  this.__text_cache__     = '';\n\n  this.__schemas__        = assign({}, defaultSchemas, schemas);\n  this.__compiled__       = {};\n\n  this.__tlds__           = tlds_default;\n  this.__tlds_replaced__  = false;\n\n  this.re = {};\n\n  compile(this);\n}\n\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add(schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this;\n};\n\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set(options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this;\n};\n\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) { return false; }\n\n  var m, ml, me, len, shift, next, re, tld_pos, at_pos;\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n      if (len) {\n        this.__schema__     = m[2];\n        this.__index__      = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break;\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__     = '';\n            this.__index__      = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n\n        shift = me.index + me[1].length;\n        next  = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__     = 'mailto:';\n          this.__index__      = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0;\n};\n\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest(text) {\n  return this.re.pretest.test(text);\n};\n\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0;\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n};\n\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match(text) {\n  var shift = 0, result = [];\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  }\n\n  // Cut head if cache was used\n  var tail = shift ? text.slice(shift) : text;\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return null;\n};\n\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n  list = Array.isArray(list) ? list : [ list ];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this;\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n                                  .sort()\n                                  .filter(function (el, idx, arr) {\n                                    return el !== arr[idx - 1];\n                                  })\n                                  .reverse();\n\n  compile(this);\n  return this;\n};\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize(match) {\n\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url; }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile() {\n};\n\n\nmodule.exports = LinkifyIt;\n","\n'use strict';\n\n\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i, ch, cache = decodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n}\n\n\n// Decode percent-encoded string.\n//\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function(seq) {\n    var i, l, b1, b2, b3, b4, chr,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F);\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F);\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F);\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd';\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += '\\ufffd';\n    }\n\n    return result;\n  });\n}\n\n\ndecode.defaultChars   = ';/?:@&=+$,#';\ndecode.componentChars = '';\n\n\nmodule.exports = decode;\n","\n'use strict';\n\n\nmodule.exports = function format(url) {\n  var result = '';\n\n  result += url.protocol || '';\n  result += url.slashes ? '//' : '';\n  result += url.auth ? url.auth + '@' : '';\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']';\n  } else {\n    result += url.hostname || '';\n  }\n\n  result += url.port ? ':' + url.port : '';\n  result += url.pathname || '';\n  result += url.search || '';\n  result += url.hash || '';\n\n  return result;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.pathname = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = [ '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t' ],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = [ '{', '}', '|', '\\\\', '^', '`' ].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = [ '\\'' ].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = [ '%', '/', '?', ';', '#' ].concat(autoEscape),\n    hostEndingChars = [ '/', '?', '#' ],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    /* eslint-disable no-script-url */\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    };\n    /* eslint-enable no-script-url */\n\nfunction urlParse(url, slashesDenoteHost) {\n  if (url && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, slashesDenoteHost) {\n  var i, l, lowerProto, hec, slashes,\n      rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = proto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = auth;\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length;\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd--; }\n    var host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost(host);\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    rest = rest.slice(0, qm);\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '';\n  }\n\n  return this;\n};\n\nUrl.prototype.parseHost = function(host) {\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nmodule.exports = urlParse;\n","module.exports=/[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/","'use strict';\n\n\nmodule.exports = function (opts) {\n  var re = {};\n\n  // Use direct extract instead of `regenerate` to reduse browserified size\n  re.src_Any = require('uc.micro/properties/Any/regex').source;\n  re.src_Cc  = require('uc.micro/categories/Cc/regex').source;\n  re.src_Z   = require('uc.micro/categories/Z/regex').source;\n  re.src_P   = require('uc.micro/categories/P/regex').source;\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [ re.src_Z, re.src_P, re.src_Cc ].join('|');\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [ re.src_Z, re.src_Cc ].join('|');\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  var text_separators = '[><\\uff5c]';\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter       = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')';\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  ////////////////////////////////////////////////////////////////////////////////\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)';\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth    = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?';\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')(?!-|_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))';\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-;]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-]).|' +  // allow `I'm_king` if no pair found\n          '\\\\.{2,}[a-zA-Z0-9%/&]|' + // google has many dots in \"google search\" links (#66, #81).\n                                     // github has ... in commit range links,\n                                     // Restrict to\n                                     // - english\n                                     // - percent-encoded\n                                     // - parts of file path\n                                     // - params separator\n                                     // until more examples found.\n          '\\\\.(?!' + re.src_ZCc + '|[.]).|' +\n          (opts && opts['---'] ?\n            '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            :\n            '\\\\-+|'\n          ) +\n          ',(?!' + re.src_ZCc + ').|' +       // allow `,,,` in paths\n          ';(?!' + re.src_ZCc + ').|' +       // allow `;` if not followed by space-like char\n          '\\\\!+(?!' + re.src_ZCc + '|[!]).|' +  // allow `!!!` in paths, but not at the end\n          '\\\\?(?!' + re.src_ZCc + '|[?]).' +\n        ')+' +\n      '|\\\\/' +\n    ')?';\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*';\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}';\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')';\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')';\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/*_root*/ + ')' +\n    ')';\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')';\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))';\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator;\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator;\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator;\n\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Main rules\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))';\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')';\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')';\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')';\n\n  return re;\n};\n"],"sourceRoot":""}