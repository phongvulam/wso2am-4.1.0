{"version":3,"sources":["webpack:///./source/src/app/components/Apis/Details/APIDefinition/swaggerUI/SwaggerUI.jsx","webpack:///./source/src/app/components/Apis/Details/APIDefinition/SwaggerEditorDrawer.jsx"],"names":["disableAuthorizeAndInfoPlugin","wrapComponents","info","authorizeBtn","disableTryItOutPlugin","statePlugins","spec","wrapSelectors","allowTryItOutFor","SwaggerUI","props","componentProps","url","validatorUrl","docExpansion","defaultModelsExpandDepth","plugins","propTypes","accessTokenProvider","PropTypes","func","isRequired","authorizationHeader","string","api","shape","context","styles","editorPane","width","height","overflow","editorRoot","MonacoEditor","lazy","SwaggerEditorDrawer","onContentChange","bind","content","onEditContent","this","classes","language","swagger","swaggerUrl","encodeURIComponent","container","spacing","className","item","theme","value","onChange","options","glyphMargin","React","Component","withStyles"],"mappings":"iYAuBMA,EAAgC,WAClC,MAAO,CACHC,eAAgB,CACZC,KAAM,kBAAM,kBAAM,OAClBC,aAAc,kBAAM,kBAAM,UAIhCC,EAAwB,WAC1B,MAAO,CACHC,aAAc,CACVC,KAAM,CACFC,cAAe,CACXC,iBAAkB,kBAAM,kBAAM,SAY5CC,EAAY,SAACC,GACf,IAKMC,EAAiB,CACnBL,KAHAI,EAFAJ,KAMAM,IAJAF,EADAE,IAMAC,aAAc,KACdC,aAAc,OACdC,0BAA2B,EAC3BC,QAAS,CAAChB,EAA+BI,IAE7C,OAAO,kBAAC,IAAiBO,IAG7BF,EAAUQ,UAAY,CAClBC,oBAAqBC,IAAUC,KAAKC,WACpCC,oBAAqBH,IAAUI,OAAOF,WACtCG,IAAKL,IAAUM,MAAM,CACjBC,QAASP,IAAUI,OAAOF,aAC3BA,WACHT,IAAKO,IAAUI,OAAOF,Y,UAEXZ,EAAA,a,6FAlDTT,E,+MAQAI,E,uMAiBAK,E,wsHCzBAkB,OAAS,iBAAO,CAClBC,WAAY,CACRC,MAAO,MACPC,OAAQ,OACRC,SAAU,UAEdC,WAAY,CACRF,OAAQ,UAIVG,aAAeC,iDAAK,kBAAM,kEAQ1BC,oB,wHAIF,6BAAYzB,GAAO,wDACf,mBAAMA,IACD0B,gBAAkB,EAAKA,gBAAgBC,KAArB,2BAFR,E,sEASnB,SAAgBC,IAEZC,EAD0BC,KAAK9B,MAAvB6B,eACMD,K,oBAMlB,WACI,MAAuCE,KAAK9B,MAApC+B,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,SAAUC,EAA3B,EAA2BA,QACrBC,EAAa,aAAeF,EAAW,IAAMG,mBAAmBF,GACtE,OACI,sHACI,2DAAC,sDAAD,CAAMG,WAAS,EAACC,QAAS,EAAGC,UAAWP,EAAQT,YAC3C,2DAAC,sDAAD,CAAMiB,MAAI,EAACD,UAAWP,EAAQb,YAC1B,2DAACK,aAAD,CACIS,SAAUA,EACVb,MAAM,OACNC,OAAO,qBACPoB,MAAM,UACNC,MAAOR,EACPS,SAAUZ,KAAKJ,gBACfiB,QAAS,CAAEC,aAAa,MAGhC,2DAAC,sDAAD,CAAML,MAAI,EAACD,UAAWP,EAAQb,YAC1B,2DAAC,0DAAD,CAAWhB,IAAKgC,S,gJAvCNW,6CAAMC,WA+CxCrB,oBAAoBlB,UAAY,CAC5BwB,QAAStB,kDAAUM,MAAM,IAAIJ,WAC7BqB,SAAUvB,kDAAUI,OAAOF,WAC3BsB,QAASxB,kDAAUI,OAAOF,WAC1BkB,cAAepB,kDAAUC,KAAKC,Y,aAGnBoC,2EAAW9B,OAAX8B,CAAmBtB,qB,2BAAnB,qC,qIAzETR,O,qMAWAM,a,2MAQAE,oB","file":"EditorDialog.2890f621eb73232b7315.bundle.js","sourcesContent":["/*\n *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n *  WSO2 Inc. licenses this file to you under the Apache License,\n *  Version 2.0 (the \"License\"); you may not use this file except\n *  in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied. See the License for the\n *  specific language governing permissions and limitations\n *  under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SwaggerUILib from 'swagger-ui-react';\nimport 'swagger-ui-react/swagger-ui.css';\n\n\nconst disableAuthorizeAndInfoPlugin = function () {\n    return {\n        wrapComponents: {\n            info: () => () => null,\n            authorizeBtn: () => () => null,\n        },\n    };\n};\nconst disableTryItOutPlugin = function () {\n    return {\n        statePlugins: {\n            spec: {\n                wrapSelectors: {\n                    allowTryItOutFor: () => () => false,\n                },\n            },\n        },\n    };\n};\n\n/**\n *\n * @class SwaggerUI\n * @extends {Component}\n */\nconst SwaggerUI = (props) => {\n    const {\n        spec,\n        url,\n    } = props;\n\n    const componentProps = {\n        spec,\n        url,\n        validatorUrl: null,\n        docExpansion: 'list',\n        defaultModelsExpandDepth: -1,\n        plugins: [disableAuthorizeAndInfoPlugin, disableTryItOutPlugin],\n    };\n    return <SwaggerUILib {...componentProps} />;\n};\n\nSwaggerUI.propTypes = {\n    accessTokenProvider: PropTypes.func.isRequired,\n    authorizationHeader: PropTypes.string.isRequired,\n    api: PropTypes.shape({\n        context: PropTypes.string.isRequired,\n    }).isRequired,\n    url: PropTypes.string.isRequired,\n};\nexport default SwaggerUI;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { lazy } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport SwaggerUI from './swaggerUI/SwaggerUI';\n\nconst styles = () => ({\n    editorPane: {\n        width: '50%',\n        height: '100%',\n        overflow: 'scroll',\n    },\n    editorRoot: {\n        height: '100%',\n    },\n});\n\nconst MonacoEditor = lazy(() => import('react-monaco-editor' /* webpackChunkName: \"APIDefMonacoEditor\" */));\n\n/**\n * This component hosts the Swagger Editor component.\n * Known Issue: The cursor jumps back to the start of the first line when updating the swagger-ui based on the\n * modification done via the editor.\n * https://github.com/wso2/product-apim/issues/5071\n * */\nclass SwaggerEditorDrawer extends React.Component {\n    /**\n     * @inheritDoc\n     */\n    constructor(props) {\n        super(props);\n        this.onContentChange = this.onContentChange.bind(this);\n    }\n\n    /**\n     * Method to handle the change event of the editor.\n     * @param {string} content : The edited content.\n     * */\n    onContentChange(content) {\n        const { onEditContent } = this.props;\n        onEditContent(content);\n    }\n\n    /**\n     * @inheritDoc\n     */\n    render() {\n        const { classes, language, swagger } = this.props;\n        const swaggerUrl = 'data:text/' + language + ',' + encodeURIComponent(swagger);\n        return (\n            <>\n                <Grid container spacing={2} className={classes.editorRoot}>\n                    <Grid item className={classes.editorPane}>\n                        <MonacoEditor\n                            language={language}\n                            width='100%'\n                            height='calc(100vh - 51px)'\n                            theme='vs-dark'\n                            value={swagger}\n                            onChange={this.onContentChange}\n                            options={{ glyphMargin: true }}\n                        />\n                    </Grid>\n                    <Grid item className={classes.editorPane}>\n                        <SwaggerUI url={swaggerUrl} />\n                    </Grid>\n                </Grid>\n            </>\n        );\n    }\n}\n\nSwaggerEditorDrawer.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    language: PropTypes.string.isRequired,\n    swagger: PropTypes.string.isRequired,\n    onEditContent: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(SwaggerEditorDrawer);\n"],"sourceRoot":""}