{"version":3,"sources":["webpack:///./source/src/app/components/Apis/Create/Default/APICreateDefault.jsx","webpack:///./source/src/app/components/Apis/Create/APICreateRoutes.jsx","webpack:///./source/src/app/components/Apis/Create/APIProduct/APIProductCreateWrapper.jsx","webpack:///./source/src/app/components/Apis/Create/Components/APICreateProductBase.jsx","webpack:///./source/src/app/components/Apis/Create/OpenAPI/ApiCreateOpenAPI.jsx","webpack:///./source/src/app/components/Apis/Create/WSDL/ApiCreateWSDL.jsx","webpack:///./source/src/app/components/Apis/Create/GraphQL/ApiCreateGraphQL.jsx","webpack:///./source/src/app/components/Apis/Create/WebSocket/ApiCreateWebSocket.jsx","webpack:///./source/src/app/components/Apis/Create/StreamingAPI/APICreateStreamingAPI.jsx","webpack:///./source/src/app/components/Apis/Create/AsyncAPI/ApiCreateAsyncAPI.jsx","webpack:///./source/src/app/components/Apis/Create/AsyncAPI/ExternalEndpoint.jsx","webpack:///./source/src/app/components/Apis/Create/Components/DefaultAPIForm.jsx","webpack:///./source/src/app/components/Apis/Create/Components/APICreateBase.jsx"],"names":["getPolicies","promisedPolicies","API","policies","body","list","APICreateDefault","props","isWebSocket","isAPIProduct","history","intl","usePublisherSettings","settings","data","isLoading","settingsError","error","useState","pageError","setPageError","useEffect","message","isCreating","setIsCreating","isPublishing","setIsPublishing","isRevisioning","setIsRevisioning","isDeploying","setIsDeploying","isPublishButtonClicked","setIsPublishButtonClicked","useReducer","currentState","inputAction","action","value","formValidity","apiInputs","inputsDispatcher","isPublishable","endpoint","isAPICreateDisabled","name","version","context","createAPI","allPolicies","length","Alert","info","formatMessage","id","defaultMessage","filter","p","apiData","endpointConfig","endpoint_type","sandbox_endpoints","url","production_endpoints","type","newAPIProduct","APIProduct","promisedCreatedAPI","saveProduct","then","apiProduct","push","catch","console","response","description","newAPI","save","loading","success","finally","pageTitle","variant","component","title","container","direction","justify","alignItems","spacing","item","xs","onClose","disableActions","dense","paperProps","elevation","mt","data-testid","md","onValidate","isFormValid","onChange","event","target","api","color","disabled","onClick","size","AuthManager","isNotPublisher","restApi","promisedAPIRevision","createRevision","api1","revisionId","envList","environment","map","env","body1","internalGateways","provider","toLowerCase","includes","getFirstVhost","envName","find","e","vhosts","host","displayOnDevportal","vhost","promisedDeployment","deployRevision","promisedPublish","publish","workflowStatus","WORKFLOW_STATUS","CREATED","to","defaultProps","propTypes","PropTypes","shape","func","isRequired","withRouter","injectIntl","styles","content","flexGrow","APICreateRoutes","classes","className","path","APIProductCreateWrapper","ApiCreateGraphQL","ApiCreateSwagger","ApiCreateWSDL","ApiCreateWebSocket","APICreateStreamingAPI","APICreateAsyncAPI","ResourceNotFound","string","withStyles","useStyles","makeStyles","theme","Paper","height","saveButton","padding","titleWrapper","display","flexDirection","paddingBottom","buttonWrapper","marginTop","alternativeLabel","ApiProductCreateWrapper","useIntl","wizardStep","setWizardStep","apiResources","setApiResources","useAppContext","setPolicies","replace","inputValue","setCreating","steps","createAPIProduct","apis","activeStep","label","key","isStateCreate","step","createProductRevision","deployProductRevision","updateLcState","APICreateProductBase","children","sm","element","apiInputsReducer","endpoints","ApiCreateOpenAPI","inputType","handleOnValidate","additionalProperties","importOpenAPIByFile","importOpenAPIByUrl","mode","mb","severity","href","undefined","Wsdl","importByUrl","importByFileOrArchive","useHistory","style","marginBottom","implementationType","operations","graphQLInfo","newApi","JSON","stringify","importGraphQL","uuid","obj","mandatoryStar","palette","main","marginLeft","apiType","useParams","toUpperCase","isWebSub","asyncAPIPolicies","policyName","protocolKeys","WebSocket","SSE","WebSub","hideEndpoint","setHideEndpoint","isAPICreatable","handleOnChange","protocol","endpointType","saveStreamingAPI","endpointPlaceholderText","appendChildrenBeforeEndpoint","fullWidth","select","WS","WEBSUB","SelectProps","multiple","renderValue","selected","margin","InputProps","displayName","disableGutters","primary","secondary","streamingApi","ApiCreateAsyncAPI","hideExternalEndpoint","setHideExternalEndpoint","isValidExternalEndpoint","setValidExternalEndpoint","gatewayVendor","asyncTransportProtocols","Other","validateEndpoint","Joi","uri","empty","validate","lg","upperCaseString","marginRight","externalEndpoint","advertiseInfo","advertised","apiExternalProductionEndpoint","apiExternalSandboxEndpoint","originalDevPortalUrl","apiOwner","vendor","importAsyncAPIByFile","importAsyncAPIByUrl","externalEndpointWarning","alertTitle","fontWeight","typography","fontWeightMedium","ExternalEndpoint","helperText","gutterBottom","helperTextContext","textOverflow","width","whiteSpace","overflow","endpointValidChip","border","endpointInvalidChip","endpointErrorChip","iconButton","iconButtonValid","green","actualContext","initialContext","indexOf","checkContext","result","startsWith","DefaultAPIForm","validity","setValidity","isEndpointValid","setIsEndpointValid","statusCode","setStatusCode","isUpdating","setUpdating","isErrorCode","setIsErrorCode","Boolean","condition","otherwise","updateValidity","newState","Object","entries","reduce","acc","cVal","field","nameValidity","APIValidation","apiName","abortEarly","apiParameter","details","contextValidity","apiContext","required","count","contextTemplate","versionValidity","apiVersion","wsUrlValidity","wsUrl","endpointURL","noValidate","autoComplete","autoFocus","detail","index","onBlur","InputLabelProps","for","root","endAdornment","position","aria-label","testEndpoint","statusMessage","APICreateBase","arrayOf"],"mappings":"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","file":"APICreateRoutes.579f85211cdf00564e90.bundle.js","sourcesContent":["/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useReducer, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport API from 'AppData/api';\nimport { usePublisherSettings } from 'AppComponents/Shared/AppContext';\nimport Banner from 'AppComponents/Shared/Banner';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nimport APICreateBase from 'AppComponents/Apis/Create/Components/APICreateBase';\nimport DefaultAPIForm from 'AppComponents/Apis/Create/Components/DefaultAPIForm';\nimport APIProduct from 'AppData/APIProduct';\nimport AuthManager from 'AppData/AuthManager';\n\n\nconst getPolicies = async () => {\n    const promisedPolicies = API.policies('subscription');\n    const policies = await promisedPolicies;\n    return policies.body.list;\n};\n/**\n *\n * @export\n * @param {*} props\n * @returns\n */\n/**\n * Handle API creation.\n * @param {JSON} props properties passed in.\n * @returns {JSX} API creation form.\n */\nfunction APICreateDefault(props) {\n    const {\n        isWebSocket, isAPIProduct, history, intl,\n    } = props;\n    const { data: settings, isLoading, error: settingsError } = usePublisherSettings();\n\n    const [pageError, setPageError] = useState(null);\n    useEffect(() => {\n        if (settingsError) {\n            setPageError(settingsError.message);\n        }\n    }, [settingsError]);\n    const [isCreating, setIsCreating] = useState();\n    const [isPublishing, setIsPublishing] = useState(false);\n\n    const [isRevisioning, setIsRevisioning] = useState(false);\n    const [isDeploying, setIsDeploying] = useState(false);\n    const [isPublishButtonClicked, setIsPublishButtonClicked] = useState(false);\n    /**\n     *\n     * Reduce the events triggered from API input fields to current state\n     */\n    function apiInputsReducer(currentState, inputAction) {\n        const { action, value } = inputAction;\n        switch (action) {\n            case 'name':\n            case 'version':\n            case 'endpoint':\n            case 'context':\n            case 'isFormValid':\n                return { ...currentState, [action]: value };\n            default:\n                return currentState;\n        }\n    }\n    const [apiInputs, inputsDispatcher] = useReducer(apiInputsReducer, {\n        formValidity: false,\n    });\n    const isPublishable = apiInputs.endpoint;\n    const isAPICreateDisabled = !(apiInputs.name && apiInputs.version && apiInputs.context) || isCreating\n                                 || isPublishing;\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function handleOnChange(event) {\n        const { name: action, value } = event.target;\n        inputsDispatcher({ action, value });\n    }\n\n    /**\n     *\n     * Set the validity of the API Inputs form\n     * @param {*} isValidForm\n     * @param {*} validationState\n     */\n    function handleOnValidate(isFormValid) {\n        inputsDispatcher({\n            action: 'isFormValid',\n            value: isFormValid,\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     */\n    async function createAPI() {\n        setIsCreating(true);\n        const {\n            name, version, context, endpoint,\n        } = apiInputs;\n        let promisedCreatedAPI;\n        let policies;\n        const allPolicies = await getPolicies();\n        if (allPolicies.length === 0) {\n            Alert.info(intl.formatMessage({\n                id: 'Apis.Create.Default.APICreateDefault.error.policies.not.available',\n                defaultMessage: 'Throttling policies not available. Contact your administrator',\n            }));\n        } else if (allPolicies.filter((p) => p.name === 'Unlimited').length > 0) {\n            policies = ['Unlimited'];\n        } else {\n            policies = [allPolicies[0].name];\n        }\n\n        const apiData = {\n            name,\n            version,\n            context,\n            policies,\n        };\n        if (endpoint) {\n            apiData.endpointConfig = {\n                endpoint_type: 'http',\n                sandbox_endpoints: {\n                    url: endpoint,\n                },\n                production_endpoints: {\n                    url: endpoint,\n                },\n            };\n        }\n        if (isWebSocket) {\n            apiData.type = 'WS';\n        }\n        if (isAPIProduct) {\n            const newAPIProduct = new APIProduct(apiData);\n            promisedCreatedAPI = newAPIProduct\n                .saveProduct(apiData)\n                .then((apiProduct) => {\n                    Alert.info('API Product created successfully');\n                    history.push(`/api-products/${apiProduct.id}/overview`);\n                    return apiProduct;\n                })\n                .catch((error) => {\n                    console.error(error);\n                    if (error.response) {\n                        setPageError(error.response.body);\n                        return error.response.body.description;\n                    } else {\n                        const message = 'Something went wrong while adding the API Product';\n                        setPageError(message);\n                        // TODO add i18n ~tmkb\n                        return message;\n                    }\n                });\n        } else {\n            const newAPI = new API(apiData);\n            promisedCreatedAPI = newAPI\n                .save();\n            Alert.loading(promisedCreatedAPI, {\n                loading: 'Creating API...',\n                success: 'API created successfully',\n                error: (error) => {\n                    console.error(error);\n                    setIsPublishing(false); // We don't publish if something when wrong\n                    if (error.response) {\n                        setPageError(error.response.body);\n                        return error.response.body.description;\n                    } else {\n                        const message = 'Something went wrong while adding the API';\n                        setPageError(message);\n                        return message;\n                    }\n                },\n            });\n        }\n        return promisedCreatedAPI.finally(() => setIsCreating(false));\n    }\n\n    /**\n     *\n     */\n    function createAndPublish() {\n        const restApi = new API();\n        setIsPublishButtonClicked(true);\n        createAPI().then((api) => {\n            setIsRevisioning(true);\n            const body = {\n                description: 'Initial Revision',\n            };\n            const promisedAPIRevision = restApi.createRevision(api.id, body);\n            Alert.loading(promisedAPIRevision, {\n                success: 'API revision created successfully',\n                error: (error) => {\n                    console.error(error);\n                    if (error.response) {\n                        setPageError(error.response.body);\n                        return error.response.body.description;\n                    } else {\n                        setPageError('Something went wrong while creating the API Revision');\n                        return intl.formatMessage({\n                            id: 'Apis.Create.Default.APICreateDefault.error.errorMessage.create.revision',\n                            defaultMessage: 'Something went wrong while creating the API Revision',\n                        });\n                    }\n                },\n                loading: 'Creating API revision...',\n            });\n            promisedAPIRevision.then((api1) => {\n                const revisionId = api1.body.id;\n                setIsRevisioning(false);\n                const envList = settings.environment.map((env) => env.name);\n                const body1 = [];\n                const internalGateways = settings.environment.filter((p) => p.provider\n                        && p.provider.toLowerCase().includes('wso2'));\n                const getFirstVhost = (envName) => {\n                    const env = internalGateways.find(\n                        (e) => e.name === envName && e.vhosts.length > 0,\n                    );\n                    return env && env.vhosts[0].host;\n                };\n                if (envList && envList.length > 0) {\n                    if (envList.includes('Default') && getFirstVhost('Default')) {\n                        body1.push({\n                            name: 'Default',\n                            displayOnDevportal: true,\n                            vhost: getFirstVhost('Default'),\n                        });\n                    } else if (getFirstVhost(envList[0])) {\n                        body1.push({\n                            name: envList[0],\n                            displayOnDevportal: true,\n                            vhost: getFirstVhost(envList[0]),\n                        });\n                    }\n                }\n                setIsDeploying(true);\n                const promisedDeployment = restApi.deployRevision(api.id, revisionId, body1);\n                Alert.loading(promisedDeployment, {\n                    loading: 'Deploying API...',\n                    success: 'API deployed successfully',\n                    error: (error) => {\n                        console.error(error);\n                        if (error.response) {\n                            setPageError(error.response.body);\n                            return error.response.body.description;\n                        } else {\n                            setPageError('Something went wrong while publishing the API');\n\n                            return intl.formatMessage({\n                                id: 'Apis.Create.Default.APICreateDefault.error.errorMessage.publish',\n                                defaultMessage: 'Something went wrong while publishing the API',\n                            });\n                        }\n                    },\n                });\n                promisedDeployment.then(() => {\n                    setIsDeploying(false);\n                    // Publishing API after deploying\n                    setIsPublishing(true);\n                    const promisedPublish = api.publish();\n                    Alert.loading(promisedPublish, {\n                        loading: 'Publishing API...',\n                        success: (response) => {\n                            const { workflowStatus } = response.body;\n                            if (workflowStatus === APICreateDefault.WORKFLOW_STATUS.CREATED) {\n                                return intl.formatMessage({\n                                    id: 'Apis.Create.Default.APICreateDefault.success.publishStatus',\n                                    defaultMessage: 'Lifecycle state change request has been sent',\n                                });\n                            } else {\n                                return intl.formatMessage({\n                                    id: 'Apis.Create.Default.APICreateDefault.success.otherStatus',\n                                    defaultMessage: 'API updated successfully',\n                                });\n                            }\n                        },\n                        error: () => intl.formatMessage({\n                            id: 'Apis.Create.Default.APICreateDefault.error.otherStatus',\n                            defaultMessage: 'Error while publishing the API',\n                        }),\n                    });\n                    promisedPublish.then(() => history.push(`/apis/${api.id}/overview`))\n                        .finally(() => {\n                            setIsPublishing(false);\n                            setIsPublishButtonClicked(false);\n                        });\n                })\n                    .finally(() => {\n                        setIsDeploying(false);\n                    });\n            })\n                .finally(() => {\n                    setIsRevisioning(false);\n                });\n        });\n    }\n\n    /**\n     *\n     *\n     */\n    function createAPIOnly() {\n        createAPI().then((api) => {\n            history.push(`/apis/${api.id}/overview`);\n        });\n    }\n    let pageTitle = (\n        <>\n            <Typography variant='h5' component='h1'>\n                <FormattedMessage\n                    id='Apis.Create.Default.APICreateDefault.api.heading'\n                    defaultMessage='Create an API'\n                />\n            </Typography>\n            <Typography variant='caption'>\n                <FormattedMessage\n                    id='Apis.Create.Default.APICreateDefault.api.sub.heading'\n                    defaultMessage={\n                        'Create an API by providing a Name, a Version, a Context and'\n                        + ' Backend Endpoint (optional)'\n                    }\n                />\n            </Typography>\n        </>\n    );\n    if (isAPIProduct) {\n        pageTitle = (\n            <>\n                <Typography variant='h5' component='h1'>\n                    <FormattedMessage\n                        id='Apis.Create.Default.APICreateDefault.apiProduct.heading'\n                        defaultMessage='Create an API Product'\n                    />\n                </Typography>\n                <Typography variant='caption'>\n                    <FormattedMessage\n                        id='Apis.Create.Default.APICreateDefault.apiProduct.sub.heading'\n                        defaultMessage={\n                            'Create an API Product by providing a Name, a Context,'\n                            + ' and Business Plans (optional).'\n                        }\n                    />\n                </Typography>\n            </>\n        );\n    } else if (isWebSocket) {\n        pageTitle = (\n            <>\n                <Typography variant='h5' component='h1'>\n                    <FormattedMessage\n                        id='Apis.Create.Default.APICreateDefault.webSocket.heading'\n                        defaultMessage='Create a WebSocket API'\n                    />\n                </Typography>\n                <Typography variant='caption'>\n                    <FormattedMessage\n                        id='Apis.Create.Default.APICreateDefault.webSocket.sub.heading'\n                        defaultMessage='Create a WebSocket API by providing a Name, and a Context.'\n                    />\n                </Typography>\n            </>\n        );\n    }\n\n    return (\n        <APICreateBase title={pageTitle}>\n            <Grid container direction='row' justify='center' alignItems='center' spacing={3}>\n                {/* Page error banner */}\n                {(pageError) && (\n                    <Grid item xs={11}>\n                        <Banner\n                            onClose={() => setPageError(null)}\n                            disableActions\n                            dense\n                            paperProps={{ elevation: 1 }}\n                            type='error'\n                            message={pageError}\n                        />\n                    </Grid>\n                )}\n                {/* end of Page error banner */}\n                <Grid item xs={12}>\n                    {/* This -2 is to counter act with Grid container spacing 3 */}\n                    {isLoading && (\n                        <Box mt={-2}>\n                            <LinearProgress data-testid='loading-publisher-settings' />\n                        </Box>\n                    )}\n                </Grid>\n                <Grid item md={1} xs={0} />\n                <Grid item md={11} xs={12}>\n\n                    <DefaultAPIForm\n                        onValidate={handleOnValidate}\n                        onChange={handleOnChange}\n                        api={apiInputs}\n                        isAPIProduct={isAPIProduct}\n                        isWebSocket={isWebSocket}\n                    />\n                </Grid>\n                <Grid item md={1} xs={0} />\n                <Grid item md={11} xs={12}>\n                    <Grid container direction='row' justify='flex-start' alignItems='center' spacing={2}>\n                        <Grid item>\n                            <Button\n                                id='itest-create-default-api-button'\n                                variant='contained'\n                                color='primary'\n                                disabled={isAPICreateDisabled || !apiInputs.isFormValid}\n                                onClick={createAPIOnly}\n                            >\n                                Create\n                                {' '}\n                                {isCreating && !isPublishButtonClicked && <CircularProgress size={24} />}\n                            </Button>\n                        </Grid>\n                        {!AuthManager.isNotPublisher() && (\n                            <Grid item>\n                                <Button\n                                    id='itest-id-apicreatedefault-createnpublish'\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={isDeploying || isRevisioning || !isPublishable\n                                        || isAPICreateDisabled || !apiInputs.isFormValid}\n                                    onClick={createAndPublish}\n                                >\n                                    {(!isPublishing && !isRevisioning && !isDeploying) && 'Create & Publish'}\n                                    {(isPublishing || isRevisioning || isDeploying) && <CircularProgress size={24} />}\n                                    {isCreating && isPublishing && 'Creating API . . .'}\n                                    {!isCreating && isRevisioning && !isDeploying && 'Creating Revision . . .'}\n                                    {!isCreating && isPublishing\n                                        && !isRevisioning && !isDeploying && 'Publishing API . . .'}\n                                    {!isCreating && isPublishing\n                                        && !isRevisioning && isDeploying && 'Deploying Revision . . .'}\n                                </Button>\n                            </Grid>\n                        )}\n                        <Grid item>\n                            <Link to='/apis/'>\n                                <Button variant='text'>\n                                    <FormattedMessage\n                                        id='Apis.Create.Default.APICreateDefault.cancel'\n                                        defaultMessage='Cancel'\n                                    />\n                                </Button>\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </APICreateBase>\n    );\n}\nAPICreateDefault.defaultProps = {\n    isWebSocket: false,\n    isAPIProduct: false,\n};\nAPICreateDefault.WORKFLOW_STATUS = {\n    CREATED: 'CREATED',\n};\nAPICreateDefault.propTypes = {\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n    isAPIProduct: PropTypes.shape({}),\n    isWebSocket: PropTypes.shape({}),\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\nexport default withRouter(injectIntl(APICreateDefault));\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\n\nimport { Route, Switch } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\n\nimport APICreateDefault from './Default/APICreateDefault';\nimport APIProductCreateWrapper from './APIProduct/APIProductCreateWrapper';\nimport ApiCreateSwagger from './OpenAPI/ApiCreateOpenAPI';\nimport ApiCreateWSDL from './WSDL/ApiCreateWSDL';\nimport ApiCreateGraphQL from './GraphQL/ApiCreateGraphQL';\nimport ApiCreateWebSocket from './WebSocket/ApiCreateWebSocket';\nimport APICreateStreamingAPI from './StreamingAPI/APICreateStreamingAPI';\nimport APICreateAsyncAPI from './AsyncAPI/ApiCreateAsyncAPI';\n\nconst styles = {\n    content: {\n        flexGrow: 1,\n    },\n};\n\n/**\n *\n * Handle routing for all types of API create creations, If you want to add new API type create page,\n * Please use `APICreateBase` and `DefaultAPIForm` components to do so , Don't wrap `APICreateDefault` component\n * @param {*} props\n * @returns @inheritdoc\n */\nfunction APICreateRoutes(props) {\n    const { classes } = props;\n    return (\n        <div className={classes.content}>\n            <Switch>\n                <Route path='/apis/create/rest' component={APICreateDefault} />\n                <Route path='/api-products/create' component={APIProductCreateWrapper} />\n                <Route path='/apis/create/graphQL' component={ApiCreateGraphQL} />\n                <Route path='/apis/create/openapi' component={ApiCreateSwagger} />\n                <Route path='/apis/create/wsdl' component={ApiCreateWSDL} />\n                {/* TODO: Remove ApiCreateWebSocket components and associated routes */}\n                <Route path='/apis/create/ws' component={ApiCreateWebSocket} />\n                <Route path='/apis/create/streamingapi/:apiType' component={APICreateStreamingAPI} />\n                <Route path='/apis/create/asyncapi' component={APICreateAsyncAPI} />\n                <Route component={ResourceNotFound} />\n            </Switch>\n        </div>\n    );\n}\n\nAPICreateRoutes.propTypes = {\n    classes: PropTypes.shape({ content: PropTypes.string }).isRequired,\n};\n\nexport default withStyles(styles)(APICreateRoutes);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useReducer, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport APIProduct from 'AppData/APIProduct';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport APICreateProductBase from 'AppComponents/Apis/Create/Components/APICreateProductBase';\nimport DefaultAPIForm from 'AppComponents/Apis/Create/Components/DefaultAPIForm';\nimport ProductResourcesEditWorkspace from 'AppComponents/Apis/Details/ProductResources/ProductResourcesEditWorkspace';\nimport API from 'AppData/api';\nimport AuthManager from 'AppData/AuthManager';\nimport { useAppContext } from 'AppComponents/Shared/AppContext';\n\nconst useStyles = makeStyles((theme) => ({\n    Paper: {\n        height: '40px',\n    },\n    saveButton: {\n        padding: '0px 0px 0px 10px',\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingBottom: theme.spacing(2),\n    },\n    buttonWrapper: {\n        marginTop: theme.spacing(4),\n    },\n    alternativeLabel: {\n        marginTop: theme.spacing(1),\n    },\n}));\n\n/**\n * Handle API creation from GraphQL Definition.\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function ApiProductCreateWrapper(props) {\n    const { history } = props;\n    const intl = useIntl();\n    const [wizardStep, setWizardStep] = useState(0);\n    const [apiResources, setApiResources] = useState([]);\n    const { settings } = useAppContext();\n    const [isPublishButtonClicked, setIsPublishButtonClicked] = useState(false);\n    const [isRevisioning, setIsRevisioning] = useState(false);\n    const [isDeploying, setIsDeploying] = useState(false);\n    const [isPublishing, setIsPublishing] = useState(false);\n\n    const [policies, setPolicies] = useState([]);\n\n    useEffect(() => {\n        API.policies('subscription').then((response) => {\n            const allPolicies = response.body.list;\n            if (allPolicies.length === 0) {\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Create.APIProduct.APIProductCreateWrapper.error.policies.not.available',\n                    defaultMessage: 'Throttling policies not available. Contact your administrator',\n                }));\n            } else if (allPolicies.filter((p) => p.name === 'Unlimited').length > 0) {\n                setPolicies(['Unlimited']);\n            } else {\n                setPolicies([allPolicies[0].name]);\n            }\n        });\n    }, []);\n    const pageTitle = (\n        <>\n            <Typography variant='h5'>\n                <FormattedMessage\n                    id='Apis.Create.APIProduct.APIProductCreateWrapper.heading'\n                    defaultMessage='Create an API Product'\n                />\n            </Typography>\n            <Typography variant='caption'>\n                <FormattedMessage\n                    id='Apis.Create.APIProduct.APIProductCreateWrapper.sub.heading'\n                    defaultMessage={\n                        'Create an API Product by providing a Name, a Context, Resources, '\n                        + 'and Business Plans (optional).'\n                    }\n                />\n            </Typography>\n        </>\n    );\n    /**\n     *\n     * Reduce the events triggered from API input fields to current state\n     * @param {*} currentState\n     * @param {*} inputAction\n     * @returns\n     */\n    function apiInputsReducer(currentState, inputAction) {\n        const { action, value } = inputAction;\n        switch (action) {\n            case 'type':\n            case 'name':\n            case 'context':\n            case 'version':\n            case 'isFormValid':\n                return { ...currentState, [action]: value };\n            case 'apiResources':\n                return { ...currentState, [action]: value };\n            case 'preSetAPI':\n                return {\n                    ...currentState,\n                    name: value.name.replace(/[&/\\\\#,+()$~%.'\":*?<>{}\\s]/g, ''),\n                    context: value.context,\n                };\n            default:\n                return currentState;\n        }\n    }\n\n    const [apiInputs, inputsDispatcher] = useReducer(apiInputsReducer, {\n        type: 'ApiProductCreateWrapper',\n        inputValue: '',\n        formValidity: false,\n    });\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function handleOnChange(event) {\n        const { name: action, value } = event.target;\n        inputsDispatcher({ action, value });\n    }\n\n    /**\n     *\n     * Set the validity of the API Inputs form\n     * @param {*} isValidForm\n     * @param {*} validationState\n     */\n    function handleOnValidate(isFormValid) {\n        inputsDispatcher({\n            action: 'isFormValid',\n            value: isFormValid,\n        });\n    }\n    function getSteps() {\n        return [\n            <FormattedMessage\n                variant='caption'\n                id='Apis.Create.APIProduct.APIProductCreateWrapper.defineProvide'\n                defaultMessage='Define API Product'\n            />, <FormattedMessage\n                variant='caption'\n                id='Apis.Create.APIProduct.APIProductCreateWrapper.resources'\n                defaultMessage='Add Resources'\n            />];\n    }\n\n    const [isCreating, setCreating] = useState();\n    const classes = useStyles();\n    const steps = getSteps();\n    let newAPIProduct;\n\n    const createAPIProduct = () => {\n        setCreating(true);\n        const {\n            name, context,\n        } = apiInputs;\n        const apiData = {\n            name,\n            context,\n            policies,\n            apis: apiResources,\n        };\n        apiData.transport = ['http', 'https'];\n        newAPIProduct = new APIProduct(apiData);\n        const promisedCreatedAPIProduct = newAPIProduct\n            .saveProduct(apiData)\n            .then((apiProduct) => {\n                Alert.info('API Product created successfully');\n                return apiProduct;\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error('Something went wrong while adding the API Product');\n                }\n            })\n            .finally(() => setCreating(false));\n        return promisedCreatedAPIProduct.finally(() => setCreating(false));\n    };\n\n    const createAPIProductOnly = () => {\n        createAPIProduct().then((apiProduct) => {\n            history.push(`/api-products/${apiProduct.id}/overview`);\n        });\n    };\n\n    const createAndPublishAPIProduct = () => {\n        setIsPublishButtonClicked(true);\n        createAPIProduct()\n            .then((apiProduct) => {\n                setIsRevisioning(true);\n                Alert.info('API Product created successfully');\n                const body = {\n                    description: 'Initial Revision',\n                };\n                newAPIProduct.createProductRevision(apiProduct.id, body)\n                    .then((api1) => {\n                        setIsRevisioning(false);\n                        const revisionId = api1.body.id;\n                        Alert.info('API Revision created successfully');\n                        const envList = settings.environment.map((env) => env.name);\n                        const body1 = [];\n                        const getFirstVhost = (envName) => {\n                            const env = settings.environment.find(\n                                (e) => e.name === envName && e.vhosts.length > 0,\n                            );\n                            return env && env.vhosts[0].host;\n                        };\n                        if (envList && envList.length > 0) {\n                            if (envList.includes('Default') && getFirstVhost('Default')) {\n                                body1.push({\n                                    name: 'Default',\n                                    displayOnDevportal: true,\n                                    vhost: getFirstVhost('Default'),\n                                });\n                            } else if (getFirstVhost(envList[0])) {\n                                body1.push({\n                                    name: envList[0],\n                                    displayOnDevportal: true,\n                                    vhost: getFirstVhost(envList[0]),\n                                });\n                            }\n                        }\n                        setIsDeploying(true);\n                        newAPIProduct.deployProductRevision(apiProduct.id, revisionId, body1)\n                            .then(() => {\n                                Alert.info('API Product Revision Deployed Successfully');\n                                setIsDeploying(false);\n                                setIsPublishing(true);\n                                newAPIProduct.updateLcState(apiProduct.id, 'Publish')\n                                    .then((response) => {\n                                        const { workflowStatus } = response.body;\n                                        if (workflowStatus === 'CREATED') {\n                                            Alert.info(intl.formatMessage({\n                                                id: 'Apis.Create.APIProduct.APIProductCreateWrapper.publishStatus',\n                                                defaultMessage: 'Lifecycle state change request has been sent',\n                                            }));\n                                        } else {\n                                            Alert.info(intl.formatMessage({\n                                                id: 'Apis.Create.APIProduct.APIProductCreateWrapper.otherStatus',\n                                                defaultMessage: 'API Product status updated successfully',\n                                            }));\n                                        }\n                                        history.push(`/api-products/${apiProduct.id}/overview`);\n                                    });\n                            })\n                            .catch((error) => {\n                                if (error.response) {\n                                    Alert.error(error.response.body.description);\n                                } else {\n                                    Alert.error(intl.formatMessage({\n                                        id: 'Apis.APIProductCreateWrapper.error.errorMessage.deploy.revision',\n                                        defaultMessage: 'Something went wrong while deploying the API Product Revision',\n                                    }));\n                                }\n                                console.error(error);\n                            })\n                            .finally(() => {\n                                setIsPublishing(false);\n                                setIsPublishButtonClicked(false);\n                            });\n                    })\n                    .catch((error) => {\n                        if (error.response) {\n                            Alert.error(error.response.body.description);\n                        } else {\n                            Alert.error(intl.formatMessage({\n                                id: 'Apis.APIProductCreateWrapper.error.errorMessage.create.revision',\n                                defaultMessage: 'Something went wrong while creating the API Product Revision',\n                            }));\n                        }\n                        console.error(error);\n                    });\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error('Something went wrong while adding the API Product');\n                }\n            })\n            .finally(() => setCreating(false));\n    };\n\n    return (\n        <>\n            <APICreateProductBase\n                title={pageTitle}\n            >\n                <Box>\n                    {wizardStep === 0 && (\n                        <Stepper alternativeLabel activeStep={0}>\n                            {steps.map((label) => (\n                                <Step key={label}>\n                                    <StepLabel className={classes.alternativeLabel}>{label}</StepLabel>\n                                </Step>\n                            ))}\n\n                        </Stepper>\n                    )}\n                    {wizardStep === 1 && (\n                        <Stepper alternativeLabel activeStep={1}>\n                            {steps.map((label) => (\n                                <Step key={label}>\n                                    <StepLabel>{label}</StepLabel>\n                                </Step>\n                            ))}\n                        </Stepper>\n                    )}\n                </Box>\n                <Grid container spacing={2}>\n                    {wizardStep === 0 && <Grid item md={12} />}\n                    {wizardStep === 0 && <Grid item md={1} />}\n                    <Grid item md={wizardStep === 0 ? 11 : 12}>\n                        {wizardStep === 0 && (\n                            <DefaultAPIForm\n                                onValidate={handleOnValidate}\n                                onChange={handleOnChange}\n                                api={apiInputs}\n                                isAPIProduct\n                            />\n                        )}\n                        {wizardStep === 1 && (\n                            <ProductResourcesEditWorkspace\n                                apiResources={apiResources}\n                                setApiResources={setApiResources}\n                                isStateCreate\n                                api={apiInputs}\n                            />\n                        )}\n                    </Grid>\n                    {wizardStep === 0 && <Grid item md={1} />}\n                    <Grid item md={9}>\n                        <Grid\n                            className={wizardStep === 1 && classes.saveButton}\n                            container\n                            direction='row'\n                            justify='flex-start'\n                            alignItems='center'\n                            spacing={2}\n                        >\n                            <Grid item>\n                                {wizardStep === 1\n                                    && (\n                                        <Button\n                                            onClick={() => setWizardStep((step) => step - 1)}\n                                        >\n                                            <FormattedMessage\n                                                id='Apis.Create.APIProduct.APIProductCreateWrapper.back'\n                                                defaultMessage='Back'\n                                            />\n                                        </Button>\n                                    )}\n                                {wizardStep === 0 && (\n                                    <Link to='/api-products/'>\n                                        <Button>\n                                            <FormattedMessage\n                                                id='Apis.Create.APIProduct.APIProductCreateWrapper.cancel'\n                                                defaultMessage='Cancel'\n                                            />\n                                        </Button>\n                                    </Link>\n                                )}\n                            </Grid>\n                            <Grid item>\n                                {wizardStep === 1 && (\n                                    <Button\n                                        variant='contained'\n                                        color='primary'\n                                        disabled={!apiInputs.isFormValid || isCreating || (apiResources.length === 0)\n                                                    || isPublishButtonClicked}\n                                        onClick={createAPIProductOnly}\n                                        id='create-api-product-btn'\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Create.APIProduct.APIProductCreateWrapper.create'\n                                            defaultMessage='Create'\n                                        />\n                                        {isCreating && !isPublishButtonClicked && <CircularProgress size={24} />}\n                                    </Button>\n                                )}\n                                {wizardStep === 0 && (\n                                    <Button\n                                        onClick={() => setWizardStep((step) => step + 1)}\n                                        variant='contained'\n                                        color='primary'\n                                        disabled={!apiInputs.isFormValid}\n                                        id='api-product-next-btn'\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Create.APIProduct.APIProductCreateWrapper.next'\n                                            defaultMessage='Next'\n                                        />\n                                    </Button>\n                                )}\n                            </Grid>\n                            <Grid item>\n                                {wizardStep === 1 && !AuthManager.isNotPublisher() && (\n                                    <Button\n                                        variant='contained'\n                                        color='primary'\n                                        disabled={\n                                            !apiInputs.isFormValid || isCreating || (apiResources.length === 0)\n                                            || isDeploying || isRevisioning || !apiInputs.isFormValid\n                                        }\n                                        onClick={createAndPublishAPIProduct}\n                                    >\n                                        {(!isPublishing && !isRevisioning && !isDeploying) && 'Create & Publish'}\n                                        {(isPublishing || isRevisioning || isDeploying)\n                                        && <CircularProgress size={24} />}\n                                        {isCreating && isPublishing && 'Creating API Product. . .'}\n                                        {!isCreating && isRevisioning && !isDeploying && 'Creating Revision . . .'}\n                                        {!isCreating && isPublishing\n                                        && !isRevisioning && !isDeploying && 'Publishing API Product. . .'}\n                                        {!isCreating && isPublishing\n                                        && !isRevisioning && isDeploying && 'Deploying Revision . . .'}\n                                    </Button>\n                                )}\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </APICreateProductBase>\n        </>\n\n    );\n}\n\nApiProductCreateWrapper.propTypes = {\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\n/**\n * Base component for all API create forms\n *\n * @param {Object} props title and children components are expected\n * @returns {React.Component} Base element\n */\nexport default function APICreateProductBase(props) {\n    const { title, children } = props;\n    return (\n        <Grid container spacing={3}>\n            <Grid item sm={12} md={12} />\n            {/*\n            Following two grids control the placement of whole create page\n            For centering the content better use `container` props, but instead used an empty grid item for flexibility\n             */}\n            <Grid item sm={0} md={2} />\n            <Grid item sm={12} md={8}>\n                <Grid container spacing={5}>\n                    <Grid item md={12}>\n                        {title}\n                    </Grid>\n                    <Grid item md={12}>\n                        <Paper elevation={0}>{children}</Paper>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item sm={0} md={2} />\n        </Grid>\n    );\n}\nAPICreateProductBase.propTypes = {\n    title: PropTypes.element.isRequired,\n    children: PropTypes.element.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useReducer, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage } from 'react-intl';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DefaultAPIForm from 'AppComponents/Apis/Create/Components/DefaultAPIForm';\nimport APICreateBase from 'AppComponents/Apis/Create/Components/APICreateBase';\n\nimport ProvideOpenAPI from './Steps/ProvideOpenAPI';\n\n/**\n     *\n     * Reduce the events triggered from API input fields to current state\n     * @param {*} currentState\n     * @param {*} inputAction\n     * @returns\n     */\nfunction apiInputsReducer(currentState, inputAction) {\n    const { action, value } = inputAction;\n    switch (action) {\n        case 'type':\n        case 'inputValue':\n        case 'name':\n        case 'version':\n        case 'endpoint':\n        case 'context':\n        case 'policies':\n        case 'isFormValid':\n            return { ...currentState, [action]: value };\n        case 'inputType':\n            return { ...currentState, [action]: value, inputValue: value === 'url' ? '' : null };\n        case 'preSetAPI':\n            return {\n                ...currentState,\n                name: value.name.replace(/[&/\\\\#,+()$~%.'\":*?<>{}\\s]/g, ''),\n                version: value.version,\n                context: value.context,\n                endpoint: value.endpoints && value.endpoints[0],\n            };\n        default:\n            return currentState;\n    }\n}\n/**\n * Handle API creation from OpenAPI Definition.\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function ApiCreateOpenAPI(props) {\n    const [wizardStep, setWizardStep] = useState(0);\n    const { history } = props;\n\n    const [apiInputs, inputsDispatcher] = useReducer(apiInputsReducer, {\n        type: 'ApiCreateOpenAPI',\n        inputType: 'url',\n        inputValue: '',\n        formValidity: false,\n    });\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function handleOnChange(event) {\n        const { name: action, value } = event.target;\n        inputsDispatcher({ action, value });\n    }\n\n    /**\n     *\n     * Set the validity of the API Inputs form\n     * @param {*} isValidForm\n     * @param {*} validationState\n     */\n    function handleOnValidate(isFormValid) {\n        inputsDispatcher({\n            action: 'isFormValid',\n            value: isFormValid,\n        });\n    }\n\n    const [isCreating, setCreating] = useState();\n    /**\n     *\n     *\n     * @param {*} params\n     */\n    function createAPI() {\n        setCreating(true);\n        const {\n            name, version, context, endpoint, policies, inputValue, inputType,\n        } = apiInputs;\n        const additionalProperties = {\n            name,\n            version,\n            context,\n            policies,\n        };\n        if (endpoint) {\n            additionalProperties.endpointConfig = {\n                endpoint_type: 'http',\n                sandbox_endpoints: {\n                    url: endpoint,\n                },\n                production_endpoints: {\n                    url: endpoint,\n                },\n            };\n        }\n        const newAPI = new API(additionalProperties);\n        const promisedResponse = inputType === 'file'\n            ? newAPI.importOpenAPIByFile(inputValue) : newAPI.importOpenAPIByUrl(inputValue);\n        promisedResponse\n            .then((api) => {\n                Alert.info('API created successfully');\n                history.push(`/apis/${api.id}/overview`);\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error('Something went wrong while adding the API');\n                }\n                console.error(error);\n            })\n            .finally(() => setCreating(false));\n    }\n\n    return (\n        <APICreateBase\n            title={(\n                <>\n                    <Typography variant='h5'>\n                        <FormattedMessage\n                            id='Apis.Create.OpenAPI.ApiCreateOpenAPI.heading'\n                            defaultMessage='Create an API using an OpenAPI definition.'\n                        />\n                    </Typography>\n                    <Typography variant='caption'>\n                        <FormattedMessage\n                            id='Apis.Create.OpenAPI.ApiCreateOpenAPI.sub.heading'\n                            defaultMessage='Create an API using an existing OpenAPI definition file or URL.'\n                        />\n                    </Typography>\n                </>\n            )}\n        >\n            <Box>\n                <Stepper alternativeLabel activeStep={0}>\n                    <Step>\n                        <StepLabel>\n                            <FormattedMessage\n                                id='Apis.Create.OpenAPI.ApiCreateOpenAPI.wizard.one'\n                                defaultMessage='Provide OpenAPI'\n                            />\n                        </StepLabel>\n                    </Step>\n\n                    <Step>\n                        <StepLabel>\n                            <FormattedMessage\n                                id='Apis.Create.OpenAPI.ApiCreateOpenAPI.wizard.two'\n                                defaultMessage='Create API'\n                            />\n                        </StepLabel>\n                    </Step>\n                </Stepper>\n            </Box>\n\n            <Grid container spacing={3}>\n                <Grid item xs={12} />\n                <Grid item xs={1} />\n                <Grid item xs={11}>\n                    {wizardStep === 0 && (\n                        <ProvideOpenAPI\n                            onValidate={handleOnValidate}\n                            apiInputs={apiInputs}\n                            inputsDispatcher={inputsDispatcher}\n                        />\n                    )}\n                    {wizardStep === 1 && (\n                        <DefaultAPIForm\n                            onValidate={handleOnValidate}\n                            onChange={handleOnChange}\n                            api={apiInputs}\n                            isAPIProduct={false}\n                        />\n                    )}\n                </Grid>\n                <Grid item xs={1} />\n                <Grid item xs={11}>\n                    <Grid container direction='row' justify='flex-start' alignItems='center' spacing={2}>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Link to='/apis/'>\n                                    <Button>\n                                        <FormattedMessage\n                                            id='Apis.Create.OpenAPI.ApiCreateOpenAPI.cancel'\n                                            defaultMessage='Cancel'\n                                        />\n                                    </Button>\n                                </Link>\n                            )}\n                            {wizardStep === 1 && (\n                                <Button onClick={() => setWizardStep((step) => step - 1)}>\n                                    Back\n                                </Button>\n                            )}\n                        </Grid>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Button\n                                    onClick={() => setWizardStep((step) => step + 1)}\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid}\n                                    id='open-api-create-next-btn'\n                                >\n                                    Next\n                                </Button>\n                            )}\n                            {wizardStep === 1 && (\n                                <Button\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid || isCreating}\n                                    onClick={createAPI}\n                                    id='open-api-create-btn'\n                                >\n                                    Create\n                                    {' '}\n                                    {isCreating && <CircularProgress size={24} />}\n                                </Button>\n                            )}\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </APICreateBase>\n    );\n}\n\nApiCreateOpenAPI.propTypes = {\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useReducer, useState, useEffect } from 'react';\nimport API from 'AppData/api';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport Wsdl from 'AppData/Wsdl';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { Link as MUILink } from '@material-ui/core';\nimport { Alert as MUIAlert, AlertTitle } from '@material-ui/lab';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DefaultAPIForm from 'AppComponents/Apis/Create/Components/DefaultAPIForm';\nimport APICreateBase from 'AppComponents/Apis/Create/Components/APICreateBase';\n\nimport ProvideWSDL from './Steps/ProvideWSDL';\n\n/**\n * Handle API creation from WSDL.\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function ApiCreateWSDL(props) {\n    const intl = useIntl();\n    const [wizardStep, setWizardStep] = useState(0);\n    const { history } = props;\n    const [policies, setPolicies] = useState([]);\n\n    useEffect(() => {\n        API.policies('subscription').then((response) => {\n            const allPolicies = response.body.list;\n            if (allPolicies.length === 0) {\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Create.WSDL.ApiCreateWSDL.error.policies.not.available',\n                    defaultMessage: 'Throttling policies not available. Contact your administrator',\n                }));\n            } else if (allPolicies.filter((p) => p.name === 'Unlimited').length > 0) {\n                setPolicies(['Unlimited']);\n            } else {\n                setPolicies([allPolicies[0].name]);\n            }\n        });\n    }, []);\n    /**\n     *\n     * Reduce the events triggered from API input fields to current state\n     */\n    function apiInputsReducer(currentState, inputAction) {\n        const { action, value } = inputAction;\n        switch (action) {\n            case 'type':\n            case 'inputValue':\n            case 'name':\n            case 'version':\n            case 'endpoint':\n            case 'context':\n            case 'isFormValid':\n                return { ...currentState, [action]: value };\n            case 'inputType':\n                return { ...currentState, [action]: value, inputValue: value === 'url' ? '' : null };\n            default:\n                return currentState;\n        }\n    }\n\n    const [apiInputs, inputsDispatcher] = useReducer(apiInputsReducer, {\n        type: 'SOAP',\n        inputType: 'url',\n        inputValue: '',\n        formValidity: false,\n        mode: 'create',\n    });\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function handleOnChange(event) {\n        const { name: action, value } = event.target;\n        inputsDispatcher({ action, value });\n    }\n\n    /**\n     *\n     * Set the validity of the API Inputs form\n     * @param {*} isValidForm\n     * @param {*} validationState\n     */\n    function handleOnValidate(isFormValid) {\n        inputsDispatcher({\n            action: 'isFormValid',\n            value: isFormValid,\n        });\n    }\n\n    const [isCreating, setCreating] = useState();\n    /**\n     *\n     *\n     * @param {*} params\n     */\n    function createAPI() {\n        setCreating(true);\n        const {\n            name, version, context, endpoint, type,\n        } = apiInputs;\n        const additionalProperties = {\n            name,\n            version,\n            context,\n            policies,\n        };\n        if (endpoint) {\n            additionalProperties.endpointConfig = {\n                endpoint_type: type === 'SOAPTOREST' ? 'address' : 'http',\n                sandbox_endpoints: {\n                    type: type === 'SOAPTOREST' ? 'address' : undefined,\n                    url: endpoint,\n                },\n                production_endpoints: {\n                    type: type === 'SOAPTOREST' ? 'address' : undefined,\n                    url: endpoint,\n                },\n            };\n        }\n        let promisedWSDLImport;\n        if (apiInputs.inputType === 'url') {\n            promisedWSDLImport = Wsdl.importByUrl(apiInputs.inputValue, additionalProperties, apiInputs.type);\n        } else {\n            promisedWSDLImport = Wsdl.importByFileOrArchive(apiInputs.inputValue, additionalProperties, apiInputs.type);\n        }\n        promisedWSDLImport\n            .then((api) => {\n                Alert.info('API created successfully');\n                history.push(`/apis/${api.id}/overview`);\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error('Something went wrong while adding the API');\n                }\n                console.error(error);\n            })\n            .finally(() => setCreating(false));\n    }\n\n    return (\n        <APICreateBase\n            title={(\n                <>\n                    <Box mb={2}>\n                        <MUIAlert severity='warning'>\n                            <AlertTitle>\n                                <FormattedMessage\n                                    id='Apis.Create.WSDL.ApiCreateWSDL.deprecated.msg'\n                                    defaultMessage='This feature is deprecated. \n                                    Please use the WSO2 Integration Studio as an alternative'\n                                />\n                            </AlertTitle>\n                            <FormattedMessage\n                                id='Apis.Create.WSDL.ApiCreateWSDL.deprecated.msg.info.link.msg'\n                                defaultMessage='Integration Studio Documentation: '\n                            />\n                            <MUILink\n                                // eslint-disable-next-line\n                                href={`https://apim.docs.wso2.com/en/4.1.0/integrate/develop/creating-artifacts/creating-an-api/`}\n                                target='_blank'>\n                                https://apim.docs.wso2.com/en/4.1.0/integrate/develop/\n                                creating-artifacts/creating-an-api/\n                            </MUILink>\n                        </MUIAlert>\n                    </Box>\n                    <Typography variant='h5'>\n                        <FormattedMessage\n                            id='Apis.Create.WSDL.ApiCreateWSDL.heading'\n                            defaultMessage='Expose a SOAP Service as a REST API'\n                        />\n                    </Typography>\n                    <Typography variant='caption'>\n                        <FormattedMessage\n                            id='Apis.Create.WSDL.ApiCreateWSDL.sub.heading'\n                            defaultMessage={\n                                'Expose an existing SOAP service as a REST API by importing the WSDL of the '\n                                + 'SOAP service.'\n                            }\n                        />\n                    </Typography>\n                </>\n            )}\n        >\n            <Box>\n                <Stepper alternativeLabel activeStep={wizardStep}>\n                    <Step>\n                        <StepLabel>Provide WSDL</StepLabel>\n                    </Step>\n\n                    <Step>\n                        <StepLabel>Create API</StepLabel>\n                    </Step>\n                </Stepper>\n            </Box>\n\n            <Grid container spacing={3}>\n                <Grid item md={12} />\n                <Grid item md={1} />\n                <Grid item md={11}>\n                    {wizardStep === 0 && (\n                        <ProvideWSDL\n                            onValidate={handleOnValidate}\n                            apiInputs={apiInputs}\n                            inputsDispatcher={inputsDispatcher}\n                        />\n                    )}\n                    {wizardStep === 1 && (\n                        <DefaultAPIForm\n                            onValidate={handleOnValidate}\n                            onChange={handleOnChange}\n                            api={apiInputs}\n                            isAPIProduct={false}\n                        />\n                    )}\n                </Grid>\n                <Grid item md={1} />\n                <Grid item md={9}>\n                    <Grid container direction='row' justify='flex-start' alignItems='center' spacing={2}>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Link to='/apis/'>\n                                    <Button>\n                                        <FormattedMessage\n                                            id='Apis.Create.OpenAPI.ApiCreateOpenAPI.cancel'\n                                            defaultMessage='Cancel'\n                                        />\n                                    </Button>\n                                </Link>\n                            )}\n                            {wizardStep === 1 && (\n                                <Button onClick={\n                                    () => setWizardStep((step) => step - 1)\n                                }\n                                >\n                                    Back\n                                </Button>\n                            )}\n                        </Grid>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Button\n                                    onClick={() => setWizardStep((step) => step + 1)}\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid}\n                                >\n                                    Next\n                                </Button>\n                            )}\n                            {wizardStep === 1 && (\n                                <Button\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid || isCreating}\n                                    onClick={createAPI}\n                                >\n                                    Create\n                                    {' '}\n                                    {isCreating && <CircularProgress size={24} />}\n                                </Button>\n                            )}\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </APICreateBase>\n    );\n}\n\nApiCreateWSDL.propTypes = {\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useReducer, useState, useEffect } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport { Link, useHistory } from 'react-router-dom';\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DefaultAPIForm from 'AppComponents/Apis/Create/Components/DefaultAPIForm';\nimport APICreateBase from 'AppComponents/Apis/Create/Components/APICreateBase';\n\nimport ProvideGraphQL from './Steps/ProvideGraphQL';\n\n/**\n * Handle API creation from GraphQL Definition.\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function ApiCreateGraphQL() {\n    const intl = useIntl();\n    const [wizardStep, setWizardStep] = useState(0);\n    const history = useHistory();\n    const [policies, setPolicies] = useState([]);\n\n    useEffect(() => {\n        API.policies('subscription').then((response) => {\n            const allPolicies = response.body.list;\n            if (allPolicies.length === 0) {\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Create.GraphQL.ApiCreateGraphQL.error.policies.not.available',\n                    defaultMessage: 'Throttling policies not available. Contact your administrator',\n                }));\n            } else if (allPolicies.filter((p) => p.name === 'Unlimited').length > 0) {\n                setPolicies(['Unlimited']);\n            } else {\n                setPolicies([allPolicies[0].name]);\n            }\n        });\n    }, []);\n    /**\n     *\n     * Reduce the events triggered from API input fields to current state\n     * @param {*} currentState\n     * @param {*} inputAction\n     * @returns\n     */\n    function apiInputsReducer(currentState, inputAction) {\n        const { action, value } = inputAction;\n        switch (action) {\n            case 'type':\n            case 'inputValue':\n            case 'name':\n            case 'version':\n            case 'endpoint':\n            case 'context':\n            case 'isFormValid':\n                return { ...currentState, [action]: value };\n            case 'inputType':\n                return { ...currentState, [action]: value, inputValue: value === 'url' ? '' : null };\n            case 'graphQLInfo':\n                return { ...currentState, [action]: value };\n            case 'preSetAPI':\n                return {\n                    ...currentState,\n                    name: value.name.replace(/[&/\\\\#,+()$~%.'\":*?<>{}\\s]/g, ''),\n                    version: value.version,\n                    context: value.context,\n                };\n            default:\n                return currentState;\n        }\n    }\n\n    const [apiInputs, inputsDispatcher] = useReducer(apiInputsReducer, {\n        type: 'ApiCreateGraphQL',\n        inputType: 'file',\n        inputValue: '',\n        formValidity: false,\n    });\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function handleOnChange(event) {\n        const { name: action, value } = event.target;\n        inputsDispatcher({ action, value });\n    }\n\n    /**\n     *\n     * Set the validity of the API Inputs form\n     * @param {*} isValidForm\n     * @param {*} validationState\n     */\n    function handleOnValidate(isFormValid) {\n        inputsDispatcher({\n            action: 'isFormValid',\n            value: isFormValid,\n        });\n    }\n\n    const [isCreating, setCreating] = useState();\n    /**\n     *\n     *\n     * @param {*} params\n     */\n    function createAPI() {\n        setCreating(true);\n        const {\n            name,\n            version,\n            context,\n            endpoint,\n            implementationType,\n            inputValue,\n            graphQLInfo: { operations },\n        } = apiInputs;\n        const additionalProperties = {\n            name,\n            version,\n            context,\n            policies,\n            operations,\n        };\n        const uploadMethod = 'file';\n        if (endpoint) {\n            additionalProperties.endpointConfig = {\n                endpoint_type: 'http',\n                sandbox_endpoints: {\n                    url: endpoint,\n                },\n                production_endpoints: {\n                    url: endpoint,\n                },\n            };\n        }\n        const newApi = new API(additionalProperties);\n        const apiData = {\n            additionalProperties: JSON.stringify(additionalProperties),\n            implementationType,\n            [uploadMethod]: uploadMethod,\n            file: inputValue,\n        };\n\n        newApi\n            .importGraphQL(apiData)\n            .then((response) => {\n                const uuid = response.obj.id;\n                Alert.info(`${name} API created successfully`);\n                history.push(`/apis/${uuid}/overview`);\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error('Something went wrong while adding the API');\n                }\n                console.error(error);\n            })\n            .finally(() => setCreating(false));\n    }\n\n    return (\n        <APICreateBase\n            title={(\n                <>\n                    <Typography variant='h5'>\n                        <FormattedMessage\n                            id='Apis.Create.GraphQL.ApiCreateGraphQL.heading'\n                            defaultMessage='Create an API using a GraphQL SDL definition'\n                        />\n                    </Typography>\n                    <Typography variant='caption'>\n                        <FormattedMessage\n                            id='Apis.Create.GraphQL.ApiCreateGraphQL.sub.heading'\n                            defaultMessage='Create an API by importing an existing GraphQL SDL definition.'\n                        />\n                    </Typography>\n                </>\n            )}\n        >\n            <Box>\n                {wizardStep === 0 && (\n                    <Stepper alternativeLabel activeStep={0}>\n                        <Step>\n                            <StepLabel>\n                                <FormattedMessage\n                                    id='Apis.Create.GraphQL.ApiCreateGraphQL.wizard.one'\n                                    defaultMessage='Provide GraphQL'\n                                />\n                            </StepLabel>\n                        </Step>\n\n                        <Step>\n                            <StepLabel>\n                                <FormattedMessage\n                                    id='Apis.Create.GraphQL.ApiCreateGraphQL.wizard.two'\n                                    defaultMessage='Create API'\n                                />\n                            </StepLabel>\n                        </Step>\n                    </Stepper>\n                )}\n                {wizardStep === 1 && (\n                    <Stepper alternativeLabel activeStep={1}>\n                        <Step>\n                            <StepLabel>\n                                <FormattedMessage\n                                    id='Apis.Create.GraphQL.ApiCreateGraphQL.wizard.one'\n                                    defaultMessage='Provide GraphQL'\n                                />\n                            </StepLabel>\n                        </Step>\n\n                        <Step>\n                            <StepLabel>\n                                <FormattedMessage\n                                    id='Apis.Create.GraphQL.ApiCreateGraphQL.wizard.two'\n                                    defaultMessage='Create API'\n                                />\n                            </StepLabel>\n                        </Step>\n                    </Stepper>\n                )}\n            </Box>\n\n            <Grid container spacing={3} style={{ marginBottom: 20 }}>\n                <Grid item md={12} />\n                <Grid item md={1} />\n                <Grid item md={11}>\n                    {wizardStep === 0 && (\n                        <ProvideGraphQL\n                            onValidate={handleOnValidate}\n                            apiInputs={apiInputs}\n                            inputsDispatcher={inputsDispatcher}\n                        />\n                    )}\n                    {wizardStep === 1 && (\n                        <DefaultAPIForm\n                            onValidate={handleOnValidate}\n                            onChange={handleOnChange}\n                            api={apiInputs}\n                            isAPIProduct={false}\n                        />\n                    )}\n                </Grid>\n                <Grid item md={1} />\n                <Grid item md={9}>\n                    <Grid container direction='row' justify='flex-start' alignItems='center' spacing={2}>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Link to='/apis/'>\n                                    <Button>\n                                        <FormattedMessage\n                                            id='Apis.Create.OpenAPI.ApiCreateOpenAPI.cancel'\n                                            defaultMessage='Cancel'\n                                        />\n                                    </Button>\n                                </Link>\n                            )}\n                            {wizardStep === 1 && (\n                                <Button onClick={\n                                    () => setWizardStep((step) => step - 1)\n                                }\n                                >\n                                    <FormattedMessage\n                                        id='Apis.Create.GraphQL.ApiCreateGraphQL.back'\n                                        defaultMessage='Back'\n                                    />\n                                </Button>\n                            )}\n                        </Grid>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Button\n                                    onClick={() => setWizardStep((step) => step + 1)}\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid}\n                                    data-testid='create-graphql-next-btn'\n                                >\n                                    <FormattedMessage\n                                        id='Apis.Create.GraphQL.ApiCreateGraphQL.next'\n                                        defaultMessage='Next'\n                                    />\n                                </Button>\n                            )}\n                            {wizardStep === 1 && (\n                                <Button\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid || isCreating}\n                                    onClick={createAPI}\n                                    data-testid='itest-create-graphql-api-button'\n                                >\n                                    <FormattedMessage\n                                        id='Apis.Create.GraphQL.ApiCreateGraphQL.create'\n                                        defaultMessage='Create'\n                                    />\n                                    {' '}\n                                    {isCreating && <CircularProgress size={24} />}\n                                </Button>\n                            )}\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </APICreateBase>\n    );\n}\n","/**\n * Copyright (c) 2018, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\nimport APICreateDefault from 'AppComponents/Apis/Create/Default/APICreateDefault';\n\nconst ApiCreateWebSocket = () => {\n    return (<APICreateDefault isWebSocket />);\n};\nexport default ApiCreateWebSocket;\n","/**\n * Copyright (c) 2020, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React, { useReducer, useState, useEffect } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { withRouter } from 'react-router';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport { Link, useParams } from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport APICreateBase from 'AppComponents/Apis/Create/Components/APICreateBase';\nimport Banner from 'AppComponents/Shared/Banner';\nimport DefaultAPIForm from 'AppComponents/Apis/Create/Components/DefaultAPIForm';\nimport { usePublisherSettings } from 'AppComponents/Shared/AppContext';\nimport AuthManager from 'AppData/AuthManager';\n\nconst useStyles = makeStyles((theme) => ({\n    mandatoryStar: {\n        color: theme.palette.error.main,\n        marginLeft: theme.spacing(0.1),\n    },\n}));\n\nconst APICreateStreamingAPI = (props) => {\n    const { history } = props;\n    const intl = useIntl();\n    const { data: settings, isLoading, error: settingsError } = usePublisherSettings();\n    const [pageError, setPageError] = useState(null);\n    useEffect(() => {\n        if (settingsError) {\n            setPageError(settingsError.message);\n        }\n    }, [settingsError]);\n    const [isCreating, setIsCreating] = useState();\n    const [isPublishing, setIsPublishing] = useState(false);\n    const [isRevisioning, setIsRevisioning] = useState(false);\n    const [isDeploying, setIsDeploying] = useState(false);\n    const [isPublishButtonClicked, setIsPublishButtonClicked] = useState(false);\n    const classes = useStyles();\n    const [policies, setPolicies] = useState([]);\n    let { apiType } = useParams();\n    if (apiType) {\n        apiType = apiType.toUpperCase();\n    }\n    const isWebSub = (apiType === 'WEBSUB');\n\n    useEffect(() => {\n        API.asyncAPIPolicies().then((response) => {\n            const allPolicies = response.body.list;\n            if (allPolicies.length === 0) {\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Create.Default.APICreateDefault.error.policies.not.available',\n                    defaultMessage: 'Throttling policies not available. Contact your administrator',\n                }));\n            } else if (isWebSub && allPolicies.filter((p) => p.policyName === 'AsyncWHUnlimited').length > 0) {\n                setPolicies(['AsyncWHUnlimited']);\n            } else if (!isWebSub && allPolicies.filter((p) => p.policyName === 'AsyncUnlimited').length > 0) {\n                setPolicies(['AsyncUnlimited']);\n            } else {\n                setPolicies([allPolicies[0].policyName]);\n            }\n        });\n    }, []);\n\n    const protocols = [\n        {\n            displayName: 'WebSocket',\n            description: 'WebSocket API',\n        },\n        {\n            displayName: 'WebSub',\n            description: 'WebHook API based on WebSub specification',\n        },\n        {\n            displayName: 'SSE',\n            description: 'Server-Sent Events',\n        },\n    ];\n    const protocolKeys = {\n        WebSocket: 'WS',\n        SSE: 'SSE',\n        WebSub: 'WEBSUB',\n    };\n    const protocolDisplayNames = {\n        WS: 'WebSocket',\n        SSE: 'SSE',\n        WEBSUB: 'WebSub',\n    };\n    const [hideEndpoint, setHideEndpoint] = useState(!apiType || apiType === protocolKeys.WebSub);\n\n    /**\n     *\n     * Reduce the events triggered from API input fields to current state\n     */\n    function apiInputsReducer(currentState, inputAction) {\n        const { action, value } = inputAction;\n        switch (action) {\n            case 'name':\n            case 'version':\n            case 'context':\n            case 'endpoint':\n            case 'policies':\n            case 'isFormValid':\n                return { ...currentState, [action]: value };\n            case 'protocol':\n                setHideEndpoint(protocolKeys[value] === protocolKeys.WebSub);\n                return { ...currentState, [action]: protocolKeys[value] };\n            default:\n                return currentState;\n        }\n    }\n    const [apiInputs, inputsDispatcher] = useReducer(apiInputsReducer, {\n        formValidity: false,\n    });\n\n    const isAPICreatable = apiInputs.name && apiInputs.context && apiInputs.version && !isCreating;\n    // TODO: If WebSub API no endpoint is required. Or else check apiInputs.endpoint has a value.\n    const isPublishable = true;\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function handleOnChange(event) {\n        const { name: action, value } = event.target;\n        inputsDispatcher({ action, value });\n    }\n\n    /**\n     *\n     * Set the validity of the API Inputs form\n     * @param {*} isValidForm\n     * @param {*} validationState\n     */\n    function handleOnValidate(isFormValid) {\n        inputsDispatcher({\n            action: 'isFormValid',\n            value: isFormValid,\n        });\n    }\n\n    /**\n     *\n     */\n    function createAPI() {\n        setIsCreating(true);\n        const {\n            name, version, context, endpoint, protocol,\n        } = apiInputs;\n        const apiData = {\n            name,\n            version,\n            context,\n            endpoint,\n            type: apiType || protocol.toUpperCase(),\n            policies,\n        };\n\n        let endpointType = 'http';\n        if ((apiType && apiType.toUpperCase() === 'WS') || (protocol && protocol.toUpperCase() === 'WS')) {\n            endpointType = 'ws';\n        }\n        if (endpoint) {\n            apiData.endpointConfig = {\n                endpoint_type: endpointType,\n                sandbox_endpoints: {\n                    url: endpoint,\n                },\n                production_endpoints: {\n                    url: endpoint,\n                },\n            };\n        }\n\n\n        const newAPI = new API(apiData);\n        const promisedCreatedAPI = newAPI\n            .saveStreamingAPI()\n            .then((api) => {\n                Alert.info('API created successfully');\n                return api;\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error('Something went wrong while adding the API');\n                }\n                console.error(error);\n                setIsPublishing(false); // We don't publish if something when wrong\n            })\n            .finally(() => {\n                setIsCreating(false);\n            });\n        return promisedCreatedAPI.finally(() => setIsCreating(false));\n    }\n\n    /**\n     *\n     */\n    function createAndPublish() {\n        const streamingApi = new API();\n        setIsPublishButtonClicked(true);\n        createAPI().then((api) => {\n            setIsRevisioning(true);\n            const body = {\n                description: 'Initial Revision',\n            };\n            streamingApi.createRevision(api.id, body)\n                .then((api1) => {\n                    const revisionId = api1.body.id;\n                    Alert.info('API Revision created successfully');\n                    setIsRevisioning(false);\n                    const envList = settings.environment.map((env) => env.name);\n                    const body1 = [];\n                    const getFirstVhost = (envName) => {\n                        const env = settings.environment.find(\n                            (e) => e.name === envName && e.vhosts.length > 0,\n                        );\n                        return env && env.vhosts[0].host;\n                    };\n                    if (envList && envList.length > 0) {\n                        if (envList.includes('Default') && getFirstVhost('Default')) {\n                            body1.push({\n                                name: 'Default',\n                                displayOnDevportal: true,\n                                vhost: getFirstVhost('Default'),\n                            });\n                        } else if (getFirstVhost(envList[0])) {\n                            body1.push({\n                                name: envList[0],\n                                displayOnDevportal: true,\n                                vhost: getFirstVhost(envList[0]),\n                            });\n                        }\n                    }\n                    setIsDeploying(true);\n                    streamingApi.deployRevision(api.id, revisionId, body1)\n                        .then(() => {\n                            Alert.info('API Revision Deployed Successfully');\n                            setIsDeploying(false);\n                            // Publishing API after deploying\n                            setIsPublishing(true);\n                            api.publish()\n                                .then((response) => {\n                                    const { workflowStatus } = response.body;\n                                    if (workflowStatus === APICreateStreamingAPI.WORKFLOW_STATUS.CREATED) {\n                                        Alert.info(intl.formatMessage({\n                                            id: 'Apis.Create.Default.APICreateDefault.success.publishStatus',\n                                            defaultMessage: 'Lifecycle state change request has been sent',\n                                        }));\n                                    } else {\n                                        Alert.info(intl.formatMessage({\n                                            id: 'Apis.Create.Default.APICreateDefault.success.otherStatus',\n                                            defaultMessage: 'API updated successfully',\n                                        }));\n                                    }\n                                    history.push(`/apis/${api.id}/overview`);\n                                })\n                                .catch((error) => {\n                                    if (error.response) {\n                                        Alert.error(error.response.body.description);\n                                        setPageError(error.response.body);\n                                    } else {\n                                        Alert.error(intl.formatMessage({\n                                            id: 'Apis.Create.Default.APICreateDefault.error.errorMessage.publish',\n                                            defaultMessage: 'Something went wrong while publishing the API',\n                                        }));\n                                        setPageError('Something went wrong while publishing the API');\n                                    }\n                                    console.error(error);\n                                })\n                                .finally(() => {\n                                    setIsPublishing(false);\n                                    setIsPublishButtonClicked(false);\n                                });\n                        })\n                        .catch((error) => {\n                            if (error.response) {\n                                Alert.error(error.response.body.description);\n                                setPageError(error.response.body);\n                            } else {\n                                Alert.error(intl.formatMessage({\n                                    id: 'Apis.Create.Default.APICreateDefault.error.errorMessage.deploy.revision',\n                                    defaultMessage: 'Something went wrong while deploying the API Revision',\n                                }));\n                                setPageError('Something went wrong while deploying the API Revision');\n                            }\n                            console.error(error);\n                        })\n                        .finally(() => {\n                            setIsDeploying(false);\n                        });\n                })\n                .catch((error) => {\n                    if (error.response) {\n                        Alert.error(error.response.body.description);\n                        setPageError(error.response.body);\n                    } else {\n                        Alert.error(intl.formatMessage({\n                            id: 'Apis.Create.Default.APICreateDefault.error.errorMessage.create.revision',\n                            defaultMessage: 'Something went wrong while creating the API Revision',\n                        }));\n                        setPageError('Something went wrong while creating the API Revision');\n                    }\n                    console.error(error);\n                })\n                .finally(() => {\n                    setIsRevisioning(false);\n                });\n        });\n    }\n\n    function createAPIOnly() {\n        createAPI().then((api) => {\n            history.push(`/apis/${api.id}/overview`);\n        });\n    }\n\n    const pageTitle = (\n        <>\n            <Typography variant='h5'>\n                <FormattedMessage\n                    id='Apis.Create.StreamingAPI.APICreateStreamingAPI.api.heading'\n                    defaultMessage='Create a Streaming API'\n                />\n            </Typography>\n            <Typography variant='caption'>\n                {isWebSub ? (\n                    <FormattedMessage\n                        id='Apis.Create.StreamingAPI.APICreateStreamingAPI.websub.api.sub.heading'\n                        defaultMessage='Create an API by providing a Name, a Version and a Context'\n                    />\n                ) : (\n                    <FormattedMessage\n                        id='Apis.Create.StreamingAPI.APICreateStreamingAPI.api.sub.heading'\n                        defaultMessage='Create an API by providing a Name, a Version, a Context and the Endpoint'\n                    />\n                )}\n\n            </Typography>\n        </>\n    );\n\n    return (\n        <APICreateBase title={pageTitle}>\n            <Grid container direction='row' justify='center' alignItems='center' spacing={3}>\n                {/* Page error banner */}\n                {pageError && (\n                    <Grid item xs={11}>\n                        <Banner\n                            onClose={() => setPageError(null)}\n                            disableActions\n                            dense\n                            paperProps={{ elevation: 1 }}\n                            type='error'\n                            message={pageError}\n                        />\n                    </Grid>\n                )}\n                {/* end of Page error banner */}\n                <Grid item xs={12}>\n                    {/* This -2 is to counter act with Grid container spacing 3 */}\n                    {isLoading && (\n                        <Box mt={-2}>\n                            <CircularProgress data-testid='loading-publisher-settings' />\n                        </Box>\n                    )}\n                </Grid>\n                <Grid item xs={12} />\n                <Grid item md={1} xs={0} />\n                <Grid item md={11} xs={12}>\n                    <DefaultAPIForm\n                        onValidate={handleOnValidate}\n                        onChange={handleOnChange}\n                        api={apiInputs}\n                        endpointPlaceholderText='Streaming Provider'\n                        appendChildrenBeforeEndpoint\n                        hideEndpoint={hideEndpoint}\n                        isWebSocket={(apiType && apiType === protocolKeys.WebSocket)\n                            || apiInputs.protocol === protocolKeys.WebSocket}\n                    >\n                        <TextField\n                            fullWidth\n                            select\n                            label={(\n                                <>\n                                    <FormattedMessage\n                                        id='Apis.Create.streaming.Components.SelectPolicies.business.plans'\n                                        defaultMessage='Protocol'\n                                    />\n                                    <sup className={classes.mandatoryStar}>*</sup>\n                                </>\n                            )}\n                            value={apiType ? protocolDisplayNames[apiType] : apiInputs.protocol}\n                            disabled={apiType}\n                            name='protocol'\n                            SelectProps={{\n                                multiple: false,\n                                renderValue: (selected) => (selected),\n                            }}\n                            margin='normal'\n                            variant='outlined'\n                            InputProps={{\n                                id: 'itest-id-apipolicies-input',\n                            }}\n                            onChange={handleOnChange}\n                        >\n                            {protocols.map((protocol) => (\n                                <MenuItem\n                                    dense\n                                    disableGutters={false}\n                                    value={protocol.displayName}\n                                >\n                                    <ListItemText primary={protocol.displayName} secondary={protocol.description} />\n                                </MenuItem>\n                            ))}\n                        </TextField>\n                    </DefaultAPIForm>\n                </Grid>\n                <Grid item md={1} xs={0} />\n                <Grid item md={11} xs={12}>\n                    <Grid container direction='row' justify='flex-start' alignItems='center' spacing={2}>\n                        <Grid item>\n                            <Button\n                                variant='contained'\n                                color='primary'\n                                disabled={!(isAPICreatable && apiInputs.isFormValid)}\n                                onClick={createAPIOnly}\n                                data-testid='itest-create-streaming-api-button'\n                            >\n                                Create\n                                {' '}\n                                {isCreating && !isPublishButtonClicked && <CircularProgress size={24} />}\n                            </Button>\n                        </Grid>\n                        {!AuthManager.isNotPublisher() && (\n                            <Grid item>\n                                <Button\n                                    id='itest-id-apicreatedefault-createnpublish'\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={isDeploying || isRevisioning || !isPublishable\n                                        || !isAPICreatable || !apiInputs.isFormValid}\n                                    onClick={createAndPublish}\n                                >\n                                    {(!isPublishing && !isRevisioning && !isDeploying) && 'Create & Publish'}\n                                    {(isPublishing || isRevisioning || isDeploying) && <CircularProgress size={24} />}\n                                    {isCreating && isPublishing && 'Creating API . . .'}\n                                    {!isCreating && isRevisioning && !isDeploying && 'Creating Revision . . .'}\n                                    {!isCreating && isPublishing\n                                        && !isRevisioning && !isDeploying && 'Publishing API . . .'}\n                                    {!isCreating && isPublishing\n                                        && !isRevisioning && isDeploying && 'Deploying Revision . . .'}\n                                </Button>\n                            </Grid>\n                        )}\n                        <Grid item>\n                            <Link to='/apis/'>\n                                <Button variant='text'>\n                                    <FormattedMessage\n                                        id='Apis.Create.Default.APICreateDefault.cancel'\n                                        defaultMessage='Cancel'\n                                    />\n                                </Button>\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </APICreateBase>\n    );\n};\nAPICreateStreamingAPI.WORKFLOW_STATUS = {\n    CREATED: 'CREATED',\n};\n\nexport default withRouter(APICreateStreamingAPI);\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useReducer, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage } from 'react-intl';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DefaultAPIForm from 'AppComponents/Apis/Create/Components/DefaultAPIForm';\nimport APICreateBase from 'AppComponents/Apis/Create/Components/APICreateBase';\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Chip from '@material-ui/core/Chip';\nimport Joi from '@hapi/joi';\nimport { upperCaseString } from 'AppData/stringFormatter';\nimport ExternalEndpoint from 'AppComponents/Apis/Create/AsyncAPI/ExternalEndpoint';\nimport ProvideAsyncAPI from './Steps/ProvideAsyncAPI';\n\n/**\n * Handle API creation from OpenAPI Definition.\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function ApiCreateAsyncAPI(props) {\n    const [wizardStep, setWizardStep] = useState(0);\n    const { history } = props;\n    // eslint-disable-next-line no-use-before-define\n    const classes = useStyles();\n    const [hideEndpoint, setHideEndpoint] = useState(true);\n    const [hideExternalEndpoint, setHideExternalEndpoint] = useState(true);\n    const [isValidExternalEndpoint, setValidExternalEndpoint] = useState(true);\n\n    /**\n     *\n     * Reduce the events triggered from API input fields to current state\n     * @param {*} currentState\n     * @param {*} inputAction\n     * @returns\n     */\n    function apiInputsReducer(currentState, inputAction) {\n        const { action, value } = inputAction;\n        switch (action) {\n            case 'type':\n            case 'inputValue':\n            case 'name':\n            case 'version':\n            case 'endpoint':\n            case 'gatewayVendor':\n            case 'asyncTransportProtocols':\n            case 'protocol':\n            case 'context':\n            case 'policies':\n            case 'isFormValid':\n                return { ...currentState, [action]: value };\n            case 'inputType':\n                return { ...currentState, [action]: value, inputValue: value === 'url' ? '' : null };\n            case 'preSetAPI':\n                return {\n                    ...currentState,\n                    name: value.name.replace(/[&/\\\\#,+()$~%.'\":*?<>{}\\s]/g, ''),\n                    version: value.version,\n                    context: value.context,\n                    endpoint: value.endpoints && value.endpoints[0],\n                    gatewayVendor: value.gatewayVendor,\n                    asyncTransportProtocols: value.asyncTransportProtocols,\n                };\n            case 'externalEndpoint':\n                return { ...currentState, [action]: value };\n            default:\n                return currentState;\n        }\n    }\n\n    const [apiInputs, inputsDispatcher] = useReducer(apiInputsReducer, {\n        type: 'ApiCreateAsyncAPI',\n        inputType: 'url',\n        inputValue: '',\n        formValidity: false,\n    });\n\n    const protocols = [\n        {\n            name: 'ws',\n            displayName: 'WebSocket',\n            description: 'WebSocket API',\n        },\n        {\n            name: 'websub',\n            displayName: 'WebSub',\n            description: 'WebHook API based on WebSub specification',\n        },\n        {\n            name: 'sse',\n            displayName: 'SSE',\n            description: 'Server-Sent Events',\n        },\n        {\n            name: 'other',\n            displayName: 'Other',\n            description: 'Other Async APIs such as AMQP, MQTT etc.',\n        },\n    ];\n\n    const protocolKeys = {\n        WebSocket: 'WS',\n        SSE: 'SSE',\n        WebSub: 'WEBSUB',\n        Other: 'ASYNC',\n    };\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function handleOnChange(event) {\n        const { name: action, value } = event.target;\n        inputsDispatcher({ action, value });\n    }\n\n    /**\n     * Validate the external endpoint URL\n     * @param value endpoint URL\n     * @returns {boolean} validity of the URL\n     */\n    function validateEndpoint(value) {\n        if (value) {\n            const urlSchema = Joi.string().uri().empty();\n            return !urlSchema.validate(value).error;\n        }\n        return false;\n    }\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function handleOnChangeForProtocol(event) {\n        const { name: action, value } = event.target;\n        if (value === 'WebSub') {\n            setHideEndpoint(true);\n            setHideExternalEndpoint(true);\n            setValidExternalEndpoint(true);\n        } else if (value === 'Other') {\n            setHideEndpoint(true);\n            setHideExternalEndpoint(false);\n            setValidExternalEndpoint(validateEndpoint(apiInputs.externalEndpoint));\n        } else {\n            setHideEndpoint(false);\n            setHideExternalEndpoint(true);\n            setValidExternalEndpoint(true);\n        }\n        inputsDispatcher({ action, value });\n    }\n\n    /**\n     *\n     * Set the validity of the API Inputs form\n     * @param {*} isValidForm\n     * @param {*} validationState\n     */\n    function handleOnValidate(isFormValid) {\n        inputsDispatcher({\n            action: 'isFormValid',\n            value: isFormValid,\n        });\n    }\n\n    const [isCreating, setCreating] = useState();\n\n    /**\n     *\n     *\n     * @param {*} params\n     */\n    function createAPI() {\n        setCreating(true);\n        const {\n            name, version, context, endpoint, policies, inputValue, inputType, protocol, gatewayVendor,\n            externalEndpoint,\n        } = apiInputs;\n        const additionalProperties = {\n            name,\n            version,\n            context,\n            policies,\n            type: protocolKeys[protocol],\n            gatewayVendor,\n        };\n        if (gatewayVendor === 'solace') {\n            additionalProperties.type = protocolKeys.WebSub;\n        }\n        if (endpoint) {\n            additionalProperties.endpointConfig = {\n                endpoint_type: 'http',\n                sandbox_endpoints: {\n                    url: endpoint,\n                },\n                production_endpoints: {\n                    url: endpoint,\n                },\n            };\n        }\n        if (protocolKeys[protocol] === 'ASYNC') {\n            additionalProperties.advertiseInfo = {\n                advertised: true,\n                apiExternalProductionEndpoint: externalEndpoint,\n                apiExternalSandboxEndpoint: externalEndpoint,\n                originalDevPortalUrl: '',\n                apiOwner: 'admin',\n                vendor: 'WSO2',\n            };\n        }\n        const newAPI = new API(additionalProperties);\n        const promisedResponse = inputType === 'file'\n            ? newAPI.importAsyncAPIByFile(inputValue) : newAPI.importAsyncAPIByUrl(inputValue);\n        promisedResponse\n            .then((api) => {\n                Alert.info('API created successfully');\n                history.push(`/apis/${api.id}/overview`);\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error('Something went wrong while adding the API');\n                }\n                console.error(error);\n            })\n            .finally(() => setCreating(false));\n    }\n\n    return (\n        <APICreateBase\n            title={(\n                <>\n                    <Typography variant='h5'>\n                        <FormattedMessage\n                            id='Apis.Create.AsyncAPI.ApiCreateAsyncAPI.heading'\n                            defaultMessage='Create an API using an AsyncAPI definition.'\n                        />\n                    </Typography>\n                    <Typography variant='caption'>\n                        <FormattedMessage\n                            id='Apis.Create.AsyncAPI.ApiCreateAsyncAPI.sub.heading'\n                            defaultMessage='Create an API using an existing AsyncAPI definition file or URL.'\n                        />\n                    </Typography>\n                </>\n            )}\n        >\n            <Box>\n                <Stepper alternativeLabel activeStep={0}>\n                    <Step>\n                        <StepLabel>\n                            <FormattedMessage\n                                id='Apis.Create.AsyncAPI.ApiCreateAsyncAPI.wizard.one'\n                                defaultMessage='Provide AsyncAPI'\n                            />\n                        </StepLabel>\n                    </Step>\n\n                    <Step>\n                        <StepLabel>\n                            <FormattedMessage\n                                id='Apis.Create.AsyncAPI.ApiCreateAsyncAPI.wizard.two'\n                                defaultMessage='Create API'\n                            />\n                        </StepLabel>\n                    </Step>\n                </Stepper>\n            </Box>\n\n            <Grid container spacing={3}>\n                <Grid item xs={12} />\n                <Grid item xs={1} />\n                <Grid item xs={11}>\n                    {wizardStep === 0 && (\n                        <ProvideAsyncAPI\n                            onValidate={handleOnValidate}\n                            apiInputs={apiInputs}\n                            inputsDispatcher={inputsDispatcher}\n                        />\n                    )}\n                    {wizardStep === 1 && (\n                        <DefaultAPIForm\n                            onValidate={handleOnValidate}\n                            onChange={handleOnChange}\n                            api={apiInputs}\n                            isAPIProduct={false}\n                            hideEndpoint={hideEndpoint}\n                            endpointPlaceholderText='Streaming Provider'\n                            appendChildrenBeforeEndpoint\n                        >\n                            <Grid container spacing={2}>\n                                {apiInputs.gatewayVendor === 'solace'\n                                && apiInputs.asyncTransportProtocols.length !== 0 && (\n                                    <>\n                                        <Grid item xs={12} md={6} lg={3}>\n                                            <Typography component='p' variant='subtitle2'>\n                                                <FormattedMessage\n                                                    id='Apis.Details.NewOverview.MetaData.solace.transports'\n                                                    defaultMessage='Available Protocols'\n                                                />\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item xs={12} md={6} lg={9}>\n                                            {apiInputs.asyncTransportProtocols.map((protocol) => (\n                                                <Chip\n                                                    key={protocol}\n                                                    label={upperCaseString(protocol)}\n                                                    style={{\n                                                        'font-size': 13,\n                                                        height: 20,\n                                                        marginRight: 5,\n                                                    }}\n                                                    color='primary'\n                                                />\n                                            ))}\n                                        </Grid>\n                                    </>\n                                )}\n                            </Grid>\n                            {apiInputs.gatewayVendor === 'wso2' && (\n                                <TextField\n                                    fullWidth\n                                    select\n                                    label={(\n                                        <>\n                                            <FormattedMessage\n                                                id='Apis.Create.asyncAPI.Components.SelectPolicies.business.plans'\n                                                defaultMessage='Protocol'\n                                            />\n                                            <sup className={classes.mandatoryStar}>*</sup>\n                                        </>\n                                    )}\n                                    value={apiInputs.protocol}\n                                    name='protocol'\n                                    SelectProps={{\n                                        multiple: false,\n                                        renderValue: (selected) => (selected),\n                                    }}\n                                    margin='normal'\n                                    variant='outlined'\n                                    InputProps={{\n                                        id: 'itest-id-apipolicies-input',\n                                    }}\n                                    onChange={handleOnChangeForProtocol}\n                                >\n                                    {protocols.map((protocol) => (\n                                        <MenuItem\n                                            dense\n                                            disableGutters={false}\n                                            id={protocol.name}\n                                            key={protocol.name}\n                                            value={protocol.displayName}\n                                        >\n                                            <ListItemText\n                                                primary={protocol.displayName}\n                                                secondary={protocol.description}\n                                            />\n                                        </MenuItem>\n                                    ))}\n                                </TextField>\n                            )}\n                            {!hideExternalEndpoint && (\n                                <ExternalEndpoint\n                                    classes={classes}\n                                    apiInputs={apiInputs}\n                                    inputsDispatcher={inputsDispatcher}\n                                    isValidExternalEndpoint={isValidExternalEndpoint}\n                                    setValidExternalEndpoint={setValidExternalEndpoint}\n                                    validateEndpoint={validateEndpoint}\n                                />\n                            )}\n                        </DefaultAPIForm>\n                    )}\n                </Grid>\n                <Grid item xs={1} />\n                <Grid item xs={11}>\n                    <Grid container direction='row' justify='flex-start' alignItems='center' spacing={2}>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Link to='/apis/'>\n                                    <Button>\n                                        <FormattedMessage\n                                            id='Apis.Create.AsyncAPI.ApiCreateAsyncAPI.cancel'\n                                            defaultMessage='Cancel'\n                                        />\n                                    </Button>\n                                </Link>\n                            )}\n                            {wizardStep === 1 && (\n                                <Button onClick={() => setWizardStep((step) => step - 1)}>\n                                    Back\n                                </Button>\n                            )}\n                        </Grid>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Button\n                                    onClick={() => setWizardStep((step) => step + 1)}\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid}\n                                >\n                                    Next\n                                </Button>\n                            )}\n                            {wizardStep === 1 && (\n                                <Button\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid || isCreating || !isValidExternalEndpoint}\n                                    onClick={createAPI}\n                                >\n                                    Create\n                                    {' '}\n                                    {isCreating && <CircularProgress size={24} />}\n                                </Button>\n                            )}\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </APICreateBase>\n    );\n}\n\nApiCreateAsyncAPI.propTypes = {\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n    mandatoryStar: {\n        color: theme.palette.error.main,\n        marginLeft: theme.spacing(0.1),\n    },\n    externalEndpointWarning: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n    },\n    alertTitle: {\n        fontWeight: theme.typography.fontWeightMedium,\n        marginTop: -2,\n    },\n}));\n","/*\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport TextField from '@material-ui/core/TextField';\nimport MuiAlert from 'AppComponents/Shared/MuiAlert';\nimport Typography from '@material-ui/core/Typography';\n\nconst ExternalEndpoint = (props) => {\n    const {\n        classes, apiInputs, inputsDispatcher, isValidExternalEndpoint, setValidExternalEndpoint, validateEndpoint,\n    } = props;\n    const handleOnChangeExternalEndpoint = (event) => {\n        const { name: action, value } = event.target;\n        setValidExternalEndpoint(validateEndpoint(value));\n        inputsDispatcher({ action, value });\n    };\n    return (\n        <>\n            <TextField\n                fullWidth\n                id='itest-id-api-external-endpoint-input'\n                label={(\n                    <>\n                        <FormattedMessage\n                            id='Apis.Create.AsyncAPI.ApiCreateAsyncAPI.externalEndpoint'\n                            defaultMessage='External Endpoint'\n                        />\n                        <sup className={classes.mandatoryStar}>*</sup>\n                    </>\n                )}\n                name='externalEndpoint'\n                value={apiInputs.externalEndpoint}\n                onChange={handleOnChangeExternalEndpoint}\n                helperText={\n                    !isValidExternalEndpoint && (\n                        <div style={{ marginTop: '10px' }}>\n                            <FormattedMessage\n                                id={'Apis.Create.AsyncAPI.ApiCreateAsyncAPI'\n                                + '.externalEndpoint.error'}\n                                defaultMessage='Invalid Endpoint URL'\n                            />\n                        </div>\n                    )\n                }\n                error={!isValidExternalEndpoint}\n                margin='normal'\n                variant='outlined'\n            />\n            <MuiAlert severity='warning' className={classes.externalEndpointWarning}>\n                <Typography gutterBottom component='div' className={classes.alertTitle}>\n                    <FormattedMessage\n                        id='Apis.Create.AsyncAPI.ApiCreateAsyncAPI.advertiseOnly.warning.title'\n                        defaultMessage='\"Other\" type streaming APIs will be created as third party APIs.'\n                    />\n                </Typography>\n                <FormattedMessage\n                    id='Apis.Create.AsyncAPI.ApiCreateAsyncAPI.advertiseOnly.warning'\n                    defaultMessage={'API Manager only supports the streaming APIs of types'\n                    + ' WebSocket, SSE and WebSub. Please create one of the supported types'\n                    + ' if you want to deploy it in the gateway.'}\n                />\n            </MuiAlert>\n        </>\n    );\n};\n\nexport default ExternalEndpoint;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport { InputAdornment, IconButton, Icon } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Chip from '@material-ui/core/Chip';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport green from '@material-ui/core/colors/green';\nimport APIValidation from 'AppData/APIValidation';\nimport API from 'AppData/api';\n\nconst useStyles = makeStyles((theme) => ({\n    mandatoryStar: {\n        color: theme.palette.error.main,\n        marginLeft: theme.spacing(0.1),\n    },\n    helperTextContext: {\n        '& p': {\n            textOverflow: 'ellipsis',\n            width: 400,\n            display: 'block',\n            whiteSpace: 'nowrap',\n            overflow: 'hidden',\n        },\n    },\n    endpointValidChip: {\n        color: 'green',\n        border: '1px solid green',\n    },\n    endpointInvalidChip: {\n        color: '#ffd53a',\n        border: '1px solid #ffd53a',\n    },\n    endpointErrorChip: {\n        color: 'red',\n        border: '1px solid red',\n    },\n    iconButton: {\n        padding: theme.spacing(1),\n    },\n    iconButtonValid: {\n        padding: theme.spacing(1),\n        color: green[500],\n    },\n}));\n\n/**\n *\n * Return the actual API context that will be exposed in the gateway.\n * If the context value contains `{version}` placeholder text it will be replaced with the actual version value.\n * If there is no such placeholder text in the context, The version will be appended to the context\n * i:e /context/version\n * Parameter expect an object containing `context` and `version` properties.\n * @param {String} context API Context\n * @param {String} version API Version string\n * @param isWebSocket check whether it is a webSocketAPI\n * @returns {String} Derived actual context string\n */\nfunction actualContext({ context, version }, isWebSocket) {\n    let initialContext;\n    // eslint-disable-next-line no-unused-expressions\n    isWebSocket ? (initialContext = '{channel}/{version}') : (initialContext = '{context}/{version}');\n    if (context) {\n        initialContext = context;\n        if (context.indexOf('{version}') < 0) {\n            initialContext = context + '/{version}';\n        }\n    }\n    if (version) {\n        initialContext = initialContext.replace('{version}', version);\n    }\n    return initialContext;\n}\n\n/**\n * This method used to  compare the context values\n * @param {*} value  input value\n * @param {*} result resulted value\n * @returns {Boolean} true or false\n */\nfunction checkContext(value, result) {\n    const contextVal = value.startsWith('/') ? value.toLowerCase() : '/' + value.toLowerCase();\n    return contextVal === result.toLowerCase();\n}\n\n/**\n * Improved API create default form\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function DefaultAPIForm(props) {\n    const {\n        onChange, onValidate, api, isAPIProduct, isWebSocket, children, appendChildrenBeforeEndpoint, hideEndpoint,\n    } = props;\n    const classes = useStyles();\n    const [validity, setValidity] = useState({});\n    const [isEndpointValid, setIsEndpointValid] = useState();\n    const [statusCode, setStatusCode] = useState('');\n    const [isUpdating, setUpdating] = useState(false);\n    const [isErrorCode, setIsErrorCode] = useState(false);\n    const iff = (condition, then, otherwise) => (condition ? then : otherwise);\n\n    // Check the provided API validity on mount, TODO: Better to use Joi schema here ~tmkb\n    useEffect(() => {\n        onValidate(Boolean(api.name)\n                && (isAPIProduct || Boolean(api.version))\n                && Boolean(api.context));\n    }, []);\n\n    const updateValidity = (newState) => {\n        let isFormValid = Object.entries(newState).length > 0\n            && Object.entries(newState)\n                .map(([, value]) => value === null || value === undefined)\n                .reduce((acc, cVal) => acc && cVal); // Aggregate the individual validation states\n        // TODO: refactor following redundant validation.\n        // The valid state should available in the above reduced state ~tmkb\n        // if isAPIProduct gets true version validation has been skipped\n        isFormValid = isFormValid\n            && Boolean(api.name)\n            && (isAPIProduct || Boolean(api.version))\n            && Boolean(api.context);\n        onValidate(isFormValid, validity);\n        setValidity(newState);\n    };\n    /**\n     * Trigger the provided onValidate call back on each input validation run\n     * Do the validation state aggregation and call the onValidate method with aggregated value\n     * @param {string} field The input field.\n     * @param {string} value Validation state object\n     */\n    function validate(field, value) {\n        switch (field) {\n            case 'name': {\n                const nameValidity = APIValidation.apiName.validate(value, { abortEarly: false }).error;\n                if (nameValidity === null) {\n                    APIValidation.apiParameter.validate(field + ':' + value).then((result) => {\n                        if (result.body.list.length > 0 && value.toLowerCase() === result.body.list[0]\n                            .name?.toLowerCase()) {\n                            updateValidity({\n                                ...validity,\n                                name: { details: [{ message: 'Name ' + value + ' already exists' }] },\n                            });\n                        } else {\n                            updateValidity({ ...validity, name: nameValidity });\n                        }\n                    });\n                } else {\n                    updateValidity({ ...validity, name: nameValidity });\n                }\n                break;\n            }\n            case 'context': {\n                const contextValidity = APIValidation.apiContext.required().validate(value, { abortEarly: false })\n                    .error;\n                const apiContext = value.startsWith('/') ? value : '/' + value;\n                if (contextValidity === null) {\n                    APIValidation.apiParameter.validate(field + ':' + apiContext).then((result) => {\n                        const count = result.body.list.length;\n                        if (count > 0 && checkContext(value, result.body.list[0].context)) {\n                            updateValidity({\n                                ...validity,\n                                // eslint-disable-next-line max-len\n                                context: { details: [{ message:  isWebSocket ? apiContext + ' channel already exists' : apiContext + ' context already exists' }] },\n                            });\n                        } else if (count > 0 && checkContext(value, result.body.list[0].contextTemplate)) {\n                            updateValidity({\n                                ...validity,\n                                context: { details: [{ message: apiContext + ' dynamic context already exists' }] },\n                            });\n                        } else {\n                            updateValidity({ ...validity, context: contextValidity, version: null });\n                        }\n                    });\n                } else {\n                    updateValidity({ ...validity, context: contextValidity });\n                }\n                break;\n            }\n            case 'version': {\n                const versionValidity = APIValidation.apiVersion.required().validate(value).error;\n                if (versionValidity === null) {\n                    const apiVersion = api.context.includes('/') ? api.context + '/' + value : '/'\n                    + api.context + '/' + value;\n                    APIValidation.apiParameter.validate('context:' + api.context\n                    + '/' + value).then((result) => {\n                        // version of APIProduct equals to 1.0.0\n                        if (result.body.list.length > 0 && (\n                            (result.body.list[0].version !== undefined\n                            && (result.body.list[0].version.toLowerCase()\n                                === value.toLowerCase())) || value === '1.0.0')) {\n                            updateValidity({\n                                ...validity,\n                                version: { message: apiVersion + ' context with version already exists' },\n                            });\n                        } else {\n                            updateValidity({ ...validity, version: versionValidity });\n                        }\n                    });\n                } else {\n                    updateValidity({ ...validity, version: versionValidity });\n                }\n                break;\n            }\n            case 'endpoint': {\n                if (isWebSocket && value && value.length > 0) {\n                    const wsUrlValidity = APIValidation.wsUrl.validate(value).error;\n                    updateValidity({ ...validity, endpointURL: wsUrlValidity });\n                }\n                break;\n            }\n            default: {\n                break;\n            }\n        }\n    }\n\n    function testEndpoint(endpoint) {\n        setUpdating(true);\n        const restApi = new API();\n        restApi.testEndpoint(endpoint)\n            .then((result) => {\n                if (result.body.error !== null) {\n                    setStatusCode(result.body.error);\n                    setIsErrorCode(true);\n                } else {\n                    setStatusCode(result.body.statusCode + ' ' + result.body.statusMessage);\n                    setIsErrorCode(false);\n                }\n                if (result.body.statusCode >= 200 && result.body.statusCode < 300) {\n                    setIsEndpointValid(true);\n                    setIsErrorCode(false);\n                } else {\n                    setIsEndpointValid(false);\n                }\n            }).finally(() => {\n                setUpdating(false);\n            });\n    }\n\n    return (\n        <Grid item md={11}>\n            <form noValidate autoComplete='off'>\n                <TextField\n                    autoFocus\n                    fullWidth\n                    id='api-name'\n                    error={Boolean(validity.name)}\n                    label={(\n                        <>\n                            <FormattedMessage id='Apis.Create.Components.DefaultAPIForm.name' defaultMessage='Name' />\n                            <sup className={classes.mandatoryStar}>*</sup>\n                        </>\n                    )}\n                    helperText={\n                        validity.name\n                        && validity.name.details.map((detail, index) => {\n                            return <div style={{ marginTop: index !== 0 && '10px' }}>{detail.message}</div>;\n                        })\n                    }\n                    value={api.name}\n                    name='name'\n                    onChange={onChange}\n                    InputProps={{\n                        id: 'itest-id-apiname-input',\n                        onBlur: ({ target: { value } }) => {\n                            validate('name', value);\n                        },\n                    }}\n                    InputLabelProps={{\n                        for: 'itest-id-apiname-input',\n                    }}\n                    margin='normal'\n                    variant='outlined'\n                />\n                <Grid container spacing={2}>\n                    {!isAPIProduct ? (\n                        <>\n                            <Grid item md={8} xs={6}>\n                                <TextField\n                                    fullWidth\n                                    id='context'\n                                    error={Boolean(validity.context)}\n                                    label={(\n                                        <>\n                                            {isWebSocket ? (\n                                                <FormattedMessage\n                                                    id='Apis.Create.Components.DefaultAPIForm.api.channel'\n                                                    defaultMessage='Channel'\n                                                />\n                                            ) : (\n                                                <FormattedMessage\n                                                    id='Apis.Create.Components.DefaultAPIForm.api.context'\n                                                    defaultMessage='Context'\n                                                />\n                                            )}\n                                            <sup className={classes.mandatoryStar}>*</sup>\n                                        </>\n                                    )}\n                                    name='context'\n                                    value={api.context}\n                                    onChange={onChange}\n                                    InputProps={{\n                                        id: 'itest-id-apicontext-input',\n                                        onBlur: ({ target: { value } }) => {\n                                            validate('context', value);\n                                        },\n                                    }}\n                                    InputLabelProps={{\n                                        for: 'itest-id-apicontext-input',\n                                    }}\n                                    helperText={\n                                        (validity.context\n                                            && validity.context.details.map((detail, index) => {\n                                                return (\n                                                    <div style={{ marginTop: index !== 0 && '10px' }}>\n                                                        {detail.message}\n                                                    </div>\n                                                );\n                                            }))\n                                        // eslint-disable-next-line max-len\n                                        || `API will be exposed in ${actualContext(api, isWebSocket)} context at the gateway`\n                                    }\n                                    classes={{ root: classes.helperTextContext }}\n                                    margin='normal'\n                                    variant='outlined'\n                                />\n                            </Grid>\n                            <Grid item md={4} xs={6}>\n                                <TextField\n                                    fullWidth\n                                    id='version'\n                                    error={Boolean(validity.version)}\n                                    label={(\n                                        <>\n                                            <FormattedMessage\n                                                id='Apis.Create.Components.DefaultAPIForm.version'\n                                                defaultMessage='Version'\n                                            />\n                                            <sup className={classes.mandatoryStar}>*</sup>\n                                        </>\n                                    )}\n                                    name='version'\n                                    value={api.version}\n                                    onChange={onChange}\n                                    InputProps={{\n                                        id: 'itest-id-apiversion-input',\n                                        onBlur: ({ target: { value } }) => {\n                                            validate('version', value);\n                                        },\n                                    }}\n                                    InputLabelProps={{\n                                        for: 'itest-id-apiversion-input',\n                                    }}\n                                    helperText={validity.version && validity.version.message}\n                                    margin='normal'\n                                    variant='outlined'\n                                />\n                            </Grid>\n                        </>\n                    ) : (\n                        <>\n                            <Grid item md={12}>\n                                <TextField\n                                    fullWidth\n                                    id='context'\n                                    error={Boolean(validity.context)}\n                                    label={(\n                                        <>\n                                            <FormattedMessage\n                                                id='Apis.Create.Components.DefaultAPIForm.api.product.context'\n                                                defaultMessage='Context'\n                                            />\n                                            <sup className={classes.mandatoryStar}>*</sup>\n                                        </>\n                                    )}\n                                    name='context'\n                                    value={api.context}\n                                    onChange={onChange}\n                                    InputProps={{\n                                        onBlur: ({ target: { value } }) => {\n                                            validate('context', value);\n                                        },\n                                    }}\n                                    helperText={\n                                        (validity.context\n                                            && validity.context.details.map((detail, index) => {\n                                                return (\n                                                    <div\n                                                        key={detail.message}\n                                                        style={{ marginTop: index !== 0 && '10px' }}\n                                                    >\n                                                        {detail.message}\n                                                    </div>\n                                                );\n                                            }))\n                                        || `API Product will be exposed in ${actualContext(api)} context at the gateway`\n                                    }\n                                    margin='normal'\n                                    variant='outlined'\n                                />\n                            </Grid>\n                        </>\n                    )}\n                </Grid>\n                {appendChildrenBeforeEndpoint && !!children && children}\n                {!isAPIProduct && !hideEndpoint && (\n                    <TextField\n                        fullWidth\n                        id='itest-id-apiendpoint-input'\n                        label='Endpoint'\n                        name='endpoint'\n                        value={api.endpoint}\n                        onChange={onChange}\n                        helperText={\n                            (validity.endpointURL\n                                && validity.endpointURL.details.map((detail, index) => {\n                                    return (\n                                        <div style={{ marginTop: index !== 0 && '10px' }}>\n                                            {detail.message}\n                                        </div>\n                                    );\n                                }))\n                        }\n                        error={Boolean(validity.endpointURL)}\n                        margin='normal'\n                        variant='outlined'\n                        InputProps={{\n                            onBlur: ({ target: { value } }) => {\n                                validate('endpoint', value);\n                            },\n                            endAdornment: (\n                                <InputAdornment position='end'>\n                                    {statusCode && (\n                                        <Chip\n                                            label={statusCode}\n                                            className={isEndpointValid ? classes.endpointValidChip : iff(\n                                                isErrorCode,\n                                                classes.endpointErrorChip, classes.endpointInvalidChip,\n                                            )}\n                                            variant='outlined'\n                                        />\n                                    )}\n                                    {!isWebSocket && (\n                                        <IconButton\n                                            className={isEndpointValid ? classes.iconButtonValid : classes.iconButton}\n                                            aria-label='TestEndpoint'\n                                            onClick={() => testEndpoint(api.endpoint)}\n                                            disabled={isUpdating}\n                                        >\n                                            {isUpdating\n                                                ? <CircularProgress size={20} />\n                                                : (\n                                                    <Icon>\n                                                        check_circle\n                                                    </Icon>\n                                                )}\n                                        </IconButton>\n                                    )}\n                                </InputAdornment>\n                            ),\n                        }}\n                    />\n                )}\n\n                {!appendChildrenBeforeEndpoint && !!children && children}\n            </form>\n            <Grid container direction='row' justify='flex-end' alignItems='center'>\n                <Grid item>\n                    <Typography variant='caption' display='block' gutterBottom>\n                        <sup style={{ color: 'red' }}>*</sup>\n                        {' '}\n                        Mandatory fields\n                    </Typography>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}\n\nDefaultAPIForm.defaultProps = {\n    onValidate: () => {},\n    api: {}, // Uncontrolled component\n    isWebSocket: false,\n};\nDefaultAPIForm.propTypes = {\n    api: PropTypes.shape({}),\n    isAPIProduct: PropTypes.shape({}).isRequired,\n    isWebSocket: PropTypes.shape({}),\n    onChange: PropTypes.func.isRequired,\n    onValidate: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\n/**\n * Base component for all API create forms\n *\n * @param {Object} props title and children components are expected\n * @returns {React.Component} Base element\n */\nexport default function APICreateBase(props) {\n    const { title, children } = props;\n    return (\n        <Grid container spacing={3}>\n            <Grid item xs={12} />\n            {/*\n            Following two grids control the placement of whole create page\n            For centering the content better use `container` props, but instead used an empty grid item for flexibility\n             */}\n            <Grid item sm={false} md={3} />\n            <Grid item sm={12} md={6}>\n                <Grid container spacing={5}>\n                    <Grid item md={12}>\n                        {title}\n                    </Grid>\n                    <Grid item xs={12} md={12}>\n                        <Paper elevation={0}>{children}</Paper>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}\nAPICreateBase.propTypes = {\n    title: PropTypes.element.isRequired,\n    children: PropTypes.arrayOf(PropTypes.element).isRequired,\n};\n"],"sourceRoot":""}